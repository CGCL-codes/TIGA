-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_recv_krnl_recvData_handshake is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    nextRxPacketLength3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    nextRxPacketLength3_full_n : IN STD_LOGIC;
    nextRxPacketLength3_write : OUT STD_LOGIC;
    expRxBytePerSession_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    expRxBytePerSession_empty_n : IN STD_LOGIC;
    expRxBytePerSession_read : OUT STD_LOGIC;
    s_axis_tcp_notification_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    s_axis_tcp_notification_TVALID : IN STD_LOGIC;
    s_axis_tcp_notification_TREADY : OUT STD_LOGIC;
    s_axis_tcp_notification_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    s_axis_tcp_notification_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    s_axis_tcp_notification_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axis_tcp_read_pkg_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axis_tcp_read_pkg_TVALID : OUT STD_LOGIC;
    m_axis_tcp_read_pkg_TREADY : IN STD_LOGIC;
    m_axis_tcp_read_pkg_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axis_tcp_read_pkg_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axis_tcp_read_pkg_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    expRxBytePerSession_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    expRxBytePerSession_out_full_n : IN STD_LOGIC;
    expRxBytePerSession_out_write : OUT STD_LOGIC );
end;


architecture behav of hls_recv_krnl_recvData_handshake is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal nextRxPacketLength3_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_reg_225 : STD_LOGIC_VECTOR (0 downto 0);
    signal expRxBytePerSession_blk_n : STD_LOGIC;
    signal s_axis_tcp_notification_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_nbreadreq_fu_96_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_axis_tcp_read_pkg_TDATA_blk_n : STD_LOGIC;
    signal expRxBytePerSession_out_blk_n : STD_LOGIC;
    signal expRxBytePerSession_read_reg_211 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op84_write_state3 : BOOLEAN;
    signal ap_predicate_op85_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal length_V_fu_157_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal length_V_reg_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln874_fu_167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_176_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal rxByteCnt_V_fu_78 : STD_LOGIC_VECTOR (63 downto 0);
    signal rxByteCnt_V_1_fu_184_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_rxByteCnt_V_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln208_fu_180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rxByteCnt_V_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rxByteCnt_V_fu_78 <= ap_const_lv64_0;
            elsif (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln874_fu_167_p2 = ap_const_lv1_0))) then 
                rxByteCnt_V_fu_78 <= rxByteCnt_V_1_fu_184_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                expRxBytePerSession_read_reg_211 <= expRxBytePerSession_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln874_reg_225 <= icmp_ln874_fu_167_p2;
                length_V_reg_220 <= s_axis_tcp_notification_TDATA(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln874_fu_167_p2 = ap_const_lv1_0))) then
                p_Result_s_reg_229 <= p_Result_s_fu_176_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_216 <= tmp_nbreadreq_fu_96_p6;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, expRxBytePerSession_empty_n, expRxBytePerSession_out_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(nextRxPacketLength3_full_n, s_axis_tcp_notification_TVALID, m_axis_tcp_read_pkg_TREADY, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6, ap_predicate_op84_write_state3, ap_predicate_op85_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (s_axis_tcp_notification_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op85_write_state3 = ap_const_boolean_1) and (nextRxPacketLength3_full_n = ap_const_logic_0)) or ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (m_axis_tcp_read_pkg_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(nextRxPacketLength3_full_n, s_axis_tcp_notification_TVALID, m_axis_tcp_read_pkg_TREADY, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6, ap_predicate_op84_write_state3, ap_predicate_op85_write_state3, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (s_axis_tcp_notification_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op85_write_state3 = ap_const_boolean_1) and (nextRxPacketLength3_full_n = ap_const_logic_0)) or ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (m_axis_tcp_read_pkg_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(nextRxPacketLength3_full_n, s_axis_tcp_notification_TVALID, m_axis_tcp_read_pkg_TREADY, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6, ap_predicate_op84_write_state3, ap_predicate_op85_write_state3, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (s_axis_tcp_notification_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op85_write_state3 = ap_const_boolean_1) and (nextRxPacketLength3_full_n = ap_const_logic_0)) or ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (m_axis_tcp_read_pkg_TREADY = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, expRxBytePerSession_empty_n, expRxBytePerSession_out_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(s_axis_tcp_notification_TVALID, tmp_nbreadreq_fu_96_p6)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (s_axis_tcp_notification_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(m_axis_tcp_read_pkg_TREADY, ap_predicate_op84_write_state3)
    begin
                ap_block_state3_io <= ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (m_axis_tcp_read_pkg_TREADY = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(nextRxPacketLength3_full_n, m_axis_tcp_read_pkg_TREADY, ap_predicate_op84_write_state3, ap_predicate_op85_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((ap_predicate_op85_write_state3 = ap_const_boolean_1) and (nextRxPacketLength3_full_n = ap_const_logic_0)) or ((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (m_axis_tcp_read_pkg_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln878_fu_198_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_198_p2 = ap_const_lv1_0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op84_write_state3_assign_proc : process(tmp_reg_216, icmp_ln874_reg_225)
    begin
                ap_predicate_op84_write_state3 <= ((icmp_ln874_reg_225 = ap_const_lv1_0) and (tmp_reg_216 = ap_const_lv1_1));
    end process;


    ap_predicate_op85_write_state3_assign_proc : process(tmp_reg_216, icmp_ln874_reg_225)
    begin
                ap_predicate_op85_write_state3 <= ((icmp_ln874_reg_225 = ap_const_lv1_0) and (tmp_reg_216 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_rxByteCnt_V_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6, icmp_ln874_fu_167_p2, rxByteCnt_V_fu_78, rxByteCnt_V_1_fu_184_p2)
    begin
        if (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln874_fu_167_p2 = ap_const_lv1_0))) then 
            ap_sig_allocacmp_rxByteCnt_V_2 <= rxByteCnt_V_1_fu_184_p2;
        else 
            ap_sig_allocacmp_rxByteCnt_V_2 <= rxByteCnt_V_fu_78;
        end if; 
    end process;


    expRxBytePerSession_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, expRxBytePerSession_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            expRxBytePerSession_blk_n <= expRxBytePerSession_empty_n;
        else 
            expRxBytePerSession_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    expRxBytePerSession_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, expRxBytePerSession_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            expRxBytePerSession_out_blk_n <= expRxBytePerSession_out_full_n;
        else 
            expRxBytePerSession_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    expRxBytePerSession_out_din <= expRxBytePerSession_dout;

    expRxBytePerSession_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, expRxBytePerSession_empty_n, expRxBytePerSession_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            expRxBytePerSession_out_write <= ap_const_logic_1;
        else 
            expRxBytePerSession_out_write <= ap_const_logic_0;
        end if; 
    end process;


    expRxBytePerSession_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, expRxBytePerSession_empty_n, expRxBytePerSession_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (expRxBytePerSession_out_full_n = ap_const_logic_0) or (expRxBytePerSession_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            expRxBytePerSession_read <= ap_const_logic_1;
        else 
            expRxBytePerSession_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln874_fu_167_p2 <= "1" when (length_V_fu_157_p4 = ap_const_lv16_0) else "0";
    icmp_ln878_fu_198_p2 <= "1" when (unsigned(ap_sig_allocacmp_rxByteCnt_V_2) < unsigned(expRxBytePerSession_read_reg_211)) else "0";
    length_V_fu_157_p4 <= s_axis_tcp_notification_TDATA(31 downto 16);
    m_axis_tcp_read_pkg_TDATA <= p_Result_s_reg_229;

    m_axis_tcp_read_pkg_TDATA_blk_n_assign_proc : process(m_axis_tcp_read_pkg_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_216, icmp_ln874_reg_225)
    begin
        if (((icmp_ln874_reg_225 = ap_const_lv1_0) and (tmp_reg_216 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tcp_read_pkg_TDATA_blk_n <= m_axis_tcp_read_pkg_TREADY;
        else 
            m_axis_tcp_read_pkg_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_tcp_read_pkg_TKEEP <= ap_const_lv4_0;
    m_axis_tcp_read_pkg_TLAST <= ap_const_lv1_0;
    m_axis_tcp_read_pkg_TSTRB <= ap_const_lv4_0;

    m_axis_tcp_read_pkg_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op84_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op84_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tcp_read_pkg_TVALID <= ap_const_logic_1;
        else 
            m_axis_tcp_read_pkg_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    nextRxPacketLength3_blk_n_assign_proc : process(nextRxPacketLength3_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_216, icmp_ln874_reg_225)
    begin
        if (((icmp_ln874_reg_225 = ap_const_lv1_0) and (tmp_reg_216 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nextRxPacketLength3_blk_n <= nextRxPacketLength3_full_n;
        else 
            nextRxPacketLength3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    nextRxPacketLength3_din <= length_V_reg_220;

    nextRxPacketLength3_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op85_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op85_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            nextRxPacketLength3_write <= ap_const_logic_1;
        else 
            nextRxPacketLength3_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_176_p1 <= s_axis_tcp_notification_TDATA(32 - 1 downto 0);
    rxByteCnt_V_1_fu_184_p2 <= std_logic_vector(unsigned(rxByteCnt_V_fu_78) + unsigned(zext_ln208_fu_180_p1));

    s_axis_tcp_notification_TDATA_blk_n_assign_proc : process(s_axis_tcp_notification_TVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6)
    begin
        if (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_tcp_notification_TDATA_blk_n <= s_axis_tcp_notification_TVALID;
        else 
            s_axis_tcp_notification_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_axis_tcp_notification_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_nbreadreq_fu_96_p6, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_96_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_tcp_notification_TREADY <= ap_const_logic_1;
        else 
            s_axis_tcp_notification_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp_nbreadreq_fu_96_p6 <= (0=>(s_axis_tcp_notification_TVALID), others=>'-');
    zext_ln208_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(length_V_fu_157_p4),64));
end behav;
