<profile>

<section name = "Vitis HLS Report for 'hls_recv_krnl'" level="0">
<item name = "Date">Sun Dec 11 15:18:35 2022
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)</item>
<item name = "Project">hls_recv_krnl</item>
<item name = "Solution">solution (Vitis Kernel Flow Target)</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcu250-figd2104-2L-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">5.00 ns, 3.650 ns, 1.35 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="mysha_U0">mysha, ?, ?, ?, ?, ?, ?, none</column>
<column name="myaes_U0">myaes, ?, ?, ?, ?, ?, ?, none</column>
<column name="tie_off_tcp_tx_U0">tie_off_tcp_tx, 2, 2, 10.000 ns, 10.000 ns, 2, 2, none</column>
<column name="backgroundclock_U0">backgroundclock, ?, ?, ?, ?, ?, ?, none</column>
<column name="tie_off_udp_U0">tie_off_udp, 2, 2, 10.000 ns, 10.000 ns, 2, 2, none</column>
<column name="partition_U0">partition, ?, ?, ?, ?, ?, ?, dataflow</column>
<column name="recvData_U0">recvData, ?, ?, ?, ?, ?, ?, dataflow</column>
<column name="listenPorts_U0">listenPorts, ?, ?, ?, ?, ?, ?, dataflow</column>
<column name="prepare_sha_U0">prepare_sha, ?, ?, ?, ?, ?, ?, none</column>
<column name="consumesha_U0">consumesha, ?, ?, ?, ?, ?, ?, none</column>
<column name="consumeaes_U0">consumeaes, ?, ?, ?, ?, ?, ?, none</column>
<column name="prepare_aes_U0">prepare_aes, ?, ?, ?, ?, ?, ?, none</column>
<column name="consumetrans_U0">consumetrans, ?, ?, ?, ?, ?, ?, none</column>
<column name="tie_off_tcp_open_connection_U0">tie_off_tcp_open_connection, 1, 1, 5.000 ns, 5.000 ns, 1, 1, none</column>
<column name="tie_off_tcp_close_con_U0">tie_off_tcp_close_con, 1, 1, 5.000 ns, 5.000 ns, 1, 1, none</column>
<column name="hls_recv_krnl_entry45_U0">hls_recv_krnl_entry45, 0, 0, 0 ns, 0 ns, 0, 0, none</column>
<column name="hls_recv_krnl_entry3_U0">hls_recv_krnl_entry3, 0, 0, 0 ns, 0 ns, 0, 0, none</column>
<column name="Block_split11_proc_U0">Block_split11_proc, 0, 0, 0 ns, 0 ns, 0, 0, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 34, -</column>
<column name="FIFO">-, -, 8994, 4701, -</column>
<column name="Instance">5, -, 42073, 233149, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 45, -</column>
<column name="Register">-, -, 8, -, -</column>
<specialColumn name="Available SLR">1344, 3072, 864000, 432000, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">~0, 0, 5, 55, 0</specialColumn>
<specialColumn name="Available">5376, 12288, 3456000, 1728000, 1280</specialColumn>
<specialColumn name="Utilization (%)">~0, 0, 1, 13, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="Block_split11_proc_U0">Block_split11_proc, 0, 0, 3, 38, 0</column>
<column name="backgroundclock_U0">backgroundclock, 0, 0, 844, 1031, 0</column>
<column name="consumeaes_U0">consumeaes, 0, 0, 105, 176, 0</column>
<column name="consumesha_U0">consumesha, 0, 0, 105, 176, 0</column>
<column name="consumetrans_U0">consumetrans, 0, 0, 71, 139, 0</column>
<column name="control_s_axi_U">control_s_axi, 0, 0, 290, 488, 0</column>
<column name="gmem_m_axi_U">gmem_m_axi, 4, 0, 566, 766, 0</column>
<column name="hls_recv_krnl_entry3_U0">hls_recv_krnl_entry3, 0, 0, 3, 56, 0</column>
<column name="hls_recv_krnl_entry45_U0">hls_recv_krnl_entry45, 0, 0, 3, 101, 0</column>
<column name="listenPorts_U0">listenPorts, 0, 0, 320, 488, 0</column>
<column name="myaes_U0">myaes, 0, 0, 10320, 11911, 0</column>
<column name="mysha_U0">mysha, 0, 0, 27939, 216326, 0</column>
<column name="partition_U0">partition, 0, 0, 615, 170, 0</column>
<column name="prepare_aes_U0">prepare_aes, 0, 0, 105, 223, 0</column>
<column name="prepare_sha_U0">prepare_sha, 0, 0, 237, 229, 0</column>
<column name="recvData_U0">recvData, 1, 0, 531, 581, 0</column>
<column name="tie_off_tcp_close_con_U0">tie_off_tcp_close_con, 0, 0, 3, 42, 0</column>
<column name="tie_off_tcp_open_connection_U0">tie_off_tcp_open_connection, 0, 0, 3, 53, 0</column>
<column name="tie_off_tcp_tx_U0">tie_off_tcp_tx, 0, 0, 4, 74, 0</column>
<column name="tie_off_udp_U0">tie_off_udp, 0, 0, 6, 81, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="ComputeWordCnt_loc_c45_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c46_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c47_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c48_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c49_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c50_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c51_U">0, 68, 0, -, 2, 32, 64</column>
<column name="ComputeWordCnt_loc_c_U">0, 68, 0, -, 2, 32, 64</column>
<column name="IVStrm_U">0, 260, 0, -, 2, 128, 256</column>
<column name="basePort_c2_U">0, 68, 0, -, 2, 32, 64</column>
<column name="basePort_c_U">0, 68, 0, -, 2, 32, 64</column>
<column name="cipherkeyStrm_U">0, 516, 0, -, 2, 256, 512</column>
<column name="ciphertextStrm_U">0, 260, 0, -, 2, 128, 256</column>
<column name="digestStrm_U">0, 516, 0, -, 2, 256, 512</column>
<column name="endCiphertextStrm_U">0, 8, 0, -, 1, 1, 1</column>
<column name="endDigestStrm_U">0, 8, 0, -, 1, 1, 1</column>
<column name="endMsgLenStrm_U">0, 8, 0, -, 1, 1, 1</column>
<column name="endPlaintextStrm_U">0, 8, 0, -, 1, 1, 1</column>
<column name="expectedRxByteCnt_c3_U">0, 133, 0, -, 2, 64, 128</column>
<column name="expectedRxByteCnt_c44_U">0, 133, 0, -, 2, 64, 128</column>
<column name="expectedRxByteCnt_c_U">0, 133, 0, -, 2, 64, 128</column>
<column name="msgLenStrm_U">0, 260, 0, -, 2, 128, 256</column>
<column name="msgStrm_U">0, 133, 0, -, 2, 64, 128</column>
<column name="out_time_c4_U">0, 133, 0, -, 2, 64, 128</column>
<column name="out_time_c_U">0, 133, 0, -, 2, 64, 128</column>
<column name="plaintextStrm_U">0, 260, 0, -, 2, 128, 256</column>
<column name="s_data_cal_U">0, 1028, 0, -, 2, 512, 1024</column>
<column name="s_data_net_out_U">0, 1028, 0, -, 2, 512, 1024</column>
<column name="s_data_out_U">0, 1028, 0, -, 2, 512, 1024</column>
<column name="sha_in_U">0, 1028, 0, -, 2, 512, 1024</column>
<column name="sha_out_U">0, 1028, 0, -, 2, 512, 1024</column>
<column name="timeaes_U">0, 68, 0, -, 2, 32, 64</column>
<column name="timesha_U">0, 68, 0, -, 2, 32, 64</column>
<column name="useConn_c1_U">0, 68, 0, -, 2, 32, 64</column>
<column name="useConn_c_U">0, 68, 0, -, 2, 32, 64</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_continue">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_done">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 2, 1, 1</column>
<column name="hls_recv_krnl_entry3_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="hls_recv_krnl_entry45_U0_start_full_n">and, 0, 0, 2, 1, 1</column>
<column name="mysha_U0_start_full_n">and, 0, 0, 2, 1, 1</column>
<column name="partition_U0_start_full_n">and, 0, 0, 2, 1, 1</column>
<column name="tie_off_tcp_close_con_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="tie_off_tcp_open_connection_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="tie_off_tcp_tx_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="tie_off_udp_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_hls_recv_krnl_entry3_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_tie_off_tcp_close_con_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_tie_off_tcp_open_connection_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_tie_off_tcp_tx_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_tie_off_udp_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_tie_off_tcp_tx_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_tie_off_udp_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_rst_n_inv">1, 0, 1, 0</column>
<column name="ap_rst_reg_1">1, 0, 1, 0</column>
<column name="ap_rst_reg_2">1, 0, 1, 0</column>
<column name="ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_tie_off_tcp_tx_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_tie_off_udp_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_control_AWVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_WVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WDATA">in, 32, s_axi, control, scalar</column>
<column name="s_axi_control_WSTRB">in, 4, s_axi, control, scalar</column>
<column name="s_axi_control_ARVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_RVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RDATA">out, 32, s_axi, control, scalar</column>
<column name="s_axi_control_RRESP">out, 2, s_axi, control, scalar</column>
<column name="s_axi_control_BVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BRESP">out, 2, s_axi, control, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_chain, hls_recv_krnl, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_chain, hls_recv_krnl, return value</column>
<column name="interrupt">out, 1, ap_ctrl_chain, hls_recv_krnl, return value</column>
<column name="m_axi_gmem_AWVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLEN">out, 8, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WDATA">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WSTRB">out, 8, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WLAST">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLEN">out, 8, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RDATA">in, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RLAST">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RUSER">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BUSER">in, 1, m_axi, gmem, pointer</column>
<column name="s_axis_udp_rx_TDATA">in, 512, axis, s_axis_udp_rx_V_data_V, pointer</column>
<column name="s_axis_udp_rx_TKEEP">in, 64, axis, s_axis_udp_rx_V_keep_V, pointer</column>
<column name="s_axis_udp_rx_TSTRB">in, 64, axis, s_axis_udp_rx_V_strb_V, pointer</column>
<column name="s_axis_udp_rx_TLAST">in, 1, axis, s_axis_udp_rx_V_last_V, pointer</column>
<column name="s_axis_udp_rx_TVALID">in, 1, axis, s_axis_udp_rx_V_last_V, pointer</column>
<column name="s_axis_udp_rx_TREADY">out, 1, axis, s_axis_udp_rx_V_last_V, pointer</column>
<column name="m_axis_udp_tx_TDATA">out, 512, axis, m_axis_udp_tx_V_data_V, pointer</column>
<column name="m_axis_udp_tx_TKEEP">out, 64, axis, m_axis_udp_tx_V_keep_V, pointer</column>
<column name="m_axis_udp_tx_TSTRB">out, 64, axis, m_axis_udp_tx_V_strb_V, pointer</column>
<column name="m_axis_udp_tx_TLAST">out, 1, axis, m_axis_udp_tx_V_last_V, pointer</column>
<column name="m_axis_udp_tx_TVALID">out, 1, axis, m_axis_udp_tx_V_last_V, pointer</column>
<column name="m_axis_udp_tx_TREADY">in, 1, axis, m_axis_udp_tx_V_last_V, pointer</column>
<column name="s_axis_udp_rx_meta_TDATA">in, 256, axis, s_axis_udp_rx_meta_V_data_V, pointer</column>
<column name="s_axis_udp_rx_meta_TKEEP">in, 32, axis, s_axis_udp_rx_meta_V_keep_V, pointer</column>
<column name="s_axis_udp_rx_meta_TSTRB">in, 32, axis, s_axis_udp_rx_meta_V_strb_V, pointer</column>
<column name="s_axis_udp_rx_meta_TLAST">in, 1, axis, s_axis_udp_rx_meta_V_last_V, pointer</column>
<column name="s_axis_udp_rx_meta_TVALID">in, 1, axis, s_axis_udp_rx_meta_V_last_V, pointer</column>
<column name="s_axis_udp_rx_meta_TREADY">out, 1, axis, s_axis_udp_rx_meta_V_last_V, pointer</column>
<column name="m_axis_udp_tx_meta_TDATA">out, 256, axis, m_axis_udp_tx_meta_V_data_V, pointer</column>
<column name="m_axis_udp_tx_meta_TKEEP">out, 32, axis, m_axis_udp_tx_meta_V_keep_V, pointer</column>
<column name="m_axis_udp_tx_meta_TSTRB">out, 32, axis, m_axis_udp_tx_meta_V_strb_V, pointer</column>
<column name="m_axis_udp_tx_meta_TLAST">out, 1, axis, m_axis_udp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_udp_tx_meta_TVALID">out, 1, axis, m_axis_udp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_udp_tx_meta_TREADY">in, 1, axis, m_axis_udp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_tcp_listen_port_TDATA">out, 16, axis, m_axis_tcp_listen_port_V_data_V, pointer</column>
<column name="m_axis_tcp_listen_port_TKEEP">out, 2, axis, m_axis_tcp_listen_port_V_keep_V, pointer</column>
<column name="m_axis_tcp_listen_port_TSTRB">out, 2, axis, m_axis_tcp_listen_port_V_strb_V, pointer</column>
<column name="m_axis_tcp_listen_port_TLAST">out, 1, axis, m_axis_tcp_listen_port_V_last_V, pointer</column>
<column name="m_axis_tcp_listen_port_TVALID">out, 1, axis, m_axis_tcp_listen_port_V_last_V, pointer</column>
<column name="m_axis_tcp_listen_port_TREADY">in, 1, axis, m_axis_tcp_listen_port_V_last_V, pointer</column>
<column name="s_axis_tcp_port_status_TDATA">in, 8, axis, s_axis_tcp_port_status_V_data_V, pointer</column>
<column name="s_axis_tcp_port_status_TKEEP">in, 1, axis, s_axis_tcp_port_status_V_keep_V, pointer</column>
<column name="s_axis_tcp_port_status_TSTRB">in, 1, axis, s_axis_tcp_port_status_V_strb_V, pointer</column>
<column name="s_axis_tcp_port_status_TLAST">in, 1, axis, s_axis_tcp_port_status_V_last_V, pointer</column>
<column name="s_axis_tcp_port_status_TVALID">in, 1, axis, s_axis_tcp_port_status_V_last_V, pointer</column>
<column name="s_axis_tcp_port_status_TREADY">out, 1, axis, s_axis_tcp_port_status_V_last_V, pointer</column>
<column name="m_axis_tcp_open_connection_TDATA">out, 64, axis, m_axis_tcp_open_connection_V_data_V, pointer</column>
<column name="m_axis_tcp_open_connection_TKEEP">out, 8, axis, m_axis_tcp_open_connection_V_keep_V, pointer</column>
<column name="m_axis_tcp_open_connection_TSTRB">out, 8, axis, m_axis_tcp_open_connection_V_strb_V, pointer</column>
<column name="m_axis_tcp_open_connection_TLAST">out, 1, axis, m_axis_tcp_open_connection_V_last_V, pointer</column>
<column name="m_axis_tcp_open_connection_TVALID">out, 1, axis, m_axis_tcp_open_connection_V_last_V, pointer</column>
<column name="m_axis_tcp_open_connection_TREADY">in, 1, axis, m_axis_tcp_open_connection_V_last_V, pointer</column>
<column name="s_axis_tcp_open_status_TDATA">in, 128, axis, s_axis_tcp_open_status_V_data_V, pointer</column>
<column name="s_axis_tcp_open_status_TKEEP">in, 16, axis, s_axis_tcp_open_status_V_keep_V, pointer</column>
<column name="s_axis_tcp_open_status_TSTRB">in, 16, axis, s_axis_tcp_open_status_V_strb_V, pointer</column>
<column name="s_axis_tcp_open_status_TLAST">in, 1, axis, s_axis_tcp_open_status_V_last_V, pointer</column>
<column name="s_axis_tcp_open_status_TVALID">in, 1, axis, s_axis_tcp_open_status_V_last_V, pointer</column>
<column name="s_axis_tcp_open_status_TREADY">out, 1, axis, s_axis_tcp_open_status_V_last_V, pointer</column>
<column name="m_axis_tcp_close_connection_TDATA">out, 16, axis, m_axis_tcp_close_connection_V_data_V, pointer</column>
<column name="m_axis_tcp_close_connection_TKEEP">out, 2, axis, m_axis_tcp_close_connection_V_keep_V, pointer</column>
<column name="m_axis_tcp_close_connection_TSTRB">out, 2, axis, m_axis_tcp_close_connection_V_strb_V, pointer</column>
<column name="m_axis_tcp_close_connection_TLAST">out, 1, axis, m_axis_tcp_close_connection_V_last_V, pointer</column>
<column name="m_axis_tcp_close_connection_TVALID">out, 1, axis, m_axis_tcp_close_connection_V_last_V, pointer</column>
<column name="m_axis_tcp_close_connection_TREADY">in, 1, axis, m_axis_tcp_close_connection_V_last_V, pointer</column>
<column name="s_axis_tcp_notification_TDATA">in, 128, axis, s_axis_tcp_notification_V_data_V, pointer</column>
<column name="s_axis_tcp_notification_TKEEP">in, 16, axis, s_axis_tcp_notification_V_keep_V, pointer</column>
<column name="s_axis_tcp_notification_TSTRB">in, 16, axis, s_axis_tcp_notification_V_strb_V, pointer</column>
<column name="s_axis_tcp_notification_TLAST">in, 1, axis, s_axis_tcp_notification_V_last_V, pointer</column>
<column name="s_axis_tcp_notification_TVALID">in, 1, axis, s_axis_tcp_notification_V_last_V, pointer</column>
<column name="s_axis_tcp_notification_TREADY">out, 1, axis, s_axis_tcp_notification_V_last_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TDATA">out, 32, axis, m_axis_tcp_read_pkg_V_data_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TKEEP">out, 4, axis, m_axis_tcp_read_pkg_V_keep_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TSTRB">out, 4, axis, m_axis_tcp_read_pkg_V_strb_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TLAST">out, 1, axis, m_axis_tcp_read_pkg_V_last_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TVALID">out, 1, axis, m_axis_tcp_read_pkg_V_last_V, pointer</column>
<column name="m_axis_tcp_read_pkg_TREADY">in, 1, axis, m_axis_tcp_read_pkg_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TDATA">in, 16, axis, s_axis_tcp_rx_meta_V_data_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TKEEP">in, 2, axis, s_axis_tcp_rx_meta_V_keep_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TSTRB">in, 2, axis, s_axis_tcp_rx_meta_V_strb_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TLAST">in, 1, axis, s_axis_tcp_rx_meta_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TVALID">in, 1, axis, s_axis_tcp_rx_meta_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_meta_TREADY">out, 1, axis, s_axis_tcp_rx_meta_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_data_TDATA">in, 512, axis, s_axis_tcp_rx_data_V_data_V, pointer</column>
<column name="s_axis_tcp_rx_data_TKEEP">in, 64, axis, s_axis_tcp_rx_data_V_keep_V, pointer</column>
<column name="s_axis_tcp_rx_data_TSTRB">in, 64, axis, s_axis_tcp_rx_data_V_strb_V, pointer</column>
<column name="s_axis_tcp_rx_data_TLAST">in, 1, axis, s_axis_tcp_rx_data_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_data_TVALID">in, 1, axis, s_axis_tcp_rx_data_V_last_V, pointer</column>
<column name="s_axis_tcp_rx_data_TREADY">out, 1, axis, s_axis_tcp_rx_data_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TDATA">out, 32, axis, m_axis_tcp_tx_meta_V_data_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TKEEP">out, 4, axis, m_axis_tcp_tx_meta_V_keep_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TSTRB">out, 4, axis, m_axis_tcp_tx_meta_V_strb_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TLAST">out, 1, axis, m_axis_tcp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TVALID">out, 1, axis, m_axis_tcp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_meta_TREADY">in, 1, axis, m_axis_tcp_tx_meta_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_data_TDATA">out, 512, axis, m_axis_tcp_tx_data_V_data_V, pointer</column>
<column name="m_axis_tcp_tx_data_TKEEP">out, 64, axis, m_axis_tcp_tx_data_V_keep_V, pointer</column>
<column name="m_axis_tcp_tx_data_TSTRB">out, 64, axis, m_axis_tcp_tx_data_V_strb_V, pointer</column>
<column name="m_axis_tcp_tx_data_TLAST">out, 1, axis, m_axis_tcp_tx_data_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_data_TVALID">out, 1, axis, m_axis_tcp_tx_data_V_last_V, pointer</column>
<column name="m_axis_tcp_tx_data_TREADY">in, 1, axis, m_axis_tcp_tx_data_V_last_V, pointer</column>
<column name="s_axis_tcp_tx_status_TDATA">in, 64, axis, s_axis_tcp_tx_status_V_data_V, pointer</column>
<column name="s_axis_tcp_tx_status_TKEEP">in, 8, axis, s_axis_tcp_tx_status_V_keep_V, pointer</column>
<column name="s_axis_tcp_tx_status_TSTRB">in, 8, axis, s_axis_tcp_tx_status_V_strb_V, pointer</column>
<column name="s_axis_tcp_tx_status_TLAST">in, 1, axis, s_axis_tcp_tx_status_V_last_V, pointer</column>
<column name="s_axis_tcp_tx_status_TVALID">in, 1, axis, s_axis_tcp_tx_status_V_last_V, pointer</column>
<column name="s_axis_tcp_tx_status_TREADY">out, 1, axis, s_axis_tcp_tx_status_V_last_V, pointer</column>
</table>
</item>
</section>
</profile>
