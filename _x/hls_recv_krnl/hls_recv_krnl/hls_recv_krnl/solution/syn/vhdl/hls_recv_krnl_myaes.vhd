-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_recv_krnl_myaes is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    ciphertextStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    ciphertextStrm_empty_n : IN STD_LOGIC;
    ciphertextStrm_read : OUT STD_LOGIC;
    endCiphertextStrm_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    endCiphertextStrm_empty_n : IN STD_LOGIC;
    endCiphertextStrm_read : OUT STD_LOGIC;
    cipherkeyStrm_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_empty_n : IN STD_LOGIC;
    cipherkeyStrm_read : OUT STD_LOGIC;
    IVStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_empty_n : IN STD_LOGIC;
    IVStrm_read : OUT STD_LOGIC;
    plaintextStrm_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    plaintextStrm_full_n : IN STD_LOGIC;
    plaintextStrm_write : OUT STD_LOGIC;
    endPlaintextStrm_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    endPlaintextStrm_full_n : IN STD_LOGIC;
    endPlaintextStrm_write : OUT STD_LOGIC;
    timeaes_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    timeaes_full_n : IN STD_LOGIC;
    timeaes_write : OUT STD_LOGIC;
    ComputeWordCnt_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ComputeWordCnt_loc_empty_n : IN STD_LOGIC;
    ComputeWordCnt_loc_read : OUT STD_LOGIC;
    ComputeWordCnt_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ComputeWordCnt_loc_out_full_n : IN STD_LOGIC;
    ComputeWordCnt_loc_out_write : OUT STD_LOGIC );
end;


architecture behav of hls_recv_krnl_myaes is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_1FFFFFFFF : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111111111";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ciphertextStrm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal e_1_reg_223 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal e_4_reg_244 : STD_LOGIC_VECTOR (0 downto 0);
    signal endCiphertextStrm_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_phi_mux_e_1_phi_fu_226_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln878_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_phi_mux_e_4_phi_fu_247_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal cipherkeyStrm_blk_n : STD_LOGIC;
    signal IVStrm_blk_n : STD_LOGIC;
    signal plaintextStrm_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal e_1_reg_223_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter28 : STD_LOGIC := '0';
    signal e_4_reg_244_pp1_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal endPlaintextStrm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal timeaes_blk_n : STD_LOGIC;
    signal ComputeWordCnt_loc_blk_n : STD_LOGIC;
    signal ComputeWordCnt_loc_out_blk_n : STD_LOGIC;
    signal feedback_r_V_reg_213 : STD_LOGIC_VECTOR (127 downto 0);
    signal e_1_reg_223_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal e_1_reg_223_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_1_reg_223_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state35_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state36_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state38_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state42_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state43_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state44_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state45_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state47_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state51_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state52_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state53_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state54_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state55_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state56_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state57_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state58_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state59_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state60_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state62_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_state63_pp1_stage0_iter28 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal e_4_reg_244_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_4_reg_244_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal feedback_r_V_6_reg_254 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_389 : STD_LOGIC_VECTOR (255 downto 0);
    signal reg_394 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_400 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_405 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_410 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_415 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_420 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_425 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_430 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_435 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_440 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_445 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_450 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_455 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_460 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_465 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_470 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475 : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter2_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter3_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter4_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter5_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter6_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter7_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter8_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter9_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter10_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter11_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter12_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter13_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter14_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter15_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter16_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter17_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter18_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter19_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter20_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter21_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter22_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter23_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter24_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter25_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter26_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp0_iter27_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter2_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter3_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter4_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter5_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter6_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter7_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter8_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter9_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter10_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter11_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter12_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter13_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter14_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter15_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter16_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter17_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter18_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter19_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter20_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter21_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter22_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter23_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter24_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter25_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter26_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal reg_475_pp1_iter27_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal ComputeWordCnt_loc_read_reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_664 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_669 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i_i_i_i_fu_492_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i_i_i_i_reg_764 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln878_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln878_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state33 : BOOLEAN;
    signal tmp_19_reg_822 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_updateKey_fu_289_ap_ready : STD_LOGIC;
    signal grp_updateKey_fu_289_ap_done : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter27_state62 : STD_LOGIC;
    signal grp_process_r_fu_264_ap_start : STD_LOGIC;
    signal grp_process_r_fu_264_ap_done : STD_LOGIC;
    signal grp_process_r_fu_264_ap_idle : STD_LOGIC;
    signal grp_process_r_fu_264_ap_ready : STD_LOGIC;
    signal grp_process_r_fu_264_ap_ce : STD_LOGIC;
    signal grp_process_r_fu_264_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state3_pp0_stage0_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3_ignore_call3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4_ignore_call3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5_ignore_call3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6_ignore_call3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7_ignore_call3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8_ignore_call3 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9_ignore_call3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10_ignore_call3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11_ignore_call3 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12_ignore_call3 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13_ignore_call3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14_ignore_call3 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15_ignore_call3 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16_ignore_call3 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17_ignore_call3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18_ignore_call3 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19_ignore_call3 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20_ignore_call3 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21_ignore_call3 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22_ignore_call3 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23_ignore_call3 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24_ignore_call3 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25_ignore_call3 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26_ignore_call3 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27_ignore_call3 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28_ignore_call3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp112 : BOOLEAN;
    signal ap_block_state35_pp1_stage0_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state36_pp1_stage0_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter2_ignore_call3 : BOOLEAN;
    signal ap_block_state38_pp1_stage0_iter3_ignore_call3 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter4_ignore_call3 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter5_ignore_call3 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter6_ignore_call3 : BOOLEAN;
    signal ap_block_state42_pp1_stage0_iter7_ignore_call3 : BOOLEAN;
    signal ap_block_state43_pp1_stage0_iter8_ignore_call3 : BOOLEAN;
    signal ap_block_state44_pp1_stage0_iter9_ignore_call3 : BOOLEAN;
    signal ap_block_state45_pp1_stage0_iter10_ignore_call3 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter11_ignore_call3 : BOOLEAN;
    signal ap_block_state47_pp1_stage0_iter12_ignore_call3 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter13_ignore_call3 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter14_ignore_call3 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter15_ignore_call3 : BOOLEAN;
    signal ap_block_state51_pp1_stage0_iter16_ignore_call3 : BOOLEAN;
    signal ap_block_state52_pp1_stage0_iter17_ignore_call3 : BOOLEAN;
    signal ap_block_state53_pp1_stage0_iter18_ignore_call3 : BOOLEAN;
    signal ap_block_state54_pp1_stage0_iter19_ignore_call3 : BOOLEAN;
    signal ap_block_state55_pp1_stage0_iter20_ignore_call3 : BOOLEAN;
    signal ap_block_state56_pp1_stage0_iter21_ignore_call3 : BOOLEAN;
    signal ap_block_state57_pp1_stage0_iter22_ignore_call3 : BOOLEAN;
    signal ap_block_state58_pp1_stage0_iter23_ignore_call3 : BOOLEAN;
    signal ap_block_state59_pp1_stage0_iter24_ignore_call3 : BOOLEAN;
    signal ap_block_state60_pp1_stage0_iter25_ignore_call3 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter26_ignore_call3 : BOOLEAN;
    signal ap_block_state62_pp1_stage0_iter27_ignore_call3 : BOOLEAN;
    signal ap_block_state63_pp1_stage0_iter28_ignore_call3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp233 : BOOLEAN;
    signal grp_updateKey_fu_289_ap_start : STD_LOGIC;
    signal grp_updateKey_fu_289_ap_idle : STD_LOGIC;
    signal grp_updateKey_fu_289_p_read1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read2 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read3 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read4 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read6 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read7 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read8 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read9 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read10 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read11 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read12 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read13 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read14 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_p_read15 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_2 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_3 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_4 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_6 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_7 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_8 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_9 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_10 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_11 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_12 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_13 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_14 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_updateKey_fu_289_ap_return_15 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_V_reg_233 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state32 : BOOLEAN;
    signal grp_process_r_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal grp_updateKey_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call22 : BOOLEAN;
    signal ap_block_state33_ignore_call20 : BOOLEAN;
    signal decipher_key_list_V_1_2_fu_90 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_2_2_fu_94 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_3_2_fu_98 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_4_2_fu_102 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_5_2_fu_106 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_6_2_fu_110 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_7_2_fu_114 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_8_2_fu_118 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_9_2_fu_122 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_10_2_fu_126 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_11_2_fu_130 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_12_2_fu_134 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_13_2_fu_138 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_14_2_fu_142 : STD_LOGIC_VECTOR (127 downto 0);
    signal decipher_key_list_V_15_1_fu_146 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ret_fu_482_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ret_2_fu_652_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ComputeWordCnt_cast_i_i_fu_489_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_V_cast_fu_504_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hls_recv_krnl_process_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (127 downto 0);
        ciphertext : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component hls_recv_krnl_updateKey IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (127 downto 0);
        cipherkey : IN STD_LOGIC_VECTOR (255 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (127 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    grp_process_r_fu_264 : component hls_recv_krnl_process_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_process_r_fu_264_ap_start,
        ap_done => grp_process_r_fu_264_ap_done,
        ap_idle => grp_process_r_fu_264_ap_idle,
        ap_ready => grp_process_r_fu_264_ap_ready,
        ap_ce => grp_process_r_fu_264_ap_ce,
        p_read => reg_400,
        p_read1 => reg_405,
        p_read2 => reg_410,
        p_read3 => reg_415,
        p_read4 => reg_420,
        p_read5 => reg_425,
        p_read6 => reg_430,
        p_read7 => reg_435,
        p_read8 => reg_440,
        p_read9 => reg_445,
        p_read10 => reg_450,
        p_read11 => reg_455,
        p_read12 => reg_460,
        p_read13 => reg_465,
        p_read14 => reg_470,
        ciphertext => ciphertextStrm_dout,
        ap_return => grp_process_r_fu_264_ap_return);

    grp_updateKey_fu_289 : component hls_recv_krnl_updateKey
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_updateKey_fu_289_ap_start,
        ap_done => grp_updateKey_fu_289_ap_done,
        ap_idle => grp_updateKey_fu_289_ap_idle,
        ap_ready => grp_updateKey_fu_289_ap_ready,
        p_read1 => grp_updateKey_fu_289_p_read1,
        p_read2 => grp_updateKey_fu_289_p_read2,
        p_read3 => grp_updateKey_fu_289_p_read3,
        p_read4 => grp_updateKey_fu_289_p_read4,
        p_read5 => grp_updateKey_fu_289_p_read5,
        p_read6 => grp_updateKey_fu_289_p_read6,
        p_read7 => grp_updateKey_fu_289_p_read7,
        p_read8 => grp_updateKey_fu_289_p_read8,
        p_read9 => grp_updateKey_fu_289_p_read9,
        p_read10 => grp_updateKey_fu_289_p_read10,
        p_read11 => grp_updateKey_fu_289_p_read11,
        p_read12 => grp_updateKey_fu_289_p_read12,
        p_read13 => grp_updateKey_fu_289_p_read13,
        p_read14 => grp_updateKey_fu_289_p_read14,
        p_read15 => grp_updateKey_fu_289_p_read15,
        cipherkey => reg_389,
        ap_return_0 => grp_updateKey_fu_289_ap_return_0,
        ap_return_1 => grp_updateKey_fu_289_ap_return_1,
        ap_return_2 => grp_updateKey_fu_289_ap_return_2,
        ap_return_3 => grp_updateKey_fu_289_ap_return_3,
        ap_return_4 => grp_updateKey_fu_289_ap_return_4,
        ap_return_5 => grp_updateKey_fu_289_ap_return_5,
        ap_return_6 => grp_updateKey_fu_289_ap_return_6,
        ap_return_7 => grp_updateKey_fu_289_ap_return_7,
        ap_return_8 => grp_updateKey_fu_289_ap_return_8,
        ap_return_9 => grp_updateKey_fu_289_ap_return_9,
        ap_return_10 => grp_updateKey_fu_289_ap_return_10,
        ap_return_11 => grp_updateKey_fu_289_ap_return_11,
        ap_return_12 => grp_updateKey_fu_289_ap_return_12,
        ap_return_13 => grp_updateKey_fu_289_ap_return_13,
        ap_return_14 => grp_updateKey_fu_289_ap_return_14,
        ap_return_15 => grp_updateKey_fu_289_ap_return_15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter27_state62)) or ((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34)))) then 
                    ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter27_state62))) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter26;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
                elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                    ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_process_r_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_process_r_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                    grp_process_r_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_process_r_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_process_r_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_updateKey_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_updateKey_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_updateKey_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_updateKey_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_updateKey_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    e_1_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((e_1_reg_223 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                e_1_reg_223 <= tmp_16_reg_669;
            elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                e_1_reg_223 <= tmp_14_reg_664;
            end if; 
        end if;
    end process;

    e_4_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                e_4_reg_244 <= tmp_21_reg_827;
            elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                e_4_reg_244 <= tmp_19_reg_822;
            end if; 
        end if;
    end process;

    feedback_r_V_6_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1))) then 
                feedback_r_V_6_reg_254 <= reg_475_pp1_iter27_reg;
            elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                feedback_r_V_6_reg_254 <= reg_394;
            end if; 
        end if;
    end process;

    feedback_r_V_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
                feedback_r_V_reg_213 <= reg_475_pp0_iter27_reg;
            elsif (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                feedback_r_V_reg_213 <= reg_394;
            end if; 
        end if;
    end process;

    i_V_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((endPlaintextStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                i_V_reg_233 <= add_ln878_reg_769;
            elsif ((not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i_V_reg_233 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                ComputeWordCnt_loc_read_reg_659 <= ComputeWordCnt_loc_dout;
                tmp_14_reg_664 <= endCiphertextStrm_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                add_ln878_reg_769 <= add_ln878_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                decipher_key_list_V_10_2_fu_126 <= grp_updateKey_fu_289_ap_return_10;
                decipher_key_list_V_11_2_fu_130 <= grp_updateKey_fu_289_ap_return_11;
                decipher_key_list_V_12_2_fu_134 <= grp_updateKey_fu_289_ap_return_12;
                decipher_key_list_V_13_2_fu_138 <= grp_updateKey_fu_289_ap_return_13;
                decipher_key_list_V_14_2_fu_142 <= grp_updateKey_fu_289_ap_return_14;
                decipher_key_list_V_15_1_fu_146 <= grp_updateKey_fu_289_ap_return_15;
                decipher_key_list_V_1_2_fu_90 <= grp_updateKey_fu_289_ap_return_1;
                decipher_key_list_V_2_2_fu_94 <= grp_updateKey_fu_289_ap_return_2;
                decipher_key_list_V_3_2_fu_98 <= grp_updateKey_fu_289_ap_return_3;
                decipher_key_list_V_4_2_fu_102 <= grp_updateKey_fu_289_ap_return_4;
                decipher_key_list_V_5_2_fu_106 <= grp_updateKey_fu_289_ap_return_5;
                decipher_key_list_V_6_2_fu_110 <= grp_updateKey_fu_289_ap_return_6;
                decipher_key_list_V_7_2_fu_114 <= grp_updateKey_fu_289_ap_return_7;
                decipher_key_list_V_8_2_fu_118 <= grp_updateKey_fu_289_ap_return_8;
                decipher_key_list_V_9_2_fu_122 <= grp_updateKey_fu_289_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                e_1_reg_223_pp0_iter10_reg <= e_1_reg_223_pp0_iter9_reg;
                e_1_reg_223_pp0_iter11_reg <= e_1_reg_223_pp0_iter10_reg;
                e_1_reg_223_pp0_iter12_reg <= e_1_reg_223_pp0_iter11_reg;
                e_1_reg_223_pp0_iter13_reg <= e_1_reg_223_pp0_iter12_reg;
                e_1_reg_223_pp0_iter14_reg <= e_1_reg_223_pp0_iter13_reg;
                e_1_reg_223_pp0_iter15_reg <= e_1_reg_223_pp0_iter14_reg;
                e_1_reg_223_pp0_iter16_reg <= e_1_reg_223_pp0_iter15_reg;
                e_1_reg_223_pp0_iter17_reg <= e_1_reg_223_pp0_iter16_reg;
                e_1_reg_223_pp0_iter18_reg <= e_1_reg_223_pp0_iter17_reg;
                e_1_reg_223_pp0_iter19_reg <= e_1_reg_223_pp0_iter18_reg;
                e_1_reg_223_pp0_iter20_reg <= e_1_reg_223_pp0_iter19_reg;
                e_1_reg_223_pp0_iter21_reg <= e_1_reg_223_pp0_iter20_reg;
                e_1_reg_223_pp0_iter22_reg <= e_1_reg_223_pp0_iter21_reg;
                e_1_reg_223_pp0_iter23_reg <= e_1_reg_223_pp0_iter22_reg;
                e_1_reg_223_pp0_iter24_reg <= e_1_reg_223_pp0_iter23_reg;
                e_1_reg_223_pp0_iter25_reg <= e_1_reg_223_pp0_iter24_reg;
                e_1_reg_223_pp0_iter26_reg <= e_1_reg_223_pp0_iter25_reg;
                e_1_reg_223_pp0_iter27_reg <= e_1_reg_223_pp0_iter26_reg;
                e_1_reg_223_pp0_iter2_reg <= e_1_reg_223_pp0_iter1_reg;
                e_1_reg_223_pp0_iter3_reg <= e_1_reg_223_pp0_iter2_reg;
                e_1_reg_223_pp0_iter4_reg <= e_1_reg_223_pp0_iter3_reg;
                e_1_reg_223_pp0_iter5_reg <= e_1_reg_223_pp0_iter4_reg;
                e_1_reg_223_pp0_iter6_reg <= e_1_reg_223_pp0_iter5_reg;
                e_1_reg_223_pp0_iter7_reg <= e_1_reg_223_pp0_iter6_reg;
                e_1_reg_223_pp0_iter8_reg <= e_1_reg_223_pp0_iter7_reg;
                e_1_reg_223_pp0_iter9_reg <= e_1_reg_223_pp0_iter8_reg;
                reg_475_pp0_iter10_reg <= reg_475_pp0_iter9_reg;
                reg_475_pp0_iter11_reg <= reg_475_pp0_iter10_reg;
                reg_475_pp0_iter12_reg <= reg_475_pp0_iter11_reg;
                reg_475_pp0_iter13_reg <= reg_475_pp0_iter12_reg;
                reg_475_pp0_iter14_reg <= reg_475_pp0_iter13_reg;
                reg_475_pp0_iter15_reg <= reg_475_pp0_iter14_reg;
                reg_475_pp0_iter16_reg <= reg_475_pp0_iter15_reg;
                reg_475_pp0_iter17_reg <= reg_475_pp0_iter16_reg;
                reg_475_pp0_iter18_reg <= reg_475_pp0_iter17_reg;
                reg_475_pp0_iter19_reg <= reg_475_pp0_iter18_reg;
                reg_475_pp0_iter20_reg <= reg_475_pp0_iter19_reg;
                reg_475_pp0_iter21_reg <= reg_475_pp0_iter20_reg;
                reg_475_pp0_iter22_reg <= reg_475_pp0_iter21_reg;
                reg_475_pp0_iter23_reg <= reg_475_pp0_iter22_reg;
                reg_475_pp0_iter24_reg <= reg_475_pp0_iter23_reg;
                reg_475_pp0_iter25_reg <= reg_475_pp0_iter24_reg;
                reg_475_pp0_iter26_reg <= reg_475_pp0_iter25_reg;
                reg_475_pp0_iter27_reg <= reg_475_pp0_iter26_reg;
                reg_475_pp0_iter2_reg <= reg_475;
                reg_475_pp0_iter3_reg <= reg_475_pp0_iter2_reg;
                reg_475_pp0_iter4_reg <= reg_475_pp0_iter3_reg;
                reg_475_pp0_iter5_reg <= reg_475_pp0_iter4_reg;
                reg_475_pp0_iter6_reg <= reg_475_pp0_iter5_reg;
                reg_475_pp0_iter7_reg <= reg_475_pp0_iter6_reg;
                reg_475_pp0_iter8_reg <= reg_475_pp0_iter7_reg;
                reg_475_pp0_iter9_reg <= reg_475_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                e_1_reg_223_pp0_iter1_reg <= e_1_reg_223;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                e_4_reg_244_pp1_iter10_reg <= e_4_reg_244_pp1_iter9_reg;
                e_4_reg_244_pp1_iter11_reg <= e_4_reg_244_pp1_iter10_reg;
                e_4_reg_244_pp1_iter12_reg <= e_4_reg_244_pp1_iter11_reg;
                e_4_reg_244_pp1_iter13_reg <= e_4_reg_244_pp1_iter12_reg;
                e_4_reg_244_pp1_iter14_reg <= e_4_reg_244_pp1_iter13_reg;
                e_4_reg_244_pp1_iter15_reg <= e_4_reg_244_pp1_iter14_reg;
                e_4_reg_244_pp1_iter16_reg <= e_4_reg_244_pp1_iter15_reg;
                e_4_reg_244_pp1_iter17_reg <= e_4_reg_244_pp1_iter16_reg;
                e_4_reg_244_pp1_iter18_reg <= e_4_reg_244_pp1_iter17_reg;
                e_4_reg_244_pp1_iter19_reg <= e_4_reg_244_pp1_iter18_reg;
                e_4_reg_244_pp1_iter20_reg <= e_4_reg_244_pp1_iter19_reg;
                e_4_reg_244_pp1_iter21_reg <= e_4_reg_244_pp1_iter20_reg;
                e_4_reg_244_pp1_iter22_reg <= e_4_reg_244_pp1_iter21_reg;
                e_4_reg_244_pp1_iter23_reg <= e_4_reg_244_pp1_iter22_reg;
                e_4_reg_244_pp1_iter24_reg <= e_4_reg_244_pp1_iter23_reg;
                e_4_reg_244_pp1_iter25_reg <= e_4_reg_244_pp1_iter24_reg;
                e_4_reg_244_pp1_iter26_reg <= e_4_reg_244_pp1_iter25_reg;
                e_4_reg_244_pp1_iter27_reg <= e_4_reg_244_pp1_iter26_reg;
                e_4_reg_244_pp1_iter2_reg <= e_4_reg_244_pp1_iter1_reg;
                e_4_reg_244_pp1_iter3_reg <= e_4_reg_244_pp1_iter2_reg;
                e_4_reg_244_pp1_iter4_reg <= e_4_reg_244_pp1_iter3_reg;
                e_4_reg_244_pp1_iter5_reg <= e_4_reg_244_pp1_iter4_reg;
                e_4_reg_244_pp1_iter6_reg <= e_4_reg_244_pp1_iter5_reg;
                e_4_reg_244_pp1_iter7_reg <= e_4_reg_244_pp1_iter6_reg;
                e_4_reg_244_pp1_iter8_reg <= e_4_reg_244_pp1_iter7_reg;
                e_4_reg_244_pp1_iter9_reg <= e_4_reg_244_pp1_iter8_reg;
                reg_475_pp1_iter10_reg <= reg_475_pp1_iter9_reg;
                reg_475_pp1_iter11_reg <= reg_475_pp1_iter10_reg;
                reg_475_pp1_iter12_reg <= reg_475_pp1_iter11_reg;
                reg_475_pp1_iter13_reg <= reg_475_pp1_iter12_reg;
                reg_475_pp1_iter14_reg <= reg_475_pp1_iter13_reg;
                reg_475_pp1_iter15_reg <= reg_475_pp1_iter14_reg;
                reg_475_pp1_iter16_reg <= reg_475_pp1_iter15_reg;
                reg_475_pp1_iter17_reg <= reg_475_pp1_iter16_reg;
                reg_475_pp1_iter18_reg <= reg_475_pp1_iter17_reg;
                reg_475_pp1_iter19_reg <= reg_475_pp1_iter18_reg;
                reg_475_pp1_iter20_reg <= reg_475_pp1_iter19_reg;
                reg_475_pp1_iter21_reg <= reg_475_pp1_iter20_reg;
                reg_475_pp1_iter22_reg <= reg_475_pp1_iter21_reg;
                reg_475_pp1_iter23_reg <= reg_475_pp1_iter22_reg;
                reg_475_pp1_iter24_reg <= reg_475_pp1_iter23_reg;
                reg_475_pp1_iter25_reg <= reg_475_pp1_iter24_reg;
                reg_475_pp1_iter26_reg <= reg_475_pp1_iter25_reg;
                reg_475_pp1_iter27_reg <= reg_475_pp1_iter26_reg;
                reg_475_pp1_iter2_reg <= reg_475;
                reg_475_pp1_iter3_reg <= reg_475_pp1_iter2_reg;
                reg_475_pp1_iter4_reg <= reg_475_pp1_iter3_reg;
                reg_475_pp1_iter5_reg <= reg_475_pp1_iter4_reg;
                reg_475_pp1_iter6_reg <= reg_475_pp1_iter5_reg;
                reg_475_pp1_iter7_reg <= reg_475_pp1_iter6_reg;
                reg_475_pp1_iter8_reg <= reg_475_pp1_iter7_reg;
                reg_475_pp1_iter9_reg <= reg_475_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                e_4_reg_244_pp1_iter1_reg <= e_4_reg_244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) then
                reg_389 <= cipherkeyStrm_dout;
                reg_394 <= IVStrm_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_400 <= grp_updateKey_fu_289_ap_return_0;
                reg_405 <= grp_updateKey_fu_289_ap_return_1;
                reg_410 <= grp_updateKey_fu_289_ap_return_2;
                reg_415 <= grp_updateKey_fu_289_ap_return_3;
                reg_420 <= grp_updateKey_fu_289_ap_return_4;
                reg_425 <= grp_updateKey_fu_289_ap_return_5;
                reg_430 <= grp_updateKey_fu_289_ap_return_6;
                reg_435 <= grp_updateKey_fu_289_ap_return_7;
                reg_440 <= grp_updateKey_fu_289_ap_return_8;
                reg_445 <= grp_updateKey_fu_289_ap_return_9;
                reg_450 <= grp_updateKey_fu_289_ap_return_10;
                reg_455 <= grp_updateKey_fu_289_ap_return_11;
                reg_460 <= grp_updateKey_fu_289_ap_return_12;
                reg_465 <= grp_updateKey_fu_289_ap_return_13;
                reg_470 <= grp_updateKey_fu_289_ap_return_14;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((e_1_reg_223 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then
                reg_475 <= ciphertextStrm_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                sub_i_i_i_i_reg_764 <= sub_i_i_i_i_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_16_reg_669 <= endCiphertextStrm_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1))) then
                tmp_19_reg_822 <= endCiphertextStrm_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                tmp_21_reg_827 <= endCiphertextStrm_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, endPlaintextStrm_full_n, timeaes_full_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_enable_reg_pp0_iter28, ap_CS_fsm_state32, ap_CS_fsm_state64, ap_CS_fsm_state2, ap_CS_fsm_state34, grp_updateKey_fu_289_ap_done, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter27, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state32 => 
                if ((not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((grp_updateKey_fu_289_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter27 = ap_const_logic_1) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter27 = ap_const_logic_1) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state64 => 
                if (((endPlaintextStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ComputeWordCnt_cast_i_i_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ComputeWordCnt_loc_read_reg_659),33));

    ComputeWordCnt_loc_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ComputeWordCnt_loc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ComputeWordCnt_loc_blk_n <= ComputeWordCnt_loc_empty_n;
        else 
            ComputeWordCnt_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ComputeWordCnt_loc_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ComputeWordCnt_loc_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ComputeWordCnt_loc_out_blk_n <= ComputeWordCnt_loc_out_full_n;
        else 
            ComputeWordCnt_loc_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ComputeWordCnt_loc_out_din <= ComputeWordCnt_loc_dout;

    ComputeWordCnt_loc_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n)
    begin
        if ((not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ComputeWordCnt_loc_out_write <= ap_const_logic_1;
        else 
            ComputeWordCnt_loc_out_write <= ap_const_logic_0;
        end if; 
    end process;


    ComputeWordCnt_loc_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n)
    begin
        if ((not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ComputeWordCnt_loc_read <= ap_const_logic_1;
        else 
            ComputeWordCnt_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    IVStrm_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, IVStrm_empty_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            IVStrm_blk_n <= IVStrm_empty_n;
        else 
            IVStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    IVStrm_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if (((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            IVStrm_read <= ap_const_logic_1;
        else 
            IVStrm_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln878_fu_498_p2 <= std_logic_vector(unsigned(i_V_reg_233) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state32 <= ap_CS_fsm(3);
    ap_CS_fsm_state33 <= ap_CS_fsm(4);
    ap_CS_fsm_state34 <= ap_CS_fsm(5);
    ap_CS_fsm_state64 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp0_iter1, e_1_reg_223, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((e_1_reg_223 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ciphertextStrm_empty_n = ap_const_logic_0)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp0_iter1, e_1_reg_223, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((e_1_reg_223 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ciphertextStrm_empty_n = ap_const_logic_0)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp112_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp0_iter1, e_1_reg_223, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp112 <= (((e_1_reg_223 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ciphertextStrm_empty_n = ap_const_logic_0)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp0_iter1, e_1_reg_223, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((e_1_reg_223 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ciphertextStrm_empty_n = ap_const_logic_0)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp1_iter1, e_4_reg_244, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_pp1_stage0_01001 <= (((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp1_iter1, e_4_reg_244, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_pp1_stage0_11001 <= (((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp233_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp1_iter1, e_4_reg_244, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp233 <= (((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ciphertextStrm_empty_n, endCiphertextStrm_empty_n, plaintextStrm_full_n, endPlaintextStrm_full_n, ap_enable_reg_pp1_iter1, e_4_reg_244, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_pp1_stage0_subdone <= (((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n)
    begin
                ap_block_state1 <= ((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_ignore_call22_assign_proc : process(real_start, ap_done_reg, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n)
    begin
                ap_block_state1_ignore_call22 <= ((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state31_pp0_stage0_iter28_assign_proc : process(plaintextStrm_full_n, endPlaintextStrm_full_n, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_state31_pp0_stage0_iter28 <= (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)));
    end process;


    ap_block_state31_pp0_stage0_iter28_ignore_call3_assign_proc : process(plaintextStrm_full_n, endPlaintextStrm_full_n, e_1_reg_223_pp0_iter27_reg)
    begin
                ap_block_state31_pp0_stage0_iter28_ignore_call3 <= (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0)));
    end process;


    ap_block_state32_assign_proc : process(endPlaintextStrm_full_n, timeaes_full_n)
    begin
                ap_block_state32 <= ((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0));
    end process;


    ap_block_state33_assign_proc : process(endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, icmp_ln878_fu_508_p2)
    begin
                ap_block_state33 <= (((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)));
    end process;


    ap_block_state33_ignore_call20_assign_proc : process(endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, icmp_ln878_fu_508_p2)
    begin
                ap_block_state33_ignore_call20 <= (((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)));
    end process;


    ap_block_state35_pp1_stage0_iter0_assign_proc : process(endCiphertextStrm_empty_n, ap_phi_mux_e_4_phi_fu_247_p4)
    begin
                ap_block_state35_pp1_stage0_iter0 <= ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0));
    end process;


    ap_block_state35_pp1_stage0_iter0_ignore_call3_assign_proc : process(endCiphertextStrm_empty_n, ap_phi_mux_e_4_phi_fu_247_p4)
    begin
                ap_block_state35_pp1_stage0_iter0_ignore_call3 <= ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0));
    end process;


    ap_block_state36_pp1_stage0_iter1_assign_proc : process(ciphertextStrm_empty_n, e_4_reg_244)
    begin
                ap_block_state36_pp1_stage0_iter1 <= ((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0));
    end process;


    ap_block_state36_pp1_stage0_iter1_ignore_call3_assign_proc : process(ciphertextStrm_empty_n, e_4_reg_244)
    begin
                ap_block_state36_pp1_stage0_iter1_ignore_call3 <= ((ciphertextStrm_empty_n = ap_const_logic_0) and (e_4_reg_244 = ap_const_lv1_0));
    end process;

        ap_block_state37_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage0_iter2_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter3_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter4_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter0_assign_proc : process(endCiphertextStrm_empty_n, ap_phi_mux_e_1_phi_fu_226_p4)
    begin
                ap_block_state3_pp0_stage0_iter0 <= ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0));
    end process;


    ap_block_state3_pp0_stage0_iter0_ignore_call3_assign_proc : process(endCiphertextStrm_empty_n, ap_phi_mux_e_1_phi_fu_226_p4)
    begin
                ap_block_state3_pp0_stage0_iter0_ignore_call3 <= ((endCiphertextStrm_empty_n = ap_const_logic_0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0));
    end process;

        ap_block_state40_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage0_iter5_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage0_iter6_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage0_iter7_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage0_iter8_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage0_iter9_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage0_iter10_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage0_iter11_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage0_iter12_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter13_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage0_iter14_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(ciphertextStrm_empty_n, e_1_reg_223)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((e_1_reg_223 = ap_const_lv1_0) and (ciphertextStrm_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_ignore_call3_assign_proc : process(ciphertextStrm_empty_n, e_1_reg_223)
    begin
                ap_block_state4_pp0_stage0_iter1_ignore_call3 <= ((e_1_reg_223 = ap_const_lv1_0) and (ciphertextStrm_empty_n = ap_const_logic_0));
    end process;

        ap_block_state50_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage0_iter15_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage0_iter16_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage0_iter17_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage0_iter18_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage0_iter19_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage0_iter20_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage0_iter21_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage0_iter22_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage0_iter23_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage0_iter24_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter25_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage0_iter26_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage0_iter27_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state63_pp1_stage0_iter28_assign_proc : process(plaintextStrm_full_n, endPlaintextStrm_full_n, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_state63_pp1_stage0_iter28 <= (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)));
    end process;


    ap_block_state63_pp1_stage0_iter28_ignore_call3_assign_proc : process(plaintextStrm_full_n, endPlaintextStrm_full_n, e_4_reg_244_pp1_iter27_reg)
    begin
                ap_block_state63_pp1_stage0_iter28_ignore_call3 <= (((endPlaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)) or ((plaintextStrm_full_n = ap_const_logic_0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(ap_phi_mux_e_1_phi_fu_226_p4)
    begin
        if ((ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter27_state62_assign_proc : process(ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27)
    begin
        if (((ap_enable_reg_pp1_iter27 = ap_const_logic_1) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter27_state62 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter27_state62 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_phi_mux_e_4_phi_fu_247_p4, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_1))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter28, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27)
    begin
        if (((ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_e_1_phi_fu_226_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, e_1_reg_223, tmp_16_reg_669)
    begin
        if (((e_1_reg_223 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_e_1_phi_fu_226_p4 <= tmp_16_reg_669;
        else 
            ap_phi_mux_e_1_phi_fu_226_p4 <= e_1_reg_223;
        end if; 
    end process;


    ap_phi_mux_e_4_phi_fu_247_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, e_4_reg_244, tmp_21_reg_827)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_e_4_phi_fu_247_p4 <= tmp_21_reg_827;
        else 
            ap_phi_mux_e_4_phi_fu_247_p4 <= e_4_reg_244;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    cipherkeyStrm_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cipherkeyStrm_empty_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            cipherkeyStrm_blk_n <= cipherkeyStrm_empty_n;
        else 
            cipherkeyStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cipherkeyStrm_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if (((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            cipherkeyStrm_read <= ap_const_logic_1;
        else 
            cipherkeyStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    ciphertextStrm_blk_n_assign_proc : process(ciphertextStrm_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, e_1_reg_223, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, e_4_reg_244)
    begin
        if ((((e_1_reg_223 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            ciphertextStrm_blk_n <= ciphertextStrm_empty_n;
        else 
            ciphertextStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ciphertextStrm_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, e_1_reg_223, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, e_4_reg_244, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((e_1_reg_223 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (e_4_reg_244 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            ciphertextStrm_read <= ap_const_logic_1;
        else 
            ciphertextStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    endCiphertextStrm_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            endCiphertextStrm_blk_n <= endCiphertextStrm_empty_n;
        else 
            endCiphertextStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endCiphertextStrm_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, ComputeWordCnt_loc_empty_n, ComputeWordCnt_loc_out_full_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter0, ap_phi_mux_e_1_phi_fu_226_p4, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_enable_reg_pp1_iter0, ap_phi_mux_e_4_phi_fu_247_p4, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if (((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or (not(((cipherkeyStrm_empty_n = ap_const_logic_0) or (endCiphertextStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = ComputeWordCnt_loc_out_full_n) or (ap_const_logic_0 = ComputeWordCnt_loc_empty_n) or (ap_const_logic_0 = IVStrm_empty_n) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_phi_mux_e_4_phi_fu_247_p4 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_e_1_phi_fu_226_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            endCiphertextStrm_read <= ap_const_logic_1;
        else 
            endCiphertextStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    endPlaintextStrm_blk_n_assign_proc : process(endPlaintextStrm_full_n, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg, ap_CS_fsm_state32, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state32) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)))) then 
            endPlaintextStrm_blk_n <= endPlaintextStrm_full_n;
        else 
            endPlaintextStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endPlaintextStrm_din_assign_proc : process(endPlaintextStrm_full_n, timeaes_full_n, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg, ap_CS_fsm_state32, ap_CS_fsm_state64, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001)
    begin
        if ((((endPlaintextStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64)) or (not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            endPlaintextStrm_din <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)))) then 
            endPlaintextStrm_din <= ap_const_lv1_0;
        else 
            endPlaintextStrm_din <= "X";
        end if; 
    end process;


    endPlaintextStrm_write_assign_proc : process(endPlaintextStrm_full_n, timeaes_full_n, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg, ap_CS_fsm_state32, ap_CS_fsm_state64, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((endPlaintextStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64)) or (not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)))) then 
            endPlaintextStrm_write <= ap_const_logic_1;
        else 
            endPlaintextStrm_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_process_r_fu_264_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001_ignoreCallOp112, ap_block_pp1_stage0_11001_ignoreCallOp233)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp233) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp112) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_process_r_fu_264_ap_ce <= ap_const_logic_1;
        else 
            grp_process_r_fu_264_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_process_r_fu_264_ap_start <= grp_process_r_fu_264_ap_start_reg;
    grp_updateKey_fu_289_ap_start <= grp_updateKey_fu_289_ap_start_reg;

    grp_updateKey_fu_289_p_read1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_1_2_fu_90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read1 <= decipher_key_list_V_1_2_fu_90;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read1 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read10_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_10_2_fu_126)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read10 <= decipher_key_list_V_10_2_fu_126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read10 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read11_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_11_2_fu_130)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read11 <= decipher_key_list_V_11_2_fu_130;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read11 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read12_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_12_2_fu_134)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read12 <= decipher_key_list_V_12_2_fu_134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read12 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read12 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read13_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_13_2_fu_138)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read13 <= decipher_key_list_V_13_2_fu_138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read13 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read13 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read14_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_14_2_fu_142)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read14 <= decipher_key_list_V_14_2_fu_142;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read14 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read14 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read15_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_15_1_fu_146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read15 <= decipher_key_list_V_15_1_fu_146;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read15 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read15 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read2_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_2_2_fu_94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read2 <= decipher_key_list_V_2_2_fu_94;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read2 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read3_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_3_2_fu_98)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read3 <= decipher_key_list_V_3_2_fu_98;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read3 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read4_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_4_2_fu_102)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read4 <= decipher_key_list_V_4_2_fu_102;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read4 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read5_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_5_2_fu_106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read5 <= decipher_key_list_V_5_2_fu_106;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read5 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read5 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read6_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_6_2_fu_110)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read6 <= decipher_key_list_V_6_2_fu_110;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read6 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read7_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_7_2_fu_114)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read7 <= decipher_key_list_V_7_2_fu_114;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read7 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read7 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read8_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_8_2_fu_118)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read8 <= decipher_key_list_V_8_2_fu_118;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read8 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read8 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_updateKey_fu_289_p_read9_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, decipher_key_list_V_9_2_fu_122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_updateKey_fu_289_p_read9 <= decipher_key_list_V_9_2_fu_122;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_updateKey_fu_289_p_read9 <= ap_const_lv128_lc_1;
        else 
            grp_updateKey_fu_289_p_read9 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_V_cast_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_V_reg_233),33));
    icmp_ln878_fu_508_p2 <= "1" when (signed(i_V_cast_fu_504_p1) < signed(sub_i_i_i_i_reg_764)) else "0";

    internal_ap_ready_assign_proc : process(endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, timeaes_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2)
    begin
        if ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    plaintextStrm_blk_n_assign_proc : process(plaintextStrm_full_n, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)))) then 
            plaintextStrm_blk_n <= plaintextStrm_full_n;
        else 
            plaintextStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    plaintextStrm_din_assign_proc : process(ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg, ret_fu_482_p2, ap_block_pp0_stage0_01001, ret_2_fu_652_p2, ap_block_pp1_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1))) then 
            plaintextStrm_din <= ret_2_fu_652_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            plaintextStrm_din <= ret_fu_482_p2;
        else 
            plaintextStrm_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    plaintextStrm_write_assign_proc : process(ap_enable_reg_pp0_iter28, e_1_reg_223_pp0_iter27_reg, ap_enable_reg_pp1_iter28, e_4_reg_244_pp1_iter27_reg, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (e_4_reg_244_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (e_1_reg_223_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)))) then 
            plaintextStrm_write <= ap_const_logic_1;
        else 
            plaintextStrm_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_2_fu_652_p2 <= (grp_process_r_fu_264_ap_return xor feedback_r_V_6_reg_254);
    ret_fu_482_p2 <= (grp_process_r_fu_264_ap_return xor feedback_r_V_reg_213);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_i_i_i_fu_492_p2 <= std_logic_vector(unsigned(ComputeWordCnt_cast_i_i_fu_489_p1) + unsigned(ap_const_lv33_1FFFFFFFF));

    timeaes_blk_n_assign_proc : process(timeaes_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)))) then 
            timeaes_blk_n <= timeaes_full_n;
        else 
            timeaes_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    timeaes_din_assign_proc : process(endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, endPlaintextStrm_full_n, timeaes_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_CS_fsm_state32)
    begin
        if ((not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0))) then 
            timeaes_din <= ap_const_lv32_1;
        elsif ((not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            timeaes_din <= ap_const_lv32_0;
        else 
            timeaes_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    timeaes_write_assign_proc : process(endCiphertextStrm_empty_n, cipherkeyStrm_empty_n, IVStrm_empty_n, endPlaintextStrm_full_n, timeaes_full_n, ap_CS_fsm_state33, icmp_ln878_fu_508_p2, ap_CS_fsm_state32)
    begin
        if (((not(((timeaes_full_n = ap_const_logic_0) or (endPlaintextStrm_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not((((timeaes_full_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = IVStrm_empty_n) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((cipherkeyStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)) or ((endCiphertextStrm_empty_n = ap_const_logic_0) and (icmp_ln878_fu_508_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln878_fu_508_p2 = ap_const_lv1_0)))) then 
            timeaes_write <= ap_const_logic_1;
        else 
            timeaes_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
