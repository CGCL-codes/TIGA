// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_recv_krnl_recvData (
        expRxBytePerSession_dout,
        expRxBytePerSession_empty_n,
        expRxBytePerSession_read,
        s_axis_tcp_notification_TDATA,
        s_axis_tcp_notification_TKEEP,
        s_axis_tcp_notification_TSTRB,
        s_axis_tcp_notification_TLAST,
        m_axis_tcp_read_pkg_TDATA,
        m_axis_tcp_read_pkg_TKEEP,
        m_axis_tcp_read_pkg_TSTRB,
        m_axis_tcp_read_pkg_TLAST,
        s_axis_tcp_rx_meta_TDATA,
        s_axis_tcp_rx_meta_TKEEP,
        s_axis_tcp_rx_meta_TSTRB,
        s_axis_tcp_rx_meta_TLAST,
        s_axis_tcp_rx_data_TDATA,
        s_axis_tcp_rx_data_TKEEP,
        s_axis_tcp_rx_data_TSTRB,
        s_axis_tcp_rx_data_TLAST,
        s_data_net_out_din,
        s_data_net_out_full_n,
        s_data_net_out_write,
        ap_clk,
        ap_rst,
        s_axis_tcp_notification_TVALID,
        s_axis_tcp_notification_TREADY,
        m_axis_tcp_read_pkg_TVALID,
        m_axis_tcp_read_pkg_TREADY,
        ap_start,
        ap_done,
        s_axis_tcp_rx_meta_TVALID,
        s_axis_tcp_rx_meta_TREADY,
        s_axis_tcp_rx_data_TVALID,
        s_axis_tcp_rx_data_TREADY,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [63:0] expRxBytePerSession_dout;
input   expRxBytePerSession_empty_n;
output   expRxBytePerSession_read;
input  [127:0] s_axis_tcp_notification_TDATA;
input  [15:0] s_axis_tcp_notification_TKEEP;
input  [15:0] s_axis_tcp_notification_TSTRB;
input  [0:0] s_axis_tcp_notification_TLAST;
output  [31:0] m_axis_tcp_read_pkg_TDATA;
output  [3:0] m_axis_tcp_read_pkg_TKEEP;
output  [3:0] m_axis_tcp_read_pkg_TSTRB;
output  [0:0] m_axis_tcp_read_pkg_TLAST;
input  [15:0] s_axis_tcp_rx_meta_TDATA;
input  [1:0] s_axis_tcp_rx_meta_TKEEP;
input  [1:0] s_axis_tcp_rx_meta_TSTRB;
input  [0:0] s_axis_tcp_rx_meta_TLAST;
input  [511:0] s_axis_tcp_rx_data_TDATA;
input  [63:0] s_axis_tcp_rx_data_TKEEP;
input  [63:0] s_axis_tcp_rx_data_TSTRB;
input  [0:0] s_axis_tcp_rx_data_TLAST;
output  [511:0] s_data_net_out_din;
input   s_data_net_out_full_n;
output   s_data_net_out_write;
input   ap_clk;
input   ap_rst;
input   s_axis_tcp_notification_TVALID;
output   s_axis_tcp_notification_TREADY;
output   m_axis_tcp_read_pkg_TVALID;
input   m_axis_tcp_read_pkg_TREADY;
input   ap_start;
output   ap_done;
input   s_axis_tcp_rx_meta_TVALID;
output   s_axis_tcp_rx_meta_TREADY;
input   s_axis_tcp_rx_data_TVALID;
output   s_axis_tcp_rx_data_TREADY;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    recvData_handshake_U0_ap_start;
wire    recvData_handshake_U0_ap_done;
wire    recvData_handshake_U0_ap_continue;
wire    recvData_handshake_U0_ap_idle;
wire    recvData_handshake_U0_ap_ready;
wire   [15:0] recvData_handshake_U0_nextRxPacketLength3_din;
wire    recvData_handshake_U0_nextRxPacketLength3_write;
wire    recvData_handshake_U0_expRxBytePerSession_read;
wire    recvData_handshake_U0_s_axis_tcp_notification_TREADY;
wire   [31:0] recvData_handshake_U0_m_axis_tcp_read_pkg_TDATA;
wire    recvData_handshake_U0_m_axis_tcp_read_pkg_TVALID;
wire   [3:0] recvData_handshake_U0_m_axis_tcp_read_pkg_TKEEP;
wire   [3:0] recvData_handshake_U0_m_axis_tcp_read_pkg_TSTRB;
wire   [0:0] recvData_handshake_U0_m_axis_tcp_read_pkg_TLAST;
wire   [63:0] recvData_handshake_U0_expRxBytePerSession_out_din;
wire    recvData_handshake_U0_expRxBytePerSession_out_write;
wire    ap_sync_continue;
wire    recvData_consumeData_U0_ap_start;
wire    recvData_consumeData_U0_ap_done;
wire    recvData_consumeData_U0_ap_continue;
wire    recvData_consumeData_U0_ap_idle;
wire    recvData_consumeData_U0_ap_ready;
wire    recvData_consumeData_U0_nextRxPacketLength3_read;
wire    recvData_consumeData_U0_expRxBytePerSession_read;
wire    recvData_consumeData_U0_s_axis_tcp_rx_meta_TREADY;
wire    recvData_consumeData_U0_s_axis_tcp_rx_data_TREADY;
wire   [511:0] recvData_consumeData_U0_s_data_net_out_din;
wire    recvData_consumeData_U0_s_data_net_out_write;
reg    ap_sync_reg_recvData_consumeData_U0_ap_start;
wire    nextRxPacketLength_full_n;
wire   [15:0] nextRxPacketLength_dout;
wire    nextRxPacketLength_empty_n;
wire    expRxBytePerSession_c_i_full_n;
wire   [63:0] expRxBytePerSession_c_i_dout;
wire    expRxBytePerSession_c_i_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_recvData_consumeData_U0_ap_start = 1'b0;
end

hls_recv_krnl_recvData_handshake recvData_handshake_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(recvData_handshake_U0_ap_start),
    .ap_done(recvData_handshake_U0_ap_done),
    .ap_continue(recvData_handshake_U0_ap_continue),
    .ap_idle(recvData_handshake_U0_ap_idle),
    .ap_ready(recvData_handshake_U0_ap_ready),
    .nextRxPacketLength3_din(recvData_handshake_U0_nextRxPacketLength3_din),
    .nextRxPacketLength3_full_n(nextRxPacketLength_full_n),
    .nextRxPacketLength3_write(recvData_handshake_U0_nextRxPacketLength3_write),
    .expRxBytePerSession_dout(expRxBytePerSession_dout),
    .expRxBytePerSession_empty_n(expRxBytePerSession_empty_n),
    .expRxBytePerSession_read(recvData_handshake_U0_expRxBytePerSession_read),
    .s_axis_tcp_notification_TDATA(s_axis_tcp_notification_TDATA),
    .s_axis_tcp_notification_TVALID(s_axis_tcp_notification_TVALID),
    .s_axis_tcp_notification_TREADY(recvData_handshake_U0_s_axis_tcp_notification_TREADY),
    .s_axis_tcp_notification_TKEEP(s_axis_tcp_notification_TKEEP),
    .s_axis_tcp_notification_TSTRB(s_axis_tcp_notification_TSTRB),
    .s_axis_tcp_notification_TLAST(s_axis_tcp_notification_TLAST),
    .m_axis_tcp_read_pkg_TDATA(recvData_handshake_U0_m_axis_tcp_read_pkg_TDATA),
    .m_axis_tcp_read_pkg_TVALID(recvData_handshake_U0_m_axis_tcp_read_pkg_TVALID),
    .m_axis_tcp_read_pkg_TREADY(m_axis_tcp_read_pkg_TREADY),
    .m_axis_tcp_read_pkg_TKEEP(recvData_handshake_U0_m_axis_tcp_read_pkg_TKEEP),
    .m_axis_tcp_read_pkg_TSTRB(recvData_handshake_U0_m_axis_tcp_read_pkg_TSTRB),
    .m_axis_tcp_read_pkg_TLAST(recvData_handshake_U0_m_axis_tcp_read_pkg_TLAST),
    .expRxBytePerSession_out_din(recvData_handshake_U0_expRxBytePerSession_out_din),
    .expRxBytePerSession_out_full_n(expRxBytePerSession_c_i_full_n),
    .expRxBytePerSession_out_write(recvData_handshake_U0_expRxBytePerSession_out_write)
);

hls_recv_krnl_recvData_consumeData recvData_consumeData_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(recvData_consumeData_U0_ap_start),
    .ap_done(recvData_consumeData_U0_ap_done),
    .ap_continue(recvData_consumeData_U0_ap_continue),
    .ap_idle(recvData_consumeData_U0_ap_idle),
    .ap_ready(recvData_consumeData_U0_ap_ready),
    .nextRxPacketLength3_dout(nextRxPacketLength_dout),
    .nextRxPacketLength3_empty_n(nextRxPacketLength_empty_n),
    .nextRxPacketLength3_read(recvData_consumeData_U0_nextRxPacketLength3_read),
    .expRxBytePerSession_dout(expRxBytePerSession_c_i_dout),
    .expRxBytePerSession_empty_n(expRxBytePerSession_c_i_empty_n),
    .expRxBytePerSession_read(recvData_consumeData_U0_expRxBytePerSession_read),
    .s_axis_tcp_rx_meta_TDATA(s_axis_tcp_rx_meta_TDATA),
    .s_axis_tcp_rx_meta_TVALID(s_axis_tcp_rx_meta_TVALID),
    .s_axis_tcp_rx_meta_TREADY(recvData_consumeData_U0_s_axis_tcp_rx_meta_TREADY),
    .s_axis_tcp_rx_meta_TKEEP(s_axis_tcp_rx_meta_TKEEP),
    .s_axis_tcp_rx_meta_TSTRB(s_axis_tcp_rx_meta_TSTRB),
    .s_axis_tcp_rx_meta_TLAST(s_axis_tcp_rx_meta_TLAST),
    .s_axis_tcp_rx_data_TDATA(s_axis_tcp_rx_data_TDATA),
    .s_axis_tcp_rx_data_TVALID(s_axis_tcp_rx_data_TVALID),
    .s_axis_tcp_rx_data_TREADY(recvData_consumeData_U0_s_axis_tcp_rx_data_TREADY),
    .s_axis_tcp_rx_data_TKEEP(s_axis_tcp_rx_data_TKEEP),
    .s_axis_tcp_rx_data_TSTRB(s_axis_tcp_rx_data_TSTRB),
    .s_axis_tcp_rx_data_TLAST(s_axis_tcp_rx_data_TLAST),
    .s_data_net_out_din(recvData_consumeData_U0_s_data_net_out_din),
    .s_data_net_out_full_n(s_data_net_out_full_n),
    .s_data_net_out_write(recvData_consumeData_U0_s_data_net_out_write)
);

hls_recv_krnl_fifo_w16_d512_A nextRxPacketLength_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(recvData_handshake_U0_nextRxPacketLength3_din),
    .if_full_n(nextRxPacketLength_full_n),
    .if_write(recvData_handshake_U0_nextRxPacketLength3_write),
    .if_dout(nextRxPacketLength_dout),
    .if_empty_n(nextRxPacketLength_empty_n),
    .if_read(recvData_consumeData_U0_nextRxPacketLength3_read)
);

hls_recv_krnl_fifo_w64_d2_S expRxBytePerSession_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(recvData_handshake_U0_expRxBytePerSession_out_din),
    .if_full_n(expRxBytePerSession_c_i_full_n),
    .if_write(recvData_handshake_U0_expRxBytePerSession_out_write),
    .if_dout(expRxBytePerSession_c_i_dout),
    .if_empty_n(expRxBytePerSession_c_i_empty_n),
    .if_read(recvData_consumeData_U0_expRxBytePerSession_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_recvData_consumeData_U0_ap_start <= 1'b0;
    end else begin
        if ((ap_start == 1'b1)) begin
            ap_sync_reg_recvData_consumeData_U0_ap_start <= 1'b1;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (recvData_handshake_U0_ap_idle & recvData_consumeData_U0_ap_idle);

assign ap_ready = recvData_handshake_U0_ap_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (recvData_handshake_U0_ap_done & recvData_consumeData_U0_ap_done);

assign ap_sync_ready = recvData_handshake_U0_ap_ready;

assign expRxBytePerSession_read = recvData_handshake_U0_expRxBytePerSession_read;

assign m_axis_tcp_read_pkg_TDATA = recvData_handshake_U0_m_axis_tcp_read_pkg_TDATA;

assign m_axis_tcp_read_pkg_TKEEP = recvData_handshake_U0_m_axis_tcp_read_pkg_TKEEP;

assign m_axis_tcp_read_pkg_TLAST = recvData_handshake_U0_m_axis_tcp_read_pkg_TLAST;

assign m_axis_tcp_read_pkg_TSTRB = recvData_handshake_U0_m_axis_tcp_read_pkg_TSTRB;

assign m_axis_tcp_read_pkg_TVALID = recvData_handshake_U0_m_axis_tcp_read_pkg_TVALID;

assign recvData_consumeData_U0_ap_continue = ap_sync_continue;

assign recvData_consumeData_U0_ap_start = (ap_sync_reg_recvData_consumeData_U0_ap_start | ap_start);

assign recvData_handshake_U0_ap_continue = ap_sync_continue;

assign recvData_handshake_U0_ap_start = ap_start;

assign s_axis_tcp_notification_TREADY = recvData_handshake_U0_s_axis_tcp_notification_TREADY;

assign s_axis_tcp_rx_data_TREADY = recvData_consumeData_U0_s_axis_tcp_rx_data_TREADY;

assign s_axis_tcp_rx_meta_TREADY = recvData_consumeData_U0_s_axis_tcp_rx_meta_TREADY;

assign s_data_net_out_din = recvData_consumeData_U0_s_data_net_out_din;

assign s_data_net_out_write = recvData_consumeData_U0_s_data_net_out_write;

endmodule //hls_recv_krnl_recvData
