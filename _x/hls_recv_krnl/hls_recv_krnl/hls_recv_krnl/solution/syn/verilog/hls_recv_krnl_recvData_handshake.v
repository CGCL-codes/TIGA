// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_recv_krnl_recvData_handshake (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        nextRxPacketLength3_din,
        nextRxPacketLength3_full_n,
        nextRxPacketLength3_write,
        expRxBytePerSession_dout,
        expRxBytePerSession_empty_n,
        expRxBytePerSession_read,
        s_axis_tcp_notification_TDATA,
        s_axis_tcp_notification_TVALID,
        s_axis_tcp_notification_TREADY,
        s_axis_tcp_notification_TKEEP,
        s_axis_tcp_notification_TSTRB,
        s_axis_tcp_notification_TLAST,
        m_axis_tcp_read_pkg_TDATA,
        m_axis_tcp_read_pkg_TVALID,
        m_axis_tcp_read_pkg_TREADY,
        m_axis_tcp_read_pkg_TKEEP,
        m_axis_tcp_read_pkg_TSTRB,
        m_axis_tcp_read_pkg_TLAST,
        expRxBytePerSession_out_din,
        expRxBytePerSession_out_full_n,
        expRxBytePerSession_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [15:0] nextRxPacketLength3_din;
input   nextRxPacketLength3_full_n;
output   nextRxPacketLength3_write;
input  [63:0] expRxBytePerSession_dout;
input   expRxBytePerSession_empty_n;
output   expRxBytePerSession_read;
input  [127:0] s_axis_tcp_notification_TDATA;
input   s_axis_tcp_notification_TVALID;
output   s_axis_tcp_notification_TREADY;
input  [15:0] s_axis_tcp_notification_TKEEP;
input  [15:0] s_axis_tcp_notification_TSTRB;
input  [0:0] s_axis_tcp_notification_TLAST;
output  [31:0] m_axis_tcp_read_pkg_TDATA;
output   m_axis_tcp_read_pkg_TVALID;
input   m_axis_tcp_read_pkg_TREADY;
output  [3:0] m_axis_tcp_read_pkg_TKEEP;
output  [3:0] m_axis_tcp_read_pkg_TSTRB;
output  [0:0] m_axis_tcp_read_pkg_TLAST;
output  [63:0] expRxBytePerSession_out_din;
input   expRxBytePerSession_out_full_n;
output   expRxBytePerSession_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nextRxPacketLength3_write;
reg expRxBytePerSession_read;
reg s_axis_tcp_notification_TREADY;
reg m_axis_tcp_read_pkg_TVALID;
reg expRxBytePerSession_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    nextRxPacketLength3_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_reg_216;
reg   [0:0] icmp_ln874_reg_225;
reg    expRxBytePerSession_blk_n;
reg    s_axis_tcp_notification_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_nbreadreq_fu_96_p6;
reg    m_axis_tcp_read_pkg_TDATA_blk_n;
reg    expRxBytePerSession_out_blk_n;
reg   [63:0] expRxBytePerSession_read_reg_211;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op84_write_state3;
reg    ap_predicate_op85_write_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [15:0] length_V_fu_157_p4;
reg   [15:0] length_V_reg_220;
wire   [0:0] icmp_ln874_fu_167_p2;
wire   [31:0] p_Result_s_fu_176_p1;
reg   [31:0] p_Result_s_reg_229;
wire   [0:0] icmp_ln878_fu_198_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg   [63:0] rxByteCnt_V_fu_78;
wire   [63:0] rxByteCnt_V_1_fu_184_p2;
reg   [63:0] ap_sig_allocacmp_rxByteCnt_V_2;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] zext_ln208_fu_180_p1;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rxByteCnt_V_fu_78 <= 64'd0;
    end else if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln874_fu_167_p2 == 1'd0))) begin
        rxByteCnt_V_fu_78 <= rxByteCnt_V_1_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        expRxBytePerSession_read_reg_211 <= expRxBytePerSession_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln874_reg_225 <= icmp_ln874_fu_167_p2;
        length_V_reg_220 <= {{s_axis_tcp_notification_TDATA[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln874_fu_167_p2 == 1'd0))) begin
        p_Result_s_reg_229 <= p_Result_s_fu_176_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_216 <= tmp_nbreadreq_fu_96_p6;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln878_fu_198_p2 == 1'd0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln874_fu_167_p2 == 1'd0))) begin
        ap_sig_allocacmp_rxByteCnt_V_2 = rxByteCnt_V_1_fu_184_p2;
    end else begin
        ap_sig_allocacmp_rxByteCnt_V_2 = rxByteCnt_V_fu_78;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        expRxBytePerSession_blk_n = expRxBytePerSession_empty_n;
    end else begin
        expRxBytePerSession_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        expRxBytePerSession_out_blk_n = expRxBytePerSession_out_full_n;
    end else begin
        expRxBytePerSession_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        expRxBytePerSession_out_write = 1'b1;
    end else begin
        expRxBytePerSession_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        expRxBytePerSession_read = 1'b1;
    end else begin
        expRxBytePerSession_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_225 == 1'd0) & (tmp_reg_216 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tcp_read_pkg_TDATA_blk_n = m_axis_tcp_read_pkg_TREADY;
    end else begin
        m_axis_tcp_read_pkg_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op84_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tcp_read_pkg_TVALID = 1'b1;
    end else begin
        m_axis_tcp_read_pkg_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_225 == 1'd0) & (tmp_reg_216 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nextRxPacketLength3_blk_n = nextRxPacketLength3_full_n;
    end else begin
        nextRxPacketLength3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op85_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nextRxPacketLength3_write = 1'b1;
    end else begin
        nextRxPacketLength3_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_axis_tcp_notification_TDATA_blk_n = s_axis_tcp_notification_TVALID;
    end else begin
        s_axis_tcp_notification_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_axis_tcp_notification_TREADY = 1'b1;
    end else begin
        s_axis_tcp_notification_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (s_axis_tcp_notification_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op85_write_state3 == 1'b1) & (nextRxPacketLength3_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (m_axis_tcp_read_pkg_TREADY == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (s_axis_tcp_notification_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op85_write_state3 == 1'b1) & (nextRxPacketLength3_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (m_axis_tcp_read_pkg_TREADY == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_nbreadreq_fu_96_p6 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (s_axis_tcp_notification_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op85_write_state3 == 1'b1) & (nextRxPacketLength3_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (m_axis_tcp_read_pkg_TREADY == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (expRxBytePerSession_out_full_n == 1'b0) | (expRxBytePerSession_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((tmp_nbreadreq_fu_96_p6 == 1'd1) & (s_axis_tcp_notification_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op84_write_state3 == 1'b1) & (m_axis_tcp_read_pkg_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((ap_predicate_op85_write_state3 == 1'b1) & (nextRxPacketLength3_full_n == 1'b0)) | ((ap_predicate_op84_write_state3 == 1'b1) & (m_axis_tcp_read_pkg_TREADY == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op84_write_state3 = ((icmp_ln874_reg_225 == 1'd0) & (tmp_reg_216 == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_write_state3 = ((icmp_ln874_reg_225 == 1'd0) & (tmp_reg_216 == 1'd1));
end

assign expRxBytePerSession_out_din = expRxBytePerSession_dout;

assign icmp_ln874_fu_167_p2 = ((length_V_fu_157_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_198_p2 = ((ap_sig_allocacmp_rxByteCnt_V_2 < expRxBytePerSession_read_reg_211) ? 1'b1 : 1'b0);

assign length_V_fu_157_p4 = {{s_axis_tcp_notification_TDATA[31:16]}};

assign m_axis_tcp_read_pkg_TDATA = p_Result_s_reg_229;

assign m_axis_tcp_read_pkg_TKEEP = 4'd0;

assign m_axis_tcp_read_pkg_TLAST = 1'd0;

assign m_axis_tcp_read_pkg_TSTRB = 4'd0;

assign nextRxPacketLength3_din = length_V_reg_220;

assign p_Result_s_fu_176_p1 = s_axis_tcp_notification_TDATA[31:0];

assign rxByteCnt_V_1_fu_184_p2 = (rxByteCnt_V_fu_78 + zext_ln208_fu_180_p1);

assign tmp_nbreadreq_fu_96_p6 = s_axis_tcp_notification_TVALID;

assign zext_ln208_fu_180_p1 = length_V_fu_157_p4;

endmodule //hls_recv_krnl_recvData_handshake
