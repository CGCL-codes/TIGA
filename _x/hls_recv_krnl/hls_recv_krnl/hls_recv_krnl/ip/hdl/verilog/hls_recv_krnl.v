// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_recv_krnl_hls_recv_krnl,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=51075,HLS_SYN_LUT=237929,HLS_VERSION=2020_2}" *)

module hls_recv_krnl (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axis_udp_rx_TDATA,
        s_axis_udp_rx_TKEEP,
        s_axis_udp_rx_TSTRB,
        s_axis_udp_rx_TLAST,
        m_axis_udp_tx_TDATA,
        m_axis_udp_tx_TKEEP,
        m_axis_udp_tx_TSTRB,
        m_axis_udp_tx_TLAST,
        s_axis_udp_rx_meta_TDATA,
        s_axis_udp_rx_meta_TKEEP,
        s_axis_udp_rx_meta_TSTRB,
        s_axis_udp_rx_meta_TLAST,
        m_axis_udp_tx_meta_TDATA,
        m_axis_udp_tx_meta_TKEEP,
        m_axis_udp_tx_meta_TSTRB,
        m_axis_udp_tx_meta_TLAST,
        m_axis_tcp_listen_port_TDATA,
        m_axis_tcp_listen_port_TKEEP,
        m_axis_tcp_listen_port_TSTRB,
        m_axis_tcp_listen_port_TLAST,
        s_axis_tcp_port_status_TDATA,
        s_axis_tcp_port_status_TKEEP,
        s_axis_tcp_port_status_TSTRB,
        s_axis_tcp_port_status_TLAST,
        m_axis_tcp_open_connection_TDATA,
        m_axis_tcp_open_connection_TKEEP,
        m_axis_tcp_open_connection_TSTRB,
        m_axis_tcp_open_connection_TLAST,
        s_axis_tcp_open_status_TDATA,
        s_axis_tcp_open_status_TKEEP,
        s_axis_tcp_open_status_TSTRB,
        s_axis_tcp_open_status_TLAST,
        m_axis_tcp_close_connection_TDATA,
        m_axis_tcp_close_connection_TKEEP,
        m_axis_tcp_close_connection_TSTRB,
        m_axis_tcp_close_connection_TLAST,
        s_axis_tcp_notification_TDATA,
        s_axis_tcp_notification_TKEEP,
        s_axis_tcp_notification_TSTRB,
        s_axis_tcp_notification_TLAST,
        m_axis_tcp_read_pkg_TDATA,
        m_axis_tcp_read_pkg_TKEEP,
        m_axis_tcp_read_pkg_TSTRB,
        m_axis_tcp_read_pkg_TLAST,
        s_axis_tcp_rx_meta_TDATA,
        s_axis_tcp_rx_meta_TKEEP,
        s_axis_tcp_rx_meta_TSTRB,
        s_axis_tcp_rx_meta_TLAST,
        s_axis_tcp_rx_data_TDATA,
        s_axis_tcp_rx_data_TKEEP,
        s_axis_tcp_rx_data_TSTRB,
        s_axis_tcp_rx_data_TLAST,
        m_axis_tcp_tx_meta_TDATA,
        m_axis_tcp_tx_meta_TKEEP,
        m_axis_tcp_tx_meta_TSTRB,
        m_axis_tcp_tx_meta_TLAST,
        m_axis_tcp_tx_data_TDATA,
        m_axis_tcp_tx_data_TKEEP,
        m_axis_tcp_tx_data_TSTRB,
        m_axis_tcp_tx_data_TLAST,
        s_axis_tcp_tx_status_TDATA,
        s_axis_tcp_tx_status_TKEEP,
        s_axis_tcp_tx_status_TSTRB,
        s_axis_tcp_tx_status_TLAST,
        m_axis_tcp_listen_port_TVALID,
        m_axis_tcp_listen_port_TREADY,
        s_axis_tcp_port_status_TVALID,
        s_axis_tcp_port_status_TREADY,
        s_axis_tcp_notification_TVALID,
        s_axis_tcp_notification_TREADY,
        m_axis_tcp_read_pkg_TVALID,
        m_axis_tcp_read_pkg_TREADY,
        s_axis_tcp_rx_meta_TVALID,
        s_axis_tcp_rx_meta_TREADY,
        s_axis_tcp_rx_data_TVALID,
        s_axis_tcp_rx_data_TREADY,
        m_axis_tcp_open_connection_TVALID,
        m_axis_tcp_open_connection_TREADY,
        s_axis_tcp_open_status_TVALID,
        s_axis_tcp_open_status_TREADY,
        m_axis_tcp_tx_meta_TVALID,
        m_axis_tcp_tx_meta_TREADY,
        m_axis_tcp_tx_data_TVALID,
        m_axis_tcp_tx_data_TREADY,
        s_axis_tcp_tx_status_TVALID,
        s_axis_tcp_tx_status_TREADY,
        s_axis_udp_rx_TVALID,
        s_axis_udp_rx_TREADY,
        m_axis_udp_tx_TVALID,
        m_axis_udp_tx_TREADY,
        s_axis_udp_rx_meta_TVALID,
        s_axis_udp_rx_meta_TREADY,
        m_axis_udp_tx_meta_TVALID,
        m_axis_udp_tx_meta_TREADY,
        m_axis_tcp_close_connection_TVALID,
        m_axis_tcp_close_connection_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [511:0] s_axis_udp_rx_TDATA;
input  [63:0] s_axis_udp_rx_TKEEP;
input  [63:0] s_axis_udp_rx_TSTRB;
input  [0:0] s_axis_udp_rx_TLAST;
output  [511:0] m_axis_udp_tx_TDATA;
output  [63:0] m_axis_udp_tx_TKEEP;
output  [63:0] m_axis_udp_tx_TSTRB;
output  [0:0] m_axis_udp_tx_TLAST;
input  [255:0] s_axis_udp_rx_meta_TDATA;
input  [31:0] s_axis_udp_rx_meta_TKEEP;
input  [31:0] s_axis_udp_rx_meta_TSTRB;
input  [0:0] s_axis_udp_rx_meta_TLAST;
output  [255:0] m_axis_udp_tx_meta_TDATA;
output  [31:0] m_axis_udp_tx_meta_TKEEP;
output  [31:0] m_axis_udp_tx_meta_TSTRB;
output  [0:0] m_axis_udp_tx_meta_TLAST;
output  [15:0] m_axis_tcp_listen_port_TDATA;
output  [1:0] m_axis_tcp_listen_port_TKEEP;
output  [1:0] m_axis_tcp_listen_port_TSTRB;
output  [0:0] m_axis_tcp_listen_port_TLAST;
input  [7:0] s_axis_tcp_port_status_TDATA;
input  [0:0] s_axis_tcp_port_status_TKEEP;
input  [0:0] s_axis_tcp_port_status_TSTRB;
input  [0:0] s_axis_tcp_port_status_TLAST;
output  [63:0] m_axis_tcp_open_connection_TDATA;
output  [7:0] m_axis_tcp_open_connection_TKEEP;
output  [7:0] m_axis_tcp_open_connection_TSTRB;
output  [0:0] m_axis_tcp_open_connection_TLAST;
input  [127:0] s_axis_tcp_open_status_TDATA;
input  [15:0] s_axis_tcp_open_status_TKEEP;
input  [15:0] s_axis_tcp_open_status_TSTRB;
input  [0:0] s_axis_tcp_open_status_TLAST;
output  [15:0] m_axis_tcp_close_connection_TDATA;
output  [1:0] m_axis_tcp_close_connection_TKEEP;
output  [1:0] m_axis_tcp_close_connection_TSTRB;
output  [0:0] m_axis_tcp_close_connection_TLAST;
input  [127:0] s_axis_tcp_notification_TDATA;
input  [15:0] s_axis_tcp_notification_TKEEP;
input  [15:0] s_axis_tcp_notification_TSTRB;
input  [0:0] s_axis_tcp_notification_TLAST;
output  [31:0] m_axis_tcp_read_pkg_TDATA;
output  [3:0] m_axis_tcp_read_pkg_TKEEP;
output  [3:0] m_axis_tcp_read_pkg_TSTRB;
output  [0:0] m_axis_tcp_read_pkg_TLAST;
input  [15:0] s_axis_tcp_rx_meta_TDATA;
input  [1:0] s_axis_tcp_rx_meta_TKEEP;
input  [1:0] s_axis_tcp_rx_meta_TSTRB;
input  [0:0] s_axis_tcp_rx_meta_TLAST;
input  [511:0] s_axis_tcp_rx_data_TDATA;
input  [63:0] s_axis_tcp_rx_data_TKEEP;
input  [63:0] s_axis_tcp_rx_data_TSTRB;
input  [0:0] s_axis_tcp_rx_data_TLAST;
output  [31:0] m_axis_tcp_tx_meta_TDATA;
output  [3:0] m_axis_tcp_tx_meta_TKEEP;
output  [3:0] m_axis_tcp_tx_meta_TSTRB;
output  [0:0] m_axis_tcp_tx_meta_TLAST;
output  [511:0] m_axis_tcp_tx_data_TDATA;
output  [63:0] m_axis_tcp_tx_data_TKEEP;
output  [63:0] m_axis_tcp_tx_data_TSTRB;
output  [0:0] m_axis_tcp_tx_data_TLAST;
input  [63:0] s_axis_tcp_tx_status_TDATA;
input  [7:0] s_axis_tcp_tx_status_TKEEP;
input  [7:0] s_axis_tcp_tx_status_TSTRB;
input  [0:0] s_axis_tcp_tx_status_TLAST;
output   m_axis_tcp_listen_port_TVALID;
input   m_axis_tcp_listen_port_TREADY;
input   s_axis_tcp_port_status_TVALID;
output   s_axis_tcp_port_status_TREADY;
input   s_axis_tcp_notification_TVALID;
output   s_axis_tcp_notification_TREADY;
output   m_axis_tcp_read_pkg_TVALID;
input   m_axis_tcp_read_pkg_TREADY;
input   s_axis_tcp_rx_meta_TVALID;
output   s_axis_tcp_rx_meta_TREADY;
input   s_axis_tcp_rx_data_TVALID;
output   s_axis_tcp_rx_data_TREADY;
output   m_axis_tcp_open_connection_TVALID;
input   m_axis_tcp_open_connection_TREADY;
input   s_axis_tcp_open_status_TVALID;
output   s_axis_tcp_open_status_TREADY;
output   m_axis_tcp_tx_meta_TVALID;
input   m_axis_tcp_tx_meta_TREADY;
output   m_axis_tcp_tx_data_TVALID;
input   m_axis_tcp_tx_data_TREADY;
input   s_axis_tcp_tx_status_TVALID;
output   s_axis_tcp_tx_status_TREADY;
input   s_axis_udp_rx_TVALID;
output   s_axis_udp_rx_TREADY;
output   m_axis_udp_tx_TVALID;
input   m_axis_udp_tx_TREADY;
input   s_axis_udp_rx_meta_TVALID;
output   s_axis_udp_rx_meta_TREADY;
output   m_axis_udp_tx_meta_TVALID;
input   m_axis_udp_tx_meta_TREADY;
output   m_axis_tcp_close_connection_TVALID;
input   m_axis_tcp_close_connection_TREADY;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [31:0] useConn;
wire   [31:0] basePort;
wire   [31:0] delay;
wire   [63:0] expectedRxByteCnt;
wire   [63:0] out_time;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [63:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    hls_recv_krnl_entry3_U0_ap_start;
wire    hls_recv_krnl_entry3_U0_ap_done;
wire    hls_recv_krnl_entry3_U0_ap_continue;
wire    hls_recv_krnl_entry3_U0_ap_idle;
wire    hls_recv_krnl_entry3_U0_ap_ready;
wire    hls_recv_krnl_entry3_U0_start_out;
wire    hls_recv_krnl_entry3_U0_start_write;
wire   [31:0] hls_recv_krnl_entry3_U0_useConn_out_din;
wire    hls_recv_krnl_entry3_U0_useConn_out_write;
wire   [31:0] hls_recv_krnl_entry3_U0_basePort_out_din;
wire    hls_recv_krnl_entry3_U0_basePort_out_write;
wire   [63:0] hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_din;
wire    hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_write;
wire   [63:0] hls_recv_krnl_entry3_U0_out_time_out_din;
wire    hls_recv_krnl_entry3_U0_out_time_out_write;
wire    hls_recv_krnl_entry45_U0_ap_start;
wire    hls_recv_krnl_entry45_U0_start_full_n;
wire    hls_recv_krnl_entry45_U0_ap_done;
wire    hls_recv_krnl_entry45_U0_ap_continue;
wire    hls_recv_krnl_entry45_U0_ap_idle;
wire    hls_recv_krnl_entry45_U0_ap_ready;
wire    hls_recv_krnl_entry45_U0_start_out;
wire    hls_recv_krnl_entry45_U0_start_write;
wire    hls_recv_krnl_entry45_U0_useConn_read;
wire    hls_recv_krnl_entry45_U0_basePort_read;
wire    hls_recv_krnl_entry45_U0_expectedRxByteCnt_read;
wire    hls_recv_krnl_entry45_U0_out_time_read;
wire   [31:0] hls_recv_krnl_entry45_U0_useConn_out_din;
wire    hls_recv_krnl_entry45_U0_useConn_out_write;
wire   [31:0] hls_recv_krnl_entry45_U0_basePort_out_din;
wire    hls_recv_krnl_entry45_U0_basePort_out_write;
wire   [63:0] hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_din;
wire    hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_write;
wire   [63:0] hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_din;
wire    hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_write;
wire   [63:0] hls_recv_krnl_entry45_U0_out_time_out_din;
wire    hls_recv_krnl_entry45_U0_out_time_out_write;
wire    Block_split11_proc_U0_ap_start;
wire    Block_split11_proc_U0_ap_done;
wire    Block_split11_proc_U0_ap_continue;
wire    Block_split11_proc_U0_ap_idle;
wire    Block_split11_proc_U0_ap_ready;
wire    Block_split11_proc_U0_start_out;
wire    Block_split11_proc_U0_start_write;
wire    Block_split11_proc_U0_expectedRxByteCnt_read;
wire   [31:0] Block_split11_proc_U0_ComputeWordCnt_out_out_din;
wire    Block_split11_proc_U0_ComputeWordCnt_out_out_write;
wire    listenPorts_U0_basePort_read;
wire    listenPorts_U0_useConn_read;
wire   [15:0] listenPorts_U0_m_axis_tcp_listen_port_TDATA;
wire   [1:0] listenPorts_U0_m_axis_tcp_listen_port_TKEEP;
wire   [1:0] listenPorts_U0_m_axis_tcp_listen_port_TSTRB;
wire   [0:0] listenPorts_U0_m_axis_tcp_listen_port_TLAST;
wire    listenPorts_U0_ap_start;
wire    listenPorts_U0_m_axis_tcp_listen_port_TVALID;
wire    listenPorts_U0_ap_done;
wire    listenPorts_U0_s_axis_tcp_port_status_TREADY;
wire    listenPorts_U0_ap_ready;
wire    listenPorts_U0_ap_idle;
wire    listenPorts_U0_ap_continue;
wire    ap_sync_continue;
wire    recvData_U0_expRxBytePerSession_read;
wire   [31:0] recvData_U0_m_axis_tcp_read_pkg_TDATA;
wire   [3:0] recvData_U0_m_axis_tcp_read_pkg_TKEEP;
wire   [3:0] recvData_U0_m_axis_tcp_read_pkg_TSTRB;
wire   [0:0] recvData_U0_m_axis_tcp_read_pkg_TLAST;
wire   [511:0] recvData_U0_s_data_net_out_din;
wire    recvData_U0_s_data_net_out_write;
wire    recvData_U0_s_axis_tcp_notification_TREADY;
wire    recvData_U0_m_axis_tcp_read_pkg_TVALID;
wire    recvData_U0_ap_start;
wire    recvData_U0_ap_done;
wire    recvData_U0_s_axis_tcp_rx_meta_TREADY;
wire    recvData_U0_s_axis_tcp_rx_data_TREADY;
wire    recvData_U0_ap_ready;
wire    recvData_U0_ap_idle;
wire    recvData_U0_ap_continue;
wire    backgroundclock_U0_ap_start;
wire    backgroundclock_U0_ap_done;
wire    backgroundclock_U0_ap_continue;
wire    backgroundclock_U0_ap_idle;
wire    backgroundclock_U0_ap_ready;
wire    backgroundclock_U0_m_axi_gmem_AWVALID;
wire   [63:0] backgroundclock_U0_m_axi_gmem_AWADDR;
wire   [0:0] backgroundclock_U0_m_axi_gmem_AWID;
wire   [31:0] backgroundclock_U0_m_axi_gmem_AWLEN;
wire   [2:0] backgroundclock_U0_m_axi_gmem_AWSIZE;
wire   [1:0] backgroundclock_U0_m_axi_gmem_AWBURST;
wire   [1:0] backgroundclock_U0_m_axi_gmem_AWLOCK;
wire   [3:0] backgroundclock_U0_m_axi_gmem_AWCACHE;
wire   [2:0] backgroundclock_U0_m_axi_gmem_AWPROT;
wire   [3:0] backgroundclock_U0_m_axi_gmem_AWQOS;
wire   [3:0] backgroundclock_U0_m_axi_gmem_AWREGION;
wire   [0:0] backgroundclock_U0_m_axi_gmem_AWUSER;
wire    backgroundclock_U0_m_axi_gmem_WVALID;
wire   [63:0] backgroundclock_U0_m_axi_gmem_WDATA;
wire   [7:0] backgroundclock_U0_m_axi_gmem_WSTRB;
wire    backgroundclock_U0_m_axi_gmem_WLAST;
wire   [0:0] backgroundclock_U0_m_axi_gmem_WID;
wire   [0:0] backgroundclock_U0_m_axi_gmem_WUSER;
wire    backgroundclock_U0_m_axi_gmem_ARVALID;
wire   [63:0] backgroundclock_U0_m_axi_gmem_ARADDR;
wire   [0:0] backgroundclock_U0_m_axi_gmem_ARID;
wire   [31:0] backgroundclock_U0_m_axi_gmem_ARLEN;
wire   [2:0] backgroundclock_U0_m_axi_gmem_ARSIZE;
wire   [1:0] backgroundclock_U0_m_axi_gmem_ARBURST;
wire   [1:0] backgroundclock_U0_m_axi_gmem_ARLOCK;
wire   [3:0] backgroundclock_U0_m_axi_gmem_ARCACHE;
wire   [2:0] backgroundclock_U0_m_axi_gmem_ARPROT;
wire   [3:0] backgroundclock_U0_m_axi_gmem_ARQOS;
wire   [3:0] backgroundclock_U0_m_axi_gmem_ARREGION;
wire   [0:0] backgroundclock_U0_m_axi_gmem_ARUSER;
wire    backgroundclock_U0_m_axi_gmem_RREADY;
wire    backgroundclock_U0_m_axi_gmem_BREADY;
wire    backgroundclock_U0_timesha_read;
wire    backgroundclock_U0_timeaes_read;
wire    backgroundclock_U0_out_time_read;
wire    partition_U0_ap_start;
wire    partition_U0_start_full_n;
wire    partition_U0_start_out;
wire    partition_U0_start_write;
wire    partition_U0_ComputeWordCnt_loc_read;
wire   [31:0] partition_U0_ComputeWordCnt_loc_out_din;
wire    partition_U0_ComputeWordCnt_loc_out_write;
wire   [31:0] partition_U0_ComputeWordCnt_loc_out1_din;
wire    partition_U0_ComputeWordCnt_loc_out1_write;
wire    partition_U0_s_data_net_out_read;
wire   [511:0] partition_U0_s_data_cal_din;
wire    partition_U0_s_data_cal_write;
wire   [511:0] partition_U0_s_data_out_din;
wire    partition_U0_s_data_out_write;
wire    partition_U0_ap_done;
wire    partition_U0_ap_ready;
wire    partition_U0_ap_idle;
wire    partition_U0_ap_continue;
wire    consumetrans_U0_ap_start;
wire    consumetrans_U0_ap_done;
wire    consumetrans_U0_ap_continue;
wire    consumetrans_U0_ap_idle;
wire    consumetrans_U0_ap_ready;
wire    consumetrans_U0_ComputeWordCnt_loc_read;
wire    consumetrans_U0_s_data_out_read;
wire    prepare_sha_U0_ap_start;
wire    prepare_sha_U0_ap_done;
wire    prepare_sha_U0_ap_continue;
wire    prepare_sha_U0_ap_idle;
wire    prepare_sha_U0_ap_ready;
wire    prepare_sha_U0_start_out;
wire    prepare_sha_U0_start_write;
wire    prepare_sha_U0_ComputeWordCnt_loc_read;
wire   [31:0] prepare_sha_U0_ComputeWordCnt_loc_out_din;
wire    prepare_sha_U0_ComputeWordCnt_loc_out_write;
wire    prepare_sha_U0_s_data_cal_read;
wire   [0:0] prepare_sha_U0_endMsgLenStrm_din;
wire    prepare_sha_U0_endMsgLenStrm_write;
wire   [127:0] prepare_sha_U0_msgLenStrm_din;
wire    prepare_sha_U0_msgLenStrm_write;
wire   [63:0] prepare_sha_U0_msgStrm_din;
wire    prepare_sha_U0_msgStrm_write;
wire   [511:0] prepare_sha_U0_sha_in_din;
wire    prepare_sha_U0_sha_in_write;
wire    mysha_U0_ap_start;
wire    mysha_U0_start_full_n;
wire    mysha_U0_ap_done;
wire    mysha_U0_ap_continue;
wire    mysha_U0_ap_idle;
wire    mysha_U0_ap_ready;
wire    mysha_U0_start_out;
wire    mysha_U0_start_write;
wire   [31:0] mysha_U0_timesha_din;
wire    mysha_U0_timesha_write;
wire    mysha_U0_ComputeWordCnt_loc_read;
wire   [31:0] mysha_U0_ComputeWordCnt_loc_out_din;
wire    mysha_U0_ComputeWordCnt_loc_out_write;
wire   [31:0] mysha_U0_ComputeWordCnt_loc_out1_din;
wire    mysha_U0_ComputeWordCnt_loc_out1_write;
wire    mysha_U0_sha_in_read;
wire   [511:0] mysha_U0_sha_out_din;
wire    mysha_U0_sha_out_write;
wire    mysha_U0_endMsgLenStrm_read;
wire    mysha_U0_msgLenStrm_read;
wire    mysha_U0_msgStrm_read;
wire   [255:0] mysha_U0_digestStrm_din;
wire    mysha_U0_digestStrm_write;
wire   [0:0] mysha_U0_endDigestStrm_din;
wire    mysha_U0_endDigestStrm_write;
wire    consumesha_U0_ap_start;
wire    consumesha_U0_ap_done;
wire    consumesha_U0_ap_continue;
wire    consumesha_U0_ap_idle;
wire    consumesha_U0_ap_ready;
wire    consumesha_U0_ComputeWordCnt_loc_read;
wire    consumesha_U0_endDigestStrm_read;
wire    consumesha_U0_digestStrm_read;
wire    prepare_aes_U0_ap_start;
wire    prepare_aes_U0_ap_done;
wire    prepare_aes_U0_ap_continue;
wire    prepare_aes_U0_ap_idle;
wire    prepare_aes_U0_ap_ready;
wire    prepare_aes_U0_start_out;
wire    prepare_aes_U0_start_write;
wire   [127:0] prepare_aes_U0_ciphertextStrm_din;
wire    prepare_aes_U0_ciphertextStrm_write;
wire   [0:0] prepare_aes_U0_endCiphertextStrm_din;
wire    prepare_aes_U0_endCiphertextStrm_write;
wire   [255:0] prepare_aes_U0_cipherkeyStrm_din;
wire    prepare_aes_U0_cipherkeyStrm_write;
wire   [127:0] prepare_aes_U0_IVStrm_din;
wire    prepare_aes_U0_IVStrm_write;
wire    prepare_aes_U0_ComputeWordCnt_loc_read;
wire   [31:0] prepare_aes_U0_ComputeWordCnt_loc_out_din;
wire    prepare_aes_U0_ComputeWordCnt_loc_out_write;
wire    prepare_aes_U0_sha_out_read;
wire    myaes_U0_ap_start;
wire    myaes_U0_ap_done;
wire    myaes_U0_ap_continue;
wire    myaes_U0_ap_idle;
wire    myaes_U0_ap_ready;
wire    myaes_U0_start_out;
wire    myaes_U0_start_write;
wire    myaes_U0_ciphertextStrm_read;
wire    myaes_U0_endCiphertextStrm_read;
wire    myaes_U0_cipherkeyStrm_read;
wire    myaes_U0_IVStrm_read;
wire   [127:0] myaes_U0_plaintextStrm_din;
wire    myaes_U0_plaintextStrm_write;
wire   [0:0] myaes_U0_endPlaintextStrm_din;
wire    myaes_U0_endPlaintextStrm_write;
wire   [31:0] myaes_U0_timeaes_din;
wire    myaes_U0_timeaes_write;
wire    myaes_U0_ComputeWordCnt_loc_read;
wire   [31:0] myaes_U0_ComputeWordCnt_loc_out_din;
wire    myaes_U0_ComputeWordCnt_loc_out_write;
wire    consumeaes_U0_ap_start;
wire    consumeaes_U0_ap_done;
wire    consumeaes_U0_ap_continue;
wire    consumeaes_U0_ap_idle;
wire    consumeaes_U0_ap_ready;
wire    consumeaes_U0_plaintextStrm_read;
wire    consumeaes_U0_endPlaintextStrm_read;
wire    consumeaes_U0_ComputeWordCnt_loc_read;
wire    tie_off_tcp_open_connection_U0_ap_start;
wire    tie_off_tcp_open_connection_U0_ap_done;
wire    tie_off_tcp_open_connection_U0_ap_continue;
wire    tie_off_tcp_open_connection_U0_ap_idle;
wire    tie_off_tcp_open_connection_U0_ap_ready;
wire   [63:0] tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TDATA;
wire    tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TVALID;
wire   [7:0] tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TKEEP;
wire   [7:0] tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TSTRB;
wire   [0:0] tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TLAST;
wire    tie_off_tcp_open_connection_U0_s_axis_tcp_open_status_TREADY;
wire    tie_off_tcp_tx_U0_ap_start;
wire    tie_off_tcp_tx_U0_ap_done;
wire    tie_off_tcp_tx_U0_ap_continue;
wire    tie_off_tcp_tx_U0_ap_idle;
wire    tie_off_tcp_tx_U0_ap_ready;
wire   [31:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TDATA;
wire    tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TVALID;
wire   [3:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TKEEP;
wire   [3:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TSTRB;
wire   [0:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TLAST;
wire   [511:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TDATA;
wire    tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TVALID;
wire   [63:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TKEEP;
wire   [63:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TSTRB;
wire   [0:0] tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TLAST;
wire    tie_off_tcp_tx_U0_s_axis_tcp_tx_status_TREADY;
wire    tie_off_udp_U0_ap_start;
wire    tie_off_udp_U0_ap_done;
wire    tie_off_udp_U0_ap_continue;
wire    tie_off_udp_U0_ap_idle;
wire    tie_off_udp_U0_ap_ready;
wire    tie_off_udp_U0_s_axis_udp_rx_TREADY;
wire   [511:0] tie_off_udp_U0_m_axis_udp_tx_TDATA;
wire    tie_off_udp_U0_m_axis_udp_tx_TVALID;
wire   [63:0] tie_off_udp_U0_m_axis_udp_tx_TKEEP;
wire   [63:0] tie_off_udp_U0_m_axis_udp_tx_TSTRB;
wire   [0:0] tie_off_udp_U0_m_axis_udp_tx_TLAST;
wire    tie_off_udp_U0_s_axis_udp_rx_meta_TREADY;
wire   [255:0] tie_off_udp_U0_m_axis_udp_tx_meta_TDATA;
wire    tie_off_udp_U0_m_axis_udp_tx_meta_TVALID;
wire   [31:0] tie_off_udp_U0_m_axis_udp_tx_meta_TKEEP;
wire   [31:0] tie_off_udp_U0_m_axis_udp_tx_meta_TSTRB;
wire   [0:0] tie_off_udp_U0_m_axis_udp_tx_meta_TLAST;
wire    tie_off_tcp_close_con_U0_ap_start;
wire    tie_off_tcp_close_con_U0_ap_done;
wire    tie_off_tcp_close_con_U0_ap_continue;
wire    tie_off_tcp_close_con_U0_ap_idle;
wire    tie_off_tcp_close_con_U0_ap_ready;
wire   [15:0] tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TDATA;
wire    tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TVALID;
wire   [1:0] tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TKEEP;
wire   [1:0] tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TSTRB;
wire   [0:0] tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TLAST;
wire    useConn_c1_full_n;
wire   [31:0] useConn_c1_dout;
wire    useConn_c1_empty_n;
wire    basePort_c2_full_n;
wire   [31:0] basePort_c2_dout;
wire    basePort_c2_empty_n;
wire    expectedRxByteCnt_c3_full_n;
wire   [63:0] expectedRxByteCnt_c3_dout;
wire    expectedRxByteCnt_c3_empty_n;
wire    out_time_c4_full_n;
wire   [63:0] out_time_c4_dout;
wire    out_time_c4_empty_n;
wire    useConn_c_full_n;
wire   [31:0] useConn_c_dout;
wire    useConn_c_empty_n;
wire    basePort_c_full_n;
wire   [31:0] basePort_c_dout;
wire    basePort_c_empty_n;
wire    expectedRxByteCnt_c_full_n;
wire   [63:0] expectedRxByteCnt_c_dout;
wire    expectedRxByteCnt_c_empty_n;
wire    expectedRxByteCnt_c44_full_n;
wire   [63:0] expectedRxByteCnt_c44_dout;
wire    expectedRxByteCnt_c44_empty_n;
wire    out_time_c_full_n;
wire   [63:0] out_time_c_dout;
wire    out_time_c_empty_n;
wire    ComputeWordCnt_loc_c_full_n;
wire   [31:0] ComputeWordCnt_loc_c_dout;
wire    ComputeWordCnt_loc_c_empty_n;
wire    s_data_net_out_full_n;
wire   [511:0] s_data_net_out_dout;
wire    s_data_net_out_empty_n;
wire    timesha_full_n;
wire   [31:0] timesha_dout;
wire    timesha_empty_n;
wire    timeaes_full_n;
wire   [31:0] timeaes_dout;
wire    timeaes_empty_n;
wire    ComputeWordCnt_loc_c45_full_n;
wire   [31:0] ComputeWordCnt_loc_c45_dout;
wire    ComputeWordCnt_loc_c45_empty_n;
wire    ComputeWordCnt_loc_c46_full_n;
wire   [31:0] ComputeWordCnt_loc_c46_dout;
wire    ComputeWordCnt_loc_c46_empty_n;
wire    s_data_cal_full_n;
wire   [511:0] s_data_cal_dout;
wire    s_data_cal_empty_n;
wire    s_data_out_full_n;
wire   [511:0] s_data_out_dout;
wire    s_data_out_empty_n;
wire    ComputeWordCnt_loc_c47_full_n;
wire   [31:0] ComputeWordCnt_loc_c47_dout;
wire    ComputeWordCnt_loc_c47_empty_n;
wire    endMsgLenStrm_full_n;
wire   [0:0] endMsgLenStrm_dout;
wire    endMsgLenStrm_empty_n;
wire    msgLenStrm_full_n;
wire   [127:0] msgLenStrm_dout;
wire    msgLenStrm_empty_n;
wire    msgStrm_full_n;
wire   [63:0] msgStrm_dout;
wire    msgStrm_empty_n;
wire    sha_in_full_n;
wire   [511:0] sha_in_dout;
wire    sha_in_empty_n;
wire    ComputeWordCnt_loc_c48_full_n;
wire   [31:0] ComputeWordCnt_loc_c48_dout;
wire    ComputeWordCnt_loc_c48_empty_n;
wire    ComputeWordCnt_loc_c49_full_n;
wire   [31:0] ComputeWordCnt_loc_c49_dout;
wire    ComputeWordCnt_loc_c49_empty_n;
wire    sha_out_full_n;
wire   [511:0] sha_out_dout;
wire    sha_out_empty_n;
wire    digestStrm_full_n;
wire   [255:0] digestStrm_dout;
wire    digestStrm_empty_n;
wire    endDigestStrm_full_n;
wire   [0:0] endDigestStrm_dout;
wire    endDigestStrm_empty_n;
wire    ciphertextStrm_full_n;
wire   [127:0] ciphertextStrm_dout;
wire    ciphertextStrm_empty_n;
wire    endCiphertextStrm_full_n;
wire   [0:0] endCiphertextStrm_dout;
wire    endCiphertextStrm_empty_n;
wire    cipherkeyStrm_full_n;
wire   [255:0] cipherkeyStrm_dout;
wire    cipherkeyStrm_empty_n;
wire    IVStrm_full_n;
wire   [127:0] IVStrm_dout;
wire    IVStrm_empty_n;
wire    ComputeWordCnt_loc_c50_full_n;
wire   [31:0] ComputeWordCnt_loc_c50_dout;
wire    ComputeWordCnt_loc_c50_empty_n;
wire    plaintextStrm_full_n;
wire   [127:0] plaintextStrm_dout;
wire    plaintextStrm_empty_n;
wire    endPlaintextStrm_full_n;
wire   [0:0] endPlaintextStrm_dout;
wire    endPlaintextStrm_empty_n;
wire    ComputeWordCnt_loc_c51_full_n;
wire   [31:0] ComputeWordCnt_loc_c51_dout;
wire    ComputeWordCnt_loc_c51_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready;
wire    ap_sync_hls_recv_krnl_entry3_U0_ap_ready;
reg    ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready;
wire    ap_sync_tie_off_tcp_open_connection_U0_ap_ready;
reg    ap_sync_reg_tie_off_tcp_tx_U0_ap_ready;
wire    ap_sync_tie_off_tcp_tx_U0_ap_ready;
reg    ap_sync_reg_tie_off_udp_U0_ap_ready;
wire    ap_sync_tie_off_udp_U0_ap_ready;
reg    ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready;
wire    ap_sync_tie_off_tcp_close_con_U0_ap_ready;
wire   [0:0] start_for_hls_recv_krnl_entry45_U0_din;
wire    start_for_hls_recv_krnl_entry45_U0_full_n;
wire   [0:0] start_for_hls_recv_krnl_entry45_U0_dout;
wire    start_for_hls_recv_krnl_entry45_U0_empty_n;
wire   [0:0] start_for_Block_split11_proc_U0_din;
wire    start_for_Block_split11_proc_U0_full_n;
wire   [0:0] start_for_Block_split11_proc_U0_dout;
wire    start_for_Block_split11_proc_U0_empty_n;
wire   [0:0] start_for_listenPorts_U0_din;
wire    start_for_listenPorts_U0_full_n;
wire   [0:0] start_for_listenPorts_U0_dout;
wire    start_for_listenPorts_U0_empty_n;
wire   [0:0] start_for_recvData_U0_din;
wire    start_for_recvData_U0_full_n;
wire   [0:0] start_for_recvData_U0_dout;
wire    start_for_recvData_U0_empty_n;
wire   [0:0] start_for_backgroundclock_U0_din;
wire    start_for_backgroundclock_U0_full_n;
wire   [0:0] start_for_backgroundclock_U0_dout;
wire    start_for_backgroundclock_U0_empty_n;
wire   [0:0] start_for_partition_U0_din;
wire    start_for_partition_U0_full_n;
wire   [0:0] start_for_partition_U0_dout;
wire    start_for_partition_U0_empty_n;
wire    listenPorts_U0_start_full_n;
wire    listenPorts_U0_start_write;
wire    recvData_U0_start_full_n;
wire    recvData_U0_start_write;
wire    backgroundclock_U0_start_full_n;
wire    backgroundclock_U0_start_write;
wire   [0:0] start_for_consumetrans_U0_din;
wire    start_for_consumetrans_U0_full_n;
wire   [0:0] start_for_consumetrans_U0_dout;
wire    start_for_consumetrans_U0_empty_n;
wire   [0:0] start_for_prepare_sha_U0_din;
wire    start_for_prepare_sha_U0_full_n;
wire   [0:0] start_for_prepare_sha_U0_dout;
wire    start_for_prepare_sha_U0_empty_n;
wire    consumetrans_U0_start_full_n;
wire    consumetrans_U0_start_write;
wire   [0:0] start_for_mysha_U0_din;
wire    start_for_mysha_U0_full_n;
wire   [0:0] start_for_mysha_U0_dout;
wire    start_for_mysha_U0_empty_n;
wire   [0:0] start_for_consumesha_U0_din;
wire    start_for_consumesha_U0_full_n;
wire   [0:0] start_for_consumesha_U0_dout;
wire    start_for_consumesha_U0_empty_n;
wire   [0:0] start_for_prepare_aes_U0_din;
wire    start_for_prepare_aes_U0_full_n;
wire   [0:0] start_for_prepare_aes_U0_dout;
wire    start_for_prepare_aes_U0_empty_n;
wire    consumesha_U0_start_full_n;
wire    consumesha_U0_start_write;
wire   [0:0] start_for_myaes_U0_din;
wire    start_for_myaes_U0_full_n;
wire   [0:0] start_for_myaes_U0_dout;
wire    start_for_myaes_U0_empty_n;
wire   [0:0] start_for_consumeaes_U0_din;
wire    start_for_consumeaes_U0_full_n;
wire   [0:0] start_for_consumeaes_U0_dout;
wire    start_for_consumeaes_U0_empty_n;
wire    consumeaes_U0_start_full_n;
wire    consumeaes_U0_start_write;
wire    tie_off_tcp_open_connection_U0_start_full_n;
wire    tie_off_tcp_open_connection_U0_start_write;
wire    tie_off_tcp_tx_U0_start_full_n;
wire    tie_off_tcp_tx_U0_start_write;
wire    tie_off_udp_U0_start_full_n;
wire    tie_off_udp_U0_start_write;
wire    tie_off_tcp_close_con_U0_start_full_n;
wire    tie_off_tcp_close_con_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready = 1'b0;
#0 ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready = 1'b0;
#0 ap_sync_reg_tie_off_tcp_tx_U0_ap_ready = 1'b0;
#0 ap_sync_reg_tie_off_udp_U0_ap_ready = 1'b0;
#0 ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready = 1'b0;
end

hls_recv_krnl_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .useConn(useConn),
    .basePort(basePort),
    .delay(delay),
    .expectedRxByteCnt(expectedRxByteCnt),
    .out_time(out_time),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

hls_recv_krnl_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(backgroundclock_U0_m_axi_gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(backgroundclock_U0_m_axi_gmem_AWADDR),
    .I_AWID(backgroundclock_U0_m_axi_gmem_AWID),
    .I_AWLEN(backgroundclock_U0_m_axi_gmem_AWLEN),
    .I_AWSIZE(backgroundclock_U0_m_axi_gmem_AWSIZE),
    .I_AWLOCK(backgroundclock_U0_m_axi_gmem_AWLOCK),
    .I_AWCACHE(backgroundclock_U0_m_axi_gmem_AWCACHE),
    .I_AWQOS(backgroundclock_U0_m_axi_gmem_AWQOS),
    .I_AWPROT(backgroundclock_U0_m_axi_gmem_AWPROT),
    .I_AWUSER(backgroundclock_U0_m_axi_gmem_AWUSER),
    .I_AWBURST(backgroundclock_U0_m_axi_gmem_AWBURST),
    .I_AWREGION(backgroundclock_U0_m_axi_gmem_AWREGION),
    .I_WVALID(backgroundclock_U0_m_axi_gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(backgroundclock_U0_m_axi_gmem_WDATA),
    .I_WID(backgroundclock_U0_m_axi_gmem_WID),
    .I_WUSER(backgroundclock_U0_m_axi_gmem_WUSER),
    .I_WLAST(backgroundclock_U0_m_axi_gmem_WLAST),
    .I_WSTRB(backgroundclock_U0_m_axi_gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(backgroundclock_U0_m_axi_gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

hls_recv_krnl_hls_recv_krnl_entry3 hls_recv_krnl_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(hls_recv_krnl_entry3_U0_ap_start),
    .start_full_n(start_for_hls_recv_krnl_entry45_U0_full_n),
    .ap_done(hls_recv_krnl_entry3_U0_ap_done),
    .ap_continue(hls_recv_krnl_entry3_U0_ap_continue),
    .ap_idle(hls_recv_krnl_entry3_U0_ap_idle),
    .ap_ready(hls_recv_krnl_entry3_U0_ap_ready),
    .start_out(hls_recv_krnl_entry3_U0_start_out),
    .start_write(hls_recv_krnl_entry3_U0_start_write),
    .useConn(useConn),
    .basePort(basePort),
    .expectedRxByteCnt(expectedRxByteCnt),
    .out_time(out_time),
    .useConn_out_din(hls_recv_krnl_entry3_U0_useConn_out_din),
    .useConn_out_full_n(useConn_c1_full_n),
    .useConn_out_write(hls_recv_krnl_entry3_U0_useConn_out_write),
    .basePort_out_din(hls_recv_krnl_entry3_U0_basePort_out_din),
    .basePort_out_full_n(basePort_c2_full_n),
    .basePort_out_write(hls_recv_krnl_entry3_U0_basePort_out_write),
    .expectedRxByteCnt_out_din(hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_din),
    .expectedRxByteCnt_out_full_n(expectedRxByteCnt_c3_full_n),
    .expectedRxByteCnt_out_write(hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_write),
    .out_time_out_din(hls_recv_krnl_entry3_U0_out_time_out_din),
    .out_time_out_full_n(out_time_c4_full_n),
    .out_time_out_write(hls_recv_krnl_entry3_U0_out_time_out_write)
);

hls_recv_krnl_hls_recv_krnl_entry45 hls_recv_krnl_entry45_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(hls_recv_krnl_entry45_U0_ap_start),
    .start_full_n(hls_recv_krnl_entry45_U0_start_full_n),
    .ap_done(hls_recv_krnl_entry45_U0_ap_done),
    .ap_continue(hls_recv_krnl_entry45_U0_ap_continue),
    .ap_idle(hls_recv_krnl_entry45_U0_ap_idle),
    .ap_ready(hls_recv_krnl_entry45_U0_ap_ready),
    .start_out(hls_recv_krnl_entry45_U0_start_out),
    .start_write(hls_recv_krnl_entry45_U0_start_write),
    .useConn_dout(useConn_c1_dout),
    .useConn_empty_n(useConn_c1_empty_n),
    .useConn_read(hls_recv_krnl_entry45_U0_useConn_read),
    .basePort_dout(basePort_c2_dout),
    .basePort_empty_n(basePort_c2_empty_n),
    .basePort_read(hls_recv_krnl_entry45_U0_basePort_read),
    .expectedRxByteCnt_dout(expectedRxByteCnt_c3_dout),
    .expectedRxByteCnt_empty_n(expectedRxByteCnt_c3_empty_n),
    .expectedRxByteCnt_read(hls_recv_krnl_entry45_U0_expectedRxByteCnt_read),
    .out_time_dout(out_time_c4_dout),
    .out_time_empty_n(out_time_c4_empty_n),
    .out_time_read(hls_recv_krnl_entry45_U0_out_time_read),
    .useConn_out_din(hls_recv_krnl_entry45_U0_useConn_out_din),
    .useConn_out_full_n(useConn_c_full_n),
    .useConn_out_write(hls_recv_krnl_entry45_U0_useConn_out_write),
    .basePort_out_din(hls_recv_krnl_entry45_U0_basePort_out_din),
    .basePort_out_full_n(basePort_c_full_n),
    .basePort_out_write(hls_recv_krnl_entry45_U0_basePort_out_write),
    .expectedRxByteCnt_out_din(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_din),
    .expectedRxByteCnt_out_full_n(expectedRxByteCnt_c_full_n),
    .expectedRxByteCnt_out_write(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_write),
    .expectedRxByteCnt_out1_din(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_din),
    .expectedRxByteCnt_out1_full_n(expectedRxByteCnt_c44_full_n),
    .expectedRxByteCnt_out1_write(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_write),
    .out_time_out_din(hls_recv_krnl_entry45_U0_out_time_out_din),
    .out_time_out_full_n(out_time_c_full_n),
    .out_time_out_write(hls_recv_krnl_entry45_U0_out_time_out_write)
);

hls_recv_krnl_Block_split11_proc Block_split11_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_split11_proc_U0_ap_start),
    .start_full_n(start_for_partition_U0_full_n),
    .ap_done(Block_split11_proc_U0_ap_done),
    .ap_continue(Block_split11_proc_U0_ap_continue),
    .ap_idle(Block_split11_proc_U0_ap_idle),
    .ap_ready(Block_split11_proc_U0_ap_ready),
    .start_out(Block_split11_proc_U0_start_out),
    .start_write(Block_split11_proc_U0_start_write),
    .expectedRxByteCnt_dout(expectedRxByteCnt_c_dout),
    .expectedRxByteCnt_empty_n(expectedRxByteCnt_c_empty_n),
    .expectedRxByteCnt_read(Block_split11_proc_U0_expectedRxByteCnt_read),
    .ComputeWordCnt_out_out_din(Block_split11_proc_U0_ComputeWordCnt_out_out_din),
    .ComputeWordCnt_out_out_full_n(ComputeWordCnt_loc_c_full_n),
    .ComputeWordCnt_out_out_write(Block_split11_proc_U0_ComputeWordCnt_out_out_write)
);

hls_recv_krnl_listenPorts listenPorts_U0(
    .basePort_dout(basePort_c_dout),
    .basePort_empty_n(basePort_c_empty_n),
    .basePort_read(listenPorts_U0_basePort_read),
    .useConn_dout(useConn_c_dout),
    .useConn_empty_n(useConn_c_empty_n),
    .useConn_read(listenPorts_U0_useConn_read),
    .m_axis_tcp_listen_port_TDATA(listenPorts_U0_m_axis_tcp_listen_port_TDATA),
    .m_axis_tcp_listen_port_TKEEP(listenPorts_U0_m_axis_tcp_listen_port_TKEEP),
    .m_axis_tcp_listen_port_TSTRB(listenPorts_U0_m_axis_tcp_listen_port_TSTRB),
    .m_axis_tcp_listen_port_TLAST(listenPorts_U0_m_axis_tcp_listen_port_TLAST),
    .s_axis_tcp_port_status_TDATA(s_axis_tcp_port_status_TDATA),
    .s_axis_tcp_port_status_TKEEP(s_axis_tcp_port_status_TKEEP),
    .s_axis_tcp_port_status_TSTRB(s_axis_tcp_port_status_TSTRB),
    .s_axis_tcp_port_status_TLAST(s_axis_tcp_port_status_TLAST),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(listenPorts_U0_ap_start),
    .m_axis_tcp_listen_port_TVALID(listenPorts_U0_m_axis_tcp_listen_port_TVALID),
    .m_axis_tcp_listen_port_TREADY(m_axis_tcp_listen_port_TREADY),
    .ap_done(listenPorts_U0_ap_done),
    .s_axis_tcp_port_status_TVALID(s_axis_tcp_port_status_TVALID),
    .s_axis_tcp_port_status_TREADY(listenPorts_U0_s_axis_tcp_port_status_TREADY),
    .ap_ready(listenPorts_U0_ap_ready),
    .ap_idle(listenPorts_U0_ap_idle),
    .ap_continue(listenPorts_U0_ap_continue)
);

hls_recv_krnl_recvData recvData_U0(
    .expRxBytePerSession_dout(expectedRxByteCnt_c44_dout),
    .expRxBytePerSession_empty_n(expectedRxByteCnt_c44_empty_n),
    .expRxBytePerSession_read(recvData_U0_expRxBytePerSession_read),
    .s_axis_tcp_notification_TDATA(s_axis_tcp_notification_TDATA),
    .s_axis_tcp_notification_TKEEP(s_axis_tcp_notification_TKEEP),
    .s_axis_tcp_notification_TSTRB(s_axis_tcp_notification_TSTRB),
    .s_axis_tcp_notification_TLAST(s_axis_tcp_notification_TLAST),
    .m_axis_tcp_read_pkg_TDATA(recvData_U0_m_axis_tcp_read_pkg_TDATA),
    .m_axis_tcp_read_pkg_TKEEP(recvData_U0_m_axis_tcp_read_pkg_TKEEP),
    .m_axis_tcp_read_pkg_TSTRB(recvData_U0_m_axis_tcp_read_pkg_TSTRB),
    .m_axis_tcp_read_pkg_TLAST(recvData_U0_m_axis_tcp_read_pkg_TLAST),
    .s_axis_tcp_rx_meta_TDATA(s_axis_tcp_rx_meta_TDATA),
    .s_axis_tcp_rx_meta_TKEEP(s_axis_tcp_rx_meta_TKEEP),
    .s_axis_tcp_rx_meta_TSTRB(s_axis_tcp_rx_meta_TSTRB),
    .s_axis_tcp_rx_meta_TLAST(s_axis_tcp_rx_meta_TLAST),
    .s_axis_tcp_rx_data_TDATA(s_axis_tcp_rx_data_TDATA),
    .s_axis_tcp_rx_data_TKEEP(s_axis_tcp_rx_data_TKEEP),
    .s_axis_tcp_rx_data_TSTRB(s_axis_tcp_rx_data_TSTRB),
    .s_axis_tcp_rx_data_TLAST(s_axis_tcp_rx_data_TLAST),
    .s_data_net_out_din(recvData_U0_s_data_net_out_din),
    .s_data_net_out_full_n(s_data_net_out_full_n),
    .s_data_net_out_write(recvData_U0_s_data_net_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .s_axis_tcp_notification_TVALID(s_axis_tcp_notification_TVALID),
    .s_axis_tcp_notification_TREADY(recvData_U0_s_axis_tcp_notification_TREADY),
    .m_axis_tcp_read_pkg_TVALID(recvData_U0_m_axis_tcp_read_pkg_TVALID),
    .m_axis_tcp_read_pkg_TREADY(m_axis_tcp_read_pkg_TREADY),
    .ap_start(recvData_U0_ap_start),
    .ap_done(recvData_U0_ap_done),
    .s_axis_tcp_rx_meta_TVALID(s_axis_tcp_rx_meta_TVALID),
    .s_axis_tcp_rx_meta_TREADY(recvData_U0_s_axis_tcp_rx_meta_TREADY),
    .s_axis_tcp_rx_data_TVALID(s_axis_tcp_rx_data_TVALID),
    .s_axis_tcp_rx_data_TREADY(recvData_U0_s_axis_tcp_rx_data_TREADY),
    .ap_ready(recvData_U0_ap_ready),
    .ap_idle(recvData_U0_ap_idle),
    .ap_continue(recvData_U0_ap_continue)
);

hls_recv_krnl_backgroundclock backgroundclock_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(backgroundclock_U0_ap_start),
    .ap_done(backgroundclock_U0_ap_done),
    .ap_continue(backgroundclock_U0_ap_continue),
    .ap_idle(backgroundclock_U0_ap_idle),
    .ap_ready(backgroundclock_U0_ap_ready),
    .m_axi_gmem_AWVALID(backgroundclock_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(backgroundclock_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(backgroundclock_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(backgroundclock_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(backgroundclock_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(backgroundclock_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(backgroundclock_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(backgroundclock_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(backgroundclock_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(backgroundclock_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(backgroundclock_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(backgroundclock_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(backgroundclock_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(backgroundclock_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(backgroundclock_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(backgroundclock_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(backgroundclock_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(backgroundclock_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(backgroundclock_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(backgroundclock_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(backgroundclock_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(backgroundclock_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(backgroundclock_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(backgroundclock_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(backgroundclock_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(backgroundclock_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(backgroundclock_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(backgroundclock_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(backgroundclock_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(backgroundclock_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(backgroundclock_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(64'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(backgroundclock_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .timesha_dout(timesha_dout),
    .timesha_empty_n(timesha_empty_n),
    .timesha_read(backgroundclock_U0_timesha_read),
    .timeaes_dout(timeaes_dout),
    .timeaes_empty_n(timeaes_empty_n),
    .timeaes_read(backgroundclock_U0_timeaes_read),
    .out_time_dout(out_time_c_dout),
    .out_time_empty_n(out_time_c_empty_n),
    .out_time_read(backgroundclock_U0_out_time_read)
);

hls_recv_krnl_partition partition_U0(
    .ap_start(partition_U0_ap_start),
    .start_full_n(partition_U0_start_full_n),
    .start_out(partition_U0_start_out),
    .start_write(partition_U0_start_write),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c_empty_n),
    .ComputeWordCnt_loc_read(partition_U0_ComputeWordCnt_loc_read),
    .ComputeWordCnt_loc_out_din(partition_U0_ComputeWordCnt_loc_out_din),
    .ComputeWordCnt_loc_out_full_n(ComputeWordCnt_loc_c45_full_n),
    .ComputeWordCnt_loc_out_write(partition_U0_ComputeWordCnt_loc_out_write),
    .ComputeWordCnt_loc_out1_din(partition_U0_ComputeWordCnt_loc_out1_din),
    .ComputeWordCnt_loc_out1_full_n(ComputeWordCnt_loc_c46_full_n),
    .ComputeWordCnt_loc_out1_write(partition_U0_ComputeWordCnt_loc_out1_write),
    .s_data_net_out_dout(s_data_net_out_dout),
    .s_data_net_out_empty_n(s_data_net_out_empty_n),
    .s_data_net_out_read(partition_U0_s_data_net_out_read),
    .s_data_cal_din(partition_U0_s_data_cal_din),
    .s_data_cal_full_n(s_data_cal_full_n),
    .s_data_cal_write(partition_U0_s_data_cal_write),
    .s_data_out_din(partition_U0_s_data_out_din),
    .s_data_out_full_n(s_data_out_full_n),
    .s_data_out_write(partition_U0_s_data_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_done(partition_U0_ap_done),
    .ap_ready(partition_U0_ap_ready),
    .ap_idle(partition_U0_ap_idle),
    .ap_continue(partition_U0_ap_continue)
);

hls_recv_krnl_consumetrans consumetrans_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(consumetrans_U0_ap_start),
    .ap_done(consumetrans_U0_ap_done),
    .ap_continue(consumetrans_U0_ap_continue),
    .ap_idle(consumetrans_U0_ap_idle),
    .ap_ready(consumetrans_U0_ap_ready),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c45_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c45_empty_n),
    .ComputeWordCnt_loc_read(consumetrans_U0_ComputeWordCnt_loc_read),
    .s_data_out_dout(s_data_out_dout),
    .s_data_out_empty_n(s_data_out_empty_n),
    .s_data_out_read(consumetrans_U0_s_data_out_read)
);

hls_recv_krnl_prepare_sha prepare_sha_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(prepare_sha_U0_ap_start),
    .start_full_n(start_for_mysha_U0_full_n),
    .ap_done(prepare_sha_U0_ap_done),
    .ap_continue(prepare_sha_U0_ap_continue),
    .ap_idle(prepare_sha_U0_ap_idle),
    .ap_ready(prepare_sha_U0_ap_ready),
    .start_out(prepare_sha_U0_start_out),
    .start_write(prepare_sha_U0_start_write),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c46_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c46_empty_n),
    .ComputeWordCnt_loc_read(prepare_sha_U0_ComputeWordCnt_loc_read),
    .ComputeWordCnt_loc_out_din(prepare_sha_U0_ComputeWordCnt_loc_out_din),
    .ComputeWordCnt_loc_out_full_n(ComputeWordCnt_loc_c47_full_n),
    .ComputeWordCnt_loc_out_write(prepare_sha_U0_ComputeWordCnt_loc_out_write),
    .s_data_cal_dout(s_data_cal_dout),
    .s_data_cal_empty_n(s_data_cal_empty_n),
    .s_data_cal_read(prepare_sha_U0_s_data_cal_read),
    .endMsgLenStrm_din(prepare_sha_U0_endMsgLenStrm_din),
    .endMsgLenStrm_full_n(endMsgLenStrm_full_n),
    .endMsgLenStrm_write(prepare_sha_U0_endMsgLenStrm_write),
    .msgLenStrm_din(prepare_sha_U0_msgLenStrm_din),
    .msgLenStrm_full_n(msgLenStrm_full_n),
    .msgLenStrm_write(prepare_sha_U0_msgLenStrm_write),
    .msgStrm_din(prepare_sha_U0_msgStrm_din),
    .msgStrm_full_n(msgStrm_full_n),
    .msgStrm_write(prepare_sha_U0_msgStrm_write),
    .sha_in_din(prepare_sha_U0_sha_in_din),
    .sha_in_full_n(sha_in_full_n),
    .sha_in_write(prepare_sha_U0_sha_in_write)
);

hls_recv_krnl_mysha mysha_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(mysha_U0_ap_start),
    .start_full_n(mysha_U0_start_full_n),
    .ap_done(mysha_U0_ap_done),
    .ap_continue(mysha_U0_ap_continue),
    .ap_idle(mysha_U0_ap_idle),
    .ap_ready(mysha_U0_ap_ready),
    .start_out(mysha_U0_start_out),
    .start_write(mysha_U0_start_write),
    .timesha_din(mysha_U0_timesha_din),
    .timesha_full_n(timesha_full_n),
    .timesha_write(mysha_U0_timesha_write),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c47_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c47_empty_n),
    .ComputeWordCnt_loc_read(mysha_U0_ComputeWordCnt_loc_read),
    .ComputeWordCnt_loc_out_din(mysha_U0_ComputeWordCnt_loc_out_din),
    .ComputeWordCnt_loc_out_full_n(ComputeWordCnt_loc_c48_full_n),
    .ComputeWordCnt_loc_out_write(mysha_U0_ComputeWordCnt_loc_out_write),
    .ComputeWordCnt_loc_out1_din(mysha_U0_ComputeWordCnt_loc_out1_din),
    .ComputeWordCnt_loc_out1_full_n(ComputeWordCnt_loc_c49_full_n),
    .ComputeWordCnt_loc_out1_write(mysha_U0_ComputeWordCnt_loc_out1_write),
    .sha_in_dout(sha_in_dout),
    .sha_in_empty_n(sha_in_empty_n),
    .sha_in_read(mysha_U0_sha_in_read),
    .sha_out_din(mysha_U0_sha_out_din),
    .sha_out_full_n(sha_out_full_n),
    .sha_out_write(mysha_U0_sha_out_write),
    .endMsgLenStrm_dout(endMsgLenStrm_dout),
    .endMsgLenStrm_empty_n(endMsgLenStrm_empty_n),
    .endMsgLenStrm_read(mysha_U0_endMsgLenStrm_read),
    .msgLenStrm_dout(msgLenStrm_dout),
    .msgLenStrm_empty_n(msgLenStrm_empty_n),
    .msgLenStrm_read(mysha_U0_msgLenStrm_read),
    .msgStrm_dout(msgStrm_dout),
    .msgStrm_empty_n(msgStrm_empty_n),
    .msgStrm_read(mysha_U0_msgStrm_read),
    .digestStrm_din(mysha_U0_digestStrm_din),
    .digestStrm_full_n(digestStrm_full_n),
    .digestStrm_write(mysha_U0_digestStrm_write),
    .endDigestStrm_din(mysha_U0_endDigestStrm_din),
    .endDigestStrm_full_n(endDigestStrm_full_n),
    .endDigestStrm_write(mysha_U0_endDigestStrm_write)
);

hls_recv_krnl_consumesha consumesha_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(consumesha_U0_ap_start),
    .ap_done(consumesha_U0_ap_done),
    .ap_continue(consumesha_U0_ap_continue),
    .ap_idle(consumesha_U0_ap_idle),
    .ap_ready(consumesha_U0_ap_ready),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c48_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c48_empty_n),
    .ComputeWordCnt_loc_read(consumesha_U0_ComputeWordCnt_loc_read),
    .endDigestStrm_dout(endDigestStrm_dout),
    .endDigestStrm_empty_n(endDigestStrm_empty_n),
    .endDigestStrm_read(consumesha_U0_endDigestStrm_read),
    .digestStrm_dout(digestStrm_dout),
    .digestStrm_empty_n(digestStrm_empty_n),
    .digestStrm_read(consumesha_U0_digestStrm_read)
);

hls_recv_krnl_prepare_aes prepare_aes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(prepare_aes_U0_ap_start),
    .start_full_n(start_for_myaes_U0_full_n),
    .ap_done(prepare_aes_U0_ap_done),
    .ap_continue(prepare_aes_U0_ap_continue),
    .ap_idle(prepare_aes_U0_ap_idle),
    .ap_ready(prepare_aes_U0_ap_ready),
    .start_out(prepare_aes_U0_start_out),
    .start_write(prepare_aes_U0_start_write),
    .ciphertextStrm_din(prepare_aes_U0_ciphertextStrm_din),
    .ciphertextStrm_full_n(ciphertextStrm_full_n),
    .ciphertextStrm_write(prepare_aes_U0_ciphertextStrm_write),
    .endCiphertextStrm_din(prepare_aes_U0_endCiphertextStrm_din),
    .endCiphertextStrm_full_n(endCiphertextStrm_full_n),
    .endCiphertextStrm_write(prepare_aes_U0_endCiphertextStrm_write),
    .cipherkeyStrm_din(prepare_aes_U0_cipherkeyStrm_din),
    .cipherkeyStrm_full_n(cipherkeyStrm_full_n),
    .cipherkeyStrm_write(prepare_aes_U0_cipherkeyStrm_write),
    .IVStrm_din(prepare_aes_U0_IVStrm_din),
    .IVStrm_full_n(IVStrm_full_n),
    .IVStrm_write(prepare_aes_U0_IVStrm_write),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c49_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c49_empty_n),
    .ComputeWordCnt_loc_read(prepare_aes_U0_ComputeWordCnt_loc_read),
    .ComputeWordCnt_loc_out_din(prepare_aes_U0_ComputeWordCnt_loc_out_din),
    .ComputeWordCnt_loc_out_full_n(ComputeWordCnt_loc_c50_full_n),
    .ComputeWordCnt_loc_out_write(prepare_aes_U0_ComputeWordCnt_loc_out_write),
    .sha_out_dout(sha_out_dout),
    .sha_out_empty_n(sha_out_empty_n),
    .sha_out_read(prepare_aes_U0_sha_out_read)
);

hls_recv_krnl_myaes myaes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(myaes_U0_ap_start),
    .start_full_n(start_for_consumeaes_U0_full_n),
    .ap_done(myaes_U0_ap_done),
    .ap_continue(myaes_U0_ap_continue),
    .ap_idle(myaes_U0_ap_idle),
    .ap_ready(myaes_U0_ap_ready),
    .start_out(myaes_U0_start_out),
    .start_write(myaes_U0_start_write),
    .ciphertextStrm_dout(ciphertextStrm_dout),
    .ciphertextStrm_empty_n(ciphertextStrm_empty_n),
    .ciphertextStrm_read(myaes_U0_ciphertextStrm_read),
    .endCiphertextStrm_dout(endCiphertextStrm_dout),
    .endCiphertextStrm_empty_n(endCiphertextStrm_empty_n),
    .endCiphertextStrm_read(myaes_U0_endCiphertextStrm_read),
    .cipherkeyStrm_dout(cipherkeyStrm_dout),
    .cipherkeyStrm_empty_n(cipherkeyStrm_empty_n),
    .cipherkeyStrm_read(myaes_U0_cipherkeyStrm_read),
    .IVStrm_dout(IVStrm_dout),
    .IVStrm_empty_n(IVStrm_empty_n),
    .IVStrm_read(myaes_U0_IVStrm_read),
    .plaintextStrm_din(myaes_U0_plaintextStrm_din),
    .plaintextStrm_full_n(plaintextStrm_full_n),
    .plaintextStrm_write(myaes_U0_plaintextStrm_write),
    .endPlaintextStrm_din(myaes_U0_endPlaintextStrm_din),
    .endPlaintextStrm_full_n(endPlaintextStrm_full_n),
    .endPlaintextStrm_write(myaes_U0_endPlaintextStrm_write),
    .timeaes_din(myaes_U0_timeaes_din),
    .timeaes_full_n(timeaes_full_n),
    .timeaes_write(myaes_U0_timeaes_write),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c50_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c50_empty_n),
    .ComputeWordCnt_loc_read(myaes_U0_ComputeWordCnt_loc_read),
    .ComputeWordCnt_loc_out_din(myaes_U0_ComputeWordCnt_loc_out_din),
    .ComputeWordCnt_loc_out_full_n(ComputeWordCnt_loc_c51_full_n),
    .ComputeWordCnt_loc_out_write(myaes_U0_ComputeWordCnt_loc_out_write)
);

hls_recv_krnl_consumeaes consumeaes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(consumeaes_U0_ap_start),
    .ap_done(consumeaes_U0_ap_done),
    .ap_continue(consumeaes_U0_ap_continue),
    .ap_idle(consumeaes_U0_ap_idle),
    .ap_ready(consumeaes_U0_ap_ready),
    .plaintextStrm_dout(plaintextStrm_dout),
    .plaintextStrm_empty_n(plaintextStrm_empty_n),
    .plaintextStrm_read(consumeaes_U0_plaintextStrm_read),
    .endPlaintextStrm_dout(endPlaintextStrm_dout),
    .endPlaintextStrm_empty_n(endPlaintextStrm_empty_n),
    .endPlaintextStrm_read(consumeaes_U0_endPlaintextStrm_read),
    .ComputeWordCnt_loc_dout(ComputeWordCnt_loc_c51_dout),
    .ComputeWordCnt_loc_empty_n(ComputeWordCnt_loc_c51_empty_n),
    .ComputeWordCnt_loc_read(consumeaes_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_tie_off_tcp_open_connection tie_off_tcp_open_connection_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tie_off_tcp_open_connection_U0_ap_start),
    .ap_done(tie_off_tcp_open_connection_U0_ap_done),
    .ap_continue(tie_off_tcp_open_connection_U0_ap_continue),
    .ap_idle(tie_off_tcp_open_connection_U0_ap_idle),
    .ap_ready(tie_off_tcp_open_connection_U0_ap_ready),
    .m_axis_tcp_open_connection_TDATA(tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TDATA),
    .m_axis_tcp_open_connection_TVALID(tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TVALID),
    .m_axis_tcp_open_connection_TREADY(m_axis_tcp_open_connection_TREADY),
    .m_axis_tcp_open_connection_TKEEP(tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TKEEP),
    .m_axis_tcp_open_connection_TSTRB(tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TSTRB),
    .m_axis_tcp_open_connection_TLAST(tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TLAST),
    .s_axis_tcp_open_status_TDATA(s_axis_tcp_open_status_TDATA),
    .s_axis_tcp_open_status_TVALID(s_axis_tcp_open_status_TVALID),
    .s_axis_tcp_open_status_TREADY(tie_off_tcp_open_connection_U0_s_axis_tcp_open_status_TREADY),
    .s_axis_tcp_open_status_TKEEP(s_axis_tcp_open_status_TKEEP),
    .s_axis_tcp_open_status_TSTRB(s_axis_tcp_open_status_TSTRB),
    .s_axis_tcp_open_status_TLAST(s_axis_tcp_open_status_TLAST)
);

hls_recv_krnl_tie_off_tcp_tx tie_off_tcp_tx_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tie_off_tcp_tx_U0_ap_start),
    .ap_done(tie_off_tcp_tx_U0_ap_done),
    .ap_continue(tie_off_tcp_tx_U0_ap_continue),
    .ap_idle(tie_off_tcp_tx_U0_ap_idle),
    .ap_ready(tie_off_tcp_tx_U0_ap_ready),
    .m_axis_tcp_tx_meta_TDATA(tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TDATA),
    .m_axis_tcp_tx_meta_TVALID(tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TVALID),
    .m_axis_tcp_tx_meta_TREADY(m_axis_tcp_tx_meta_TREADY),
    .m_axis_tcp_tx_meta_TKEEP(tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TKEEP),
    .m_axis_tcp_tx_meta_TSTRB(tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TSTRB),
    .m_axis_tcp_tx_meta_TLAST(tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TLAST),
    .m_axis_tcp_tx_data_TDATA(tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TDATA),
    .m_axis_tcp_tx_data_TVALID(tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TVALID),
    .m_axis_tcp_tx_data_TREADY(m_axis_tcp_tx_data_TREADY),
    .m_axis_tcp_tx_data_TKEEP(tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TKEEP),
    .m_axis_tcp_tx_data_TSTRB(tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TSTRB),
    .m_axis_tcp_tx_data_TLAST(tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TLAST),
    .s_axis_tcp_tx_status_TDATA(s_axis_tcp_tx_status_TDATA),
    .s_axis_tcp_tx_status_TVALID(s_axis_tcp_tx_status_TVALID),
    .s_axis_tcp_tx_status_TREADY(tie_off_tcp_tx_U0_s_axis_tcp_tx_status_TREADY),
    .s_axis_tcp_tx_status_TKEEP(s_axis_tcp_tx_status_TKEEP),
    .s_axis_tcp_tx_status_TSTRB(s_axis_tcp_tx_status_TSTRB),
    .s_axis_tcp_tx_status_TLAST(s_axis_tcp_tx_status_TLAST)
);

hls_recv_krnl_tie_off_udp tie_off_udp_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tie_off_udp_U0_ap_start),
    .ap_done(tie_off_udp_U0_ap_done),
    .ap_continue(tie_off_udp_U0_ap_continue),
    .ap_idle(tie_off_udp_U0_ap_idle),
    .ap_ready(tie_off_udp_U0_ap_ready),
    .s_axis_udp_rx_TDATA(s_axis_udp_rx_TDATA),
    .s_axis_udp_rx_TVALID(s_axis_udp_rx_TVALID),
    .s_axis_udp_rx_TREADY(tie_off_udp_U0_s_axis_udp_rx_TREADY),
    .s_axis_udp_rx_TKEEP(s_axis_udp_rx_TKEEP),
    .s_axis_udp_rx_TSTRB(s_axis_udp_rx_TSTRB),
    .s_axis_udp_rx_TLAST(s_axis_udp_rx_TLAST),
    .m_axis_udp_tx_TDATA(tie_off_udp_U0_m_axis_udp_tx_TDATA),
    .m_axis_udp_tx_TVALID(tie_off_udp_U0_m_axis_udp_tx_TVALID),
    .m_axis_udp_tx_TREADY(m_axis_udp_tx_TREADY),
    .m_axis_udp_tx_TKEEP(tie_off_udp_U0_m_axis_udp_tx_TKEEP),
    .m_axis_udp_tx_TSTRB(tie_off_udp_U0_m_axis_udp_tx_TSTRB),
    .m_axis_udp_tx_TLAST(tie_off_udp_U0_m_axis_udp_tx_TLAST),
    .s_axis_udp_rx_meta_TDATA(s_axis_udp_rx_meta_TDATA),
    .s_axis_udp_rx_meta_TVALID(s_axis_udp_rx_meta_TVALID),
    .s_axis_udp_rx_meta_TREADY(tie_off_udp_U0_s_axis_udp_rx_meta_TREADY),
    .s_axis_udp_rx_meta_TKEEP(s_axis_udp_rx_meta_TKEEP),
    .s_axis_udp_rx_meta_TSTRB(s_axis_udp_rx_meta_TSTRB),
    .s_axis_udp_rx_meta_TLAST(s_axis_udp_rx_meta_TLAST),
    .m_axis_udp_tx_meta_TDATA(tie_off_udp_U0_m_axis_udp_tx_meta_TDATA),
    .m_axis_udp_tx_meta_TVALID(tie_off_udp_U0_m_axis_udp_tx_meta_TVALID),
    .m_axis_udp_tx_meta_TREADY(m_axis_udp_tx_meta_TREADY),
    .m_axis_udp_tx_meta_TKEEP(tie_off_udp_U0_m_axis_udp_tx_meta_TKEEP),
    .m_axis_udp_tx_meta_TSTRB(tie_off_udp_U0_m_axis_udp_tx_meta_TSTRB),
    .m_axis_udp_tx_meta_TLAST(tie_off_udp_U0_m_axis_udp_tx_meta_TLAST)
);

hls_recv_krnl_tie_off_tcp_close_con tie_off_tcp_close_con_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tie_off_tcp_close_con_U0_ap_start),
    .ap_done(tie_off_tcp_close_con_U0_ap_done),
    .ap_continue(tie_off_tcp_close_con_U0_ap_continue),
    .ap_idle(tie_off_tcp_close_con_U0_ap_idle),
    .ap_ready(tie_off_tcp_close_con_U0_ap_ready),
    .m_axis_tcp_close_connection_TDATA(tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TDATA),
    .m_axis_tcp_close_connection_TVALID(tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TVALID),
    .m_axis_tcp_close_connection_TREADY(m_axis_tcp_close_connection_TREADY),
    .m_axis_tcp_close_connection_TKEEP(tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TKEEP),
    .m_axis_tcp_close_connection_TSTRB(tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TSTRB),
    .m_axis_tcp_close_connection_TLAST(tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TLAST)
);

hls_recv_krnl_fifo_w32_d2_S_x useConn_c1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry3_U0_useConn_out_din),
    .if_full_n(useConn_c1_full_n),
    .if_write(hls_recv_krnl_entry3_U0_useConn_out_write),
    .if_dout(useConn_c1_dout),
    .if_empty_n(useConn_c1_empty_n),
    .if_read(hls_recv_krnl_entry45_U0_useConn_read)
);

hls_recv_krnl_fifo_w32_d2_S_x basePort_c2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry3_U0_basePort_out_din),
    .if_full_n(basePort_c2_full_n),
    .if_write(hls_recv_krnl_entry3_U0_basePort_out_write),
    .if_dout(basePort_c2_dout),
    .if_empty_n(basePort_c2_empty_n),
    .if_read(hls_recv_krnl_entry45_U0_basePort_read)
);

hls_recv_krnl_fifo_w64_d2_S_x expectedRxByteCnt_c3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_din),
    .if_full_n(expectedRxByteCnt_c3_full_n),
    .if_write(hls_recv_krnl_entry3_U0_expectedRxByteCnt_out_write),
    .if_dout(expectedRxByteCnt_c3_dout),
    .if_empty_n(expectedRxByteCnt_c3_empty_n),
    .if_read(hls_recv_krnl_entry45_U0_expectedRxByteCnt_read)
);

hls_recv_krnl_fifo_w64_d2_S_x out_time_c4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry3_U0_out_time_out_din),
    .if_full_n(out_time_c4_full_n),
    .if_write(hls_recv_krnl_entry3_U0_out_time_out_write),
    .if_dout(out_time_c4_dout),
    .if_empty_n(out_time_c4_empty_n),
    .if_read(hls_recv_krnl_entry45_U0_out_time_read)
);

hls_recv_krnl_fifo_w32_d2_S_x useConn_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry45_U0_useConn_out_din),
    .if_full_n(useConn_c_full_n),
    .if_write(hls_recv_krnl_entry45_U0_useConn_out_write),
    .if_dout(useConn_c_dout),
    .if_empty_n(useConn_c_empty_n),
    .if_read(listenPorts_U0_useConn_read)
);

hls_recv_krnl_fifo_w32_d2_S_x basePort_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry45_U0_basePort_out_din),
    .if_full_n(basePort_c_full_n),
    .if_write(hls_recv_krnl_entry45_U0_basePort_out_write),
    .if_dout(basePort_c_dout),
    .if_empty_n(basePort_c_empty_n),
    .if_read(listenPorts_U0_basePort_read)
);

hls_recv_krnl_fifo_w64_d2_S_x expectedRxByteCnt_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_din),
    .if_full_n(expectedRxByteCnt_c_full_n),
    .if_write(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out_write),
    .if_dout(expectedRxByteCnt_c_dout),
    .if_empty_n(expectedRxByteCnt_c_empty_n),
    .if_read(Block_split11_proc_U0_expectedRxByteCnt_read)
);

hls_recv_krnl_fifo_w64_d2_S_x expectedRxByteCnt_c44_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_din),
    .if_full_n(expectedRxByteCnt_c44_full_n),
    .if_write(hls_recv_krnl_entry45_U0_expectedRxByteCnt_out1_write),
    .if_dout(expectedRxByteCnt_c44_dout),
    .if_empty_n(expectedRxByteCnt_c44_empty_n),
    .if_read(recvData_U0_expRxBytePerSession_read)
);

hls_recv_krnl_fifo_w64_d2_S_x out_time_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(hls_recv_krnl_entry45_U0_out_time_out_din),
    .if_full_n(out_time_c_full_n),
    .if_write(hls_recv_krnl_entry45_U0_out_time_out_write),
    .if_dout(out_time_c_dout),
    .if_empty_n(out_time_c_empty_n),
    .if_read(backgroundclock_U0_out_time_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split11_proc_U0_ComputeWordCnt_out_out_din),
    .if_full_n(ComputeWordCnt_loc_c_full_n),
    .if_write(Block_split11_proc_U0_ComputeWordCnt_out_out_write),
    .if_dout(ComputeWordCnt_loc_c_dout),
    .if_empty_n(ComputeWordCnt_loc_c_empty_n),
    .if_read(partition_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w512_d2_S s_data_net_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(recvData_U0_s_data_net_out_din),
    .if_full_n(s_data_net_out_full_n),
    .if_write(recvData_U0_s_data_net_out_write),
    .if_dout(s_data_net_out_dout),
    .if_empty_n(s_data_net_out_empty_n),
    .if_read(partition_U0_s_data_net_out_read)
);

hls_recv_krnl_fifo_w32_d2_S_x timesha_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_timesha_din),
    .if_full_n(timesha_full_n),
    .if_write(mysha_U0_timesha_write),
    .if_dout(timesha_dout),
    .if_empty_n(timesha_empty_n),
    .if_read(backgroundclock_U0_timesha_read)
);

hls_recv_krnl_fifo_w32_d2_S_x timeaes_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(myaes_U0_timeaes_din),
    .if_full_n(timeaes_full_n),
    .if_write(myaes_U0_timeaes_write),
    .if_dout(timeaes_dout),
    .if_empty_n(timeaes_empty_n),
    .if_read(backgroundclock_U0_timeaes_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c45_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(partition_U0_ComputeWordCnt_loc_out_din),
    .if_full_n(ComputeWordCnt_loc_c45_full_n),
    .if_write(partition_U0_ComputeWordCnt_loc_out_write),
    .if_dout(ComputeWordCnt_loc_c45_dout),
    .if_empty_n(ComputeWordCnt_loc_c45_empty_n),
    .if_read(consumetrans_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c46_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(partition_U0_ComputeWordCnt_loc_out1_din),
    .if_full_n(ComputeWordCnt_loc_c46_full_n),
    .if_write(partition_U0_ComputeWordCnt_loc_out1_write),
    .if_dout(ComputeWordCnt_loc_c46_dout),
    .if_empty_n(ComputeWordCnt_loc_c46_empty_n),
    .if_read(prepare_sha_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w512_d2_S s_data_cal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(partition_U0_s_data_cal_din),
    .if_full_n(s_data_cal_full_n),
    .if_write(partition_U0_s_data_cal_write),
    .if_dout(s_data_cal_dout),
    .if_empty_n(s_data_cal_empty_n),
    .if_read(prepare_sha_U0_s_data_cal_read)
);

hls_recv_krnl_fifo_w512_d2_S s_data_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(partition_U0_s_data_out_din),
    .if_full_n(s_data_out_full_n),
    .if_write(partition_U0_s_data_out_write),
    .if_dout(s_data_out_dout),
    .if_empty_n(s_data_out_empty_n),
    .if_read(consumetrans_U0_s_data_out_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c47_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_sha_U0_ComputeWordCnt_loc_out_din),
    .if_full_n(ComputeWordCnt_loc_c47_full_n),
    .if_write(prepare_sha_U0_ComputeWordCnt_loc_out_write),
    .if_dout(ComputeWordCnt_loc_c47_dout),
    .if_empty_n(ComputeWordCnt_loc_c47_empty_n),
    .if_read(mysha_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w1_d1_S endMsgLenStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_sha_U0_endMsgLenStrm_din),
    .if_full_n(endMsgLenStrm_full_n),
    .if_write(prepare_sha_U0_endMsgLenStrm_write),
    .if_dout(endMsgLenStrm_dout),
    .if_empty_n(endMsgLenStrm_empty_n),
    .if_read(mysha_U0_endMsgLenStrm_read)
);

hls_recv_krnl_fifo_w128_d2_S msgLenStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_sha_U0_msgLenStrm_din),
    .if_full_n(msgLenStrm_full_n),
    .if_write(prepare_sha_U0_msgLenStrm_write),
    .if_dout(msgLenStrm_dout),
    .if_empty_n(msgLenStrm_empty_n),
    .if_read(mysha_U0_msgLenStrm_read)
);

hls_recv_krnl_fifo_w64_d2_S_x msgStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_sha_U0_msgStrm_din),
    .if_full_n(msgStrm_full_n),
    .if_write(prepare_sha_U0_msgStrm_write),
    .if_dout(msgStrm_dout),
    .if_empty_n(msgStrm_empty_n),
    .if_read(mysha_U0_msgStrm_read)
);

hls_recv_krnl_fifo_w512_d2_S sha_in_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_sha_U0_sha_in_din),
    .if_full_n(sha_in_full_n),
    .if_write(prepare_sha_U0_sha_in_write),
    .if_dout(sha_in_dout),
    .if_empty_n(sha_in_empty_n),
    .if_read(mysha_U0_sha_in_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c48_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_ComputeWordCnt_loc_out_din),
    .if_full_n(ComputeWordCnt_loc_c48_full_n),
    .if_write(mysha_U0_ComputeWordCnt_loc_out_write),
    .if_dout(ComputeWordCnt_loc_c48_dout),
    .if_empty_n(ComputeWordCnt_loc_c48_empty_n),
    .if_read(consumesha_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c49_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_ComputeWordCnt_loc_out1_din),
    .if_full_n(ComputeWordCnt_loc_c49_full_n),
    .if_write(mysha_U0_ComputeWordCnt_loc_out1_write),
    .if_dout(ComputeWordCnt_loc_c49_dout),
    .if_empty_n(ComputeWordCnt_loc_c49_empty_n),
    .if_read(prepare_aes_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w512_d2_S sha_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_sha_out_din),
    .if_full_n(sha_out_full_n),
    .if_write(mysha_U0_sha_out_write),
    .if_dout(sha_out_dout),
    .if_empty_n(sha_out_empty_n),
    .if_read(prepare_aes_U0_sha_out_read)
);

hls_recv_krnl_fifo_w256_d2_S digestStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_digestStrm_din),
    .if_full_n(digestStrm_full_n),
    .if_write(mysha_U0_digestStrm_write),
    .if_dout(digestStrm_dout),
    .if_empty_n(digestStrm_empty_n),
    .if_read(consumesha_U0_digestStrm_read)
);

hls_recv_krnl_fifo_w1_d1_S endDigestStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mysha_U0_endDigestStrm_din),
    .if_full_n(endDigestStrm_full_n),
    .if_write(mysha_U0_endDigestStrm_write),
    .if_dout(endDigestStrm_dout),
    .if_empty_n(endDigestStrm_empty_n),
    .if_read(consumesha_U0_endDigestStrm_read)
);

hls_recv_krnl_fifo_w128_d2_S ciphertextStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_aes_U0_ciphertextStrm_din),
    .if_full_n(ciphertextStrm_full_n),
    .if_write(prepare_aes_U0_ciphertextStrm_write),
    .if_dout(ciphertextStrm_dout),
    .if_empty_n(ciphertextStrm_empty_n),
    .if_read(myaes_U0_ciphertextStrm_read)
);

hls_recv_krnl_fifo_w1_d1_S endCiphertextStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_aes_U0_endCiphertextStrm_din),
    .if_full_n(endCiphertextStrm_full_n),
    .if_write(prepare_aes_U0_endCiphertextStrm_write),
    .if_dout(endCiphertextStrm_dout),
    .if_empty_n(endCiphertextStrm_empty_n),
    .if_read(myaes_U0_endCiphertextStrm_read)
);

hls_recv_krnl_fifo_w256_d2_S cipherkeyStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_aes_U0_cipherkeyStrm_din),
    .if_full_n(cipherkeyStrm_full_n),
    .if_write(prepare_aes_U0_cipherkeyStrm_write),
    .if_dout(cipherkeyStrm_dout),
    .if_empty_n(cipherkeyStrm_empty_n),
    .if_read(myaes_U0_cipherkeyStrm_read)
);

hls_recv_krnl_fifo_w128_d2_S IVStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_aes_U0_IVStrm_din),
    .if_full_n(IVStrm_full_n),
    .if_write(prepare_aes_U0_IVStrm_write),
    .if_dout(IVStrm_dout),
    .if_empty_n(IVStrm_empty_n),
    .if_read(myaes_U0_IVStrm_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c50_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(prepare_aes_U0_ComputeWordCnt_loc_out_din),
    .if_full_n(ComputeWordCnt_loc_c50_full_n),
    .if_write(prepare_aes_U0_ComputeWordCnt_loc_out_write),
    .if_dout(ComputeWordCnt_loc_c50_dout),
    .if_empty_n(ComputeWordCnt_loc_c50_empty_n),
    .if_read(myaes_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_fifo_w128_d2_S plaintextStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(myaes_U0_plaintextStrm_din),
    .if_full_n(plaintextStrm_full_n),
    .if_write(myaes_U0_plaintextStrm_write),
    .if_dout(plaintextStrm_dout),
    .if_empty_n(plaintextStrm_empty_n),
    .if_read(consumeaes_U0_plaintextStrm_read)
);

hls_recv_krnl_fifo_w1_d1_S endPlaintextStrm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(myaes_U0_endPlaintextStrm_din),
    .if_full_n(endPlaintextStrm_full_n),
    .if_write(myaes_U0_endPlaintextStrm_write),
    .if_dout(endPlaintextStrm_dout),
    .if_empty_n(endPlaintextStrm_empty_n),
    .if_read(consumeaes_U0_endPlaintextStrm_read)
);

hls_recv_krnl_fifo_w32_d2_S_x ComputeWordCnt_loc_c51_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(myaes_U0_ComputeWordCnt_loc_out_din),
    .if_full_n(ComputeWordCnt_loc_c51_full_n),
    .if_write(myaes_U0_ComputeWordCnt_loc_out_write),
    .if_dout(ComputeWordCnt_loc_c51_dout),
    .if_empty_n(ComputeWordCnt_loc_c51_empty_n),
    .if_read(consumeaes_U0_ComputeWordCnt_loc_read)
);

hls_recv_krnl_start_for_hls_recv_krnl_entry45_U0 start_for_hls_recv_krnl_entry45_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_hls_recv_krnl_entry45_U0_din),
    .if_full_n(start_for_hls_recv_krnl_entry45_U0_full_n),
    .if_write(hls_recv_krnl_entry3_U0_start_write),
    .if_dout(start_for_hls_recv_krnl_entry45_U0_dout),
    .if_empty_n(start_for_hls_recv_krnl_entry45_U0_empty_n),
    .if_read(hls_recv_krnl_entry45_U0_ap_ready)
);

hls_recv_krnl_start_for_Block_split11_proc_U0 start_for_Block_split11_proc_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Block_split11_proc_U0_din),
    .if_full_n(start_for_Block_split11_proc_U0_full_n),
    .if_write(hls_recv_krnl_entry45_U0_start_write),
    .if_dout(start_for_Block_split11_proc_U0_dout),
    .if_empty_n(start_for_Block_split11_proc_U0_empty_n),
    .if_read(Block_split11_proc_U0_ap_ready)
);

hls_recv_krnl_start_for_listenPorts_U0 start_for_listenPorts_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_listenPorts_U0_din),
    .if_full_n(start_for_listenPorts_U0_full_n),
    .if_write(hls_recv_krnl_entry45_U0_start_write),
    .if_dout(start_for_listenPorts_U0_dout),
    .if_empty_n(start_for_listenPorts_U0_empty_n),
    .if_read(listenPorts_U0_ap_ready)
);

hls_recv_krnl_start_for_recvData_U0 start_for_recvData_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_recvData_U0_din),
    .if_full_n(start_for_recvData_U0_full_n),
    .if_write(hls_recv_krnl_entry45_U0_start_write),
    .if_dout(start_for_recvData_U0_dout),
    .if_empty_n(start_for_recvData_U0_empty_n),
    .if_read(recvData_U0_ap_ready)
);

hls_recv_krnl_start_for_backgroundclock_U0 start_for_backgroundclock_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_backgroundclock_U0_din),
    .if_full_n(start_for_backgroundclock_U0_full_n),
    .if_write(hls_recv_krnl_entry45_U0_start_write),
    .if_dout(start_for_backgroundclock_U0_dout),
    .if_empty_n(start_for_backgroundclock_U0_empty_n),
    .if_read(backgroundclock_U0_ap_ready)
);

hls_recv_krnl_start_for_partition_U0 start_for_partition_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_partition_U0_din),
    .if_full_n(start_for_partition_U0_full_n),
    .if_write(Block_split11_proc_U0_start_write),
    .if_dout(start_for_partition_U0_dout),
    .if_empty_n(start_for_partition_U0_empty_n),
    .if_read(partition_U0_ap_ready)
);

hls_recv_krnl_start_for_consumetrans_U0 start_for_consumetrans_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_consumetrans_U0_din),
    .if_full_n(start_for_consumetrans_U0_full_n),
    .if_write(partition_U0_start_write),
    .if_dout(start_for_consumetrans_U0_dout),
    .if_empty_n(start_for_consumetrans_U0_empty_n),
    .if_read(consumetrans_U0_ap_ready)
);

hls_recv_krnl_start_for_prepare_sha_U0 start_for_prepare_sha_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_prepare_sha_U0_din),
    .if_full_n(start_for_prepare_sha_U0_full_n),
    .if_write(partition_U0_start_write),
    .if_dout(start_for_prepare_sha_U0_dout),
    .if_empty_n(start_for_prepare_sha_U0_empty_n),
    .if_read(prepare_sha_U0_ap_ready)
);

hls_recv_krnl_start_for_mysha_U0 start_for_mysha_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_mysha_U0_din),
    .if_full_n(start_for_mysha_U0_full_n),
    .if_write(prepare_sha_U0_start_write),
    .if_dout(start_for_mysha_U0_dout),
    .if_empty_n(start_for_mysha_U0_empty_n),
    .if_read(mysha_U0_ap_ready)
);

hls_recv_krnl_start_for_consumesha_U0 start_for_consumesha_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_consumesha_U0_din),
    .if_full_n(start_for_consumesha_U0_full_n),
    .if_write(mysha_U0_start_write),
    .if_dout(start_for_consumesha_U0_dout),
    .if_empty_n(start_for_consumesha_U0_empty_n),
    .if_read(consumesha_U0_ap_ready)
);

hls_recv_krnl_start_for_prepare_aes_U0 start_for_prepare_aes_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_prepare_aes_U0_din),
    .if_full_n(start_for_prepare_aes_U0_full_n),
    .if_write(mysha_U0_start_write),
    .if_dout(start_for_prepare_aes_U0_dout),
    .if_empty_n(start_for_prepare_aes_U0_empty_n),
    .if_read(prepare_aes_U0_ap_ready)
);

hls_recv_krnl_start_for_myaes_U0 start_for_myaes_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_myaes_U0_din),
    .if_full_n(start_for_myaes_U0_full_n),
    .if_write(prepare_aes_U0_start_write),
    .if_dout(start_for_myaes_U0_dout),
    .if_empty_n(start_for_myaes_U0_empty_n),
    .if_read(myaes_U0_ap_ready)
);

hls_recv_krnl_start_for_consumeaes_U0 start_for_consumeaes_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_consumeaes_U0_din),
    .if_full_n(start_for_consumeaes_U0_full_n),
    .if_write(myaes_U0_start_write),
    .if_dout(start_for_consumeaes_U0_dout),
    .if_empty_n(start_for_consumeaes_U0_empty_n),
    .if_read(consumeaes_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready <= ap_sync_hls_recv_krnl_entry3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready <= ap_sync_tie_off_tcp_close_con_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready <= ap_sync_tie_off_tcp_open_connection_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_tie_off_tcp_tx_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_tie_off_tcp_tx_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_tie_off_tcp_tx_U0_ap_ready <= ap_sync_tie_off_tcp_tx_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_tie_off_udp_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_tie_off_udp_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_tie_off_udp_U0_ap_ready <= ap_sync_tie_off_udp_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign Block_split11_proc_U0_ap_continue = 1'b1;

assign Block_split11_proc_U0_ap_start = start_for_Block_split11_proc_U0_empty_n;

assign ap_done = ap_sync_done;

assign ap_idle = (tie_off_udp_U0_ap_idle & tie_off_tcp_tx_U0_ap_idle & tie_off_tcp_open_connection_U0_ap_idle & tie_off_tcp_close_con_U0_ap_idle & recvData_U0_ap_idle & prepare_sha_U0_ap_idle & prepare_aes_U0_ap_idle & partition_U0_ap_idle & mysha_U0_ap_idle & myaes_U0_ap_idle & listenPorts_U0_ap_idle & hls_recv_krnl_entry45_U0_ap_idle & hls_recv_krnl_entry3_U0_ap_idle & consumetrans_U0_ap_idle & consumesha_U0_ap_idle & consumeaes_U0_ap_idle & backgroundclock_U0_ap_idle & Block_split11_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (tie_off_udp_U0_ap_done & tie_off_tcp_tx_U0_ap_done & tie_off_tcp_open_connection_U0_ap_done & tie_off_tcp_close_con_U0_ap_done & recvData_U0_ap_done & listenPorts_U0_ap_done & consumetrans_U0_ap_done & consumesha_U0_ap_done & consumeaes_U0_ap_done & backgroundclock_U0_ap_done);

assign ap_sync_hls_recv_krnl_entry3_U0_ap_ready = (hls_recv_krnl_entry3_U0_ap_ready | ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready);

assign ap_sync_ready = (ap_sync_tie_off_udp_U0_ap_ready & ap_sync_tie_off_tcp_tx_U0_ap_ready & ap_sync_tie_off_tcp_open_connection_U0_ap_ready & ap_sync_tie_off_tcp_close_con_U0_ap_ready & ap_sync_hls_recv_krnl_entry3_U0_ap_ready);

assign ap_sync_tie_off_tcp_close_con_U0_ap_ready = (tie_off_tcp_close_con_U0_ap_ready | ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready);

assign ap_sync_tie_off_tcp_open_connection_U0_ap_ready = (tie_off_tcp_open_connection_U0_ap_ready | ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready);

assign ap_sync_tie_off_tcp_tx_U0_ap_ready = (tie_off_tcp_tx_U0_ap_ready | ap_sync_reg_tie_off_tcp_tx_U0_ap_ready);

assign ap_sync_tie_off_udp_U0_ap_ready = (tie_off_udp_U0_ap_ready | ap_sync_reg_tie_off_udp_U0_ap_ready);

assign backgroundclock_U0_ap_continue = ap_sync_continue;

assign backgroundclock_U0_ap_start = start_for_backgroundclock_U0_empty_n;

assign backgroundclock_U0_start_full_n = 1'b1;

assign backgroundclock_U0_start_write = 1'b0;

assign consumeaes_U0_ap_continue = ap_sync_continue;

assign consumeaes_U0_ap_start = start_for_consumeaes_U0_empty_n;

assign consumeaes_U0_start_full_n = 1'b1;

assign consumeaes_U0_start_write = 1'b0;

assign consumesha_U0_ap_continue = ap_sync_continue;

assign consumesha_U0_ap_start = start_for_consumesha_U0_empty_n;

assign consumesha_U0_start_full_n = 1'b1;

assign consumesha_U0_start_write = 1'b0;

assign consumetrans_U0_ap_continue = ap_sync_continue;

assign consumetrans_U0_ap_start = start_for_consumetrans_U0_empty_n;

assign consumetrans_U0_start_full_n = 1'b1;

assign consumetrans_U0_start_write = 1'b0;

assign hls_recv_krnl_entry3_U0_ap_continue = 1'b1;

assign hls_recv_krnl_entry3_U0_ap_start = ((ap_sync_reg_hls_recv_krnl_entry3_U0_ap_ready ^ 1'b1) & ap_start);

assign hls_recv_krnl_entry45_U0_ap_continue = 1'b1;

assign hls_recv_krnl_entry45_U0_ap_start = start_for_hls_recv_krnl_entry45_U0_empty_n;

assign hls_recv_krnl_entry45_U0_start_full_n = (start_for_recvData_U0_full_n & start_for_listenPorts_U0_full_n & start_for_backgroundclock_U0_full_n & start_for_Block_split11_proc_U0_full_n);

assign listenPorts_U0_ap_continue = ap_sync_continue;

assign listenPorts_U0_ap_start = start_for_listenPorts_U0_empty_n;

assign listenPorts_U0_start_full_n = 1'b1;

assign listenPorts_U0_start_write = 1'b0;

assign m_axis_tcp_close_connection_TDATA = tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TDATA;

assign m_axis_tcp_close_connection_TKEEP = tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TKEEP;

assign m_axis_tcp_close_connection_TLAST = tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TLAST;

assign m_axis_tcp_close_connection_TSTRB = tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TSTRB;

assign m_axis_tcp_close_connection_TVALID = tie_off_tcp_close_con_U0_m_axis_tcp_close_connection_TVALID;

assign m_axis_tcp_listen_port_TDATA = listenPorts_U0_m_axis_tcp_listen_port_TDATA;

assign m_axis_tcp_listen_port_TKEEP = listenPorts_U0_m_axis_tcp_listen_port_TKEEP;

assign m_axis_tcp_listen_port_TLAST = listenPorts_U0_m_axis_tcp_listen_port_TLAST;

assign m_axis_tcp_listen_port_TSTRB = listenPorts_U0_m_axis_tcp_listen_port_TSTRB;

assign m_axis_tcp_listen_port_TVALID = listenPorts_U0_m_axis_tcp_listen_port_TVALID;

assign m_axis_tcp_open_connection_TDATA = tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TDATA;

assign m_axis_tcp_open_connection_TKEEP = tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TKEEP;

assign m_axis_tcp_open_connection_TLAST = tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TLAST;

assign m_axis_tcp_open_connection_TSTRB = tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TSTRB;

assign m_axis_tcp_open_connection_TVALID = tie_off_tcp_open_connection_U0_m_axis_tcp_open_connection_TVALID;

assign m_axis_tcp_read_pkg_TDATA = recvData_U0_m_axis_tcp_read_pkg_TDATA;

assign m_axis_tcp_read_pkg_TKEEP = recvData_U0_m_axis_tcp_read_pkg_TKEEP;

assign m_axis_tcp_read_pkg_TLAST = recvData_U0_m_axis_tcp_read_pkg_TLAST;

assign m_axis_tcp_read_pkg_TSTRB = recvData_U0_m_axis_tcp_read_pkg_TSTRB;

assign m_axis_tcp_read_pkg_TVALID = recvData_U0_m_axis_tcp_read_pkg_TVALID;

assign m_axis_tcp_tx_data_TDATA = tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TDATA;

assign m_axis_tcp_tx_data_TKEEP = tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TKEEP;

assign m_axis_tcp_tx_data_TLAST = tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TLAST;

assign m_axis_tcp_tx_data_TSTRB = tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TSTRB;

assign m_axis_tcp_tx_data_TVALID = tie_off_tcp_tx_U0_m_axis_tcp_tx_data_TVALID;

assign m_axis_tcp_tx_meta_TDATA = tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TDATA;

assign m_axis_tcp_tx_meta_TKEEP = tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TKEEP;

assign m_axis_tcp_tx_meta_TLAST = tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TLAST;

assign m_axis_tcp_tx_meta_TSTRB = tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TSTRB;

assign m_axis_tcp_tx_meta_TVALID = tie_off_tcp_tx_U0_m_axis_tcp_tx_meta_TVALID;

assign m_axis_udp_tx_TDATA = tie_off_udp_U0_m_axis_udp_tx_TDATA;

assign m_axis_udp_tx_TKEEP = tie_off_udp_U0_m_axis_udp_tx_TKEEP;

assign m_axis_udp_tx_TLAST = tie_off_udp_U0_m_axis_udp_tx_TLAST;

assign m_axis_udp_tx_TSTRB = tie_off_udp_U0_m_axis_udp_tx_TSTRB;

assign m_axis_udp_tx_TVALID = tie_off_udp_U0_m_axis_udp_tx_TVALID;

assign m_axis_udp_tx_meta_TDATA = tie_off_udp_U0_m_axis_udp_tx_meta_TDATA;

assign m_axis_udp_tx_meta_TKEEP = tie_off_udp_U0_m_axis_udp_tx_meta_TKEEP;

assign m_axis_udp_tx_meta_TLAST = tie_off_udp_U0_m_axis_udp_tx_meta_TLAST;

assign m_axis_udp_tx_meta_TSTRB = tie_off_udp_U0_m_axis_udp_tx_meta_TSTRB;

assign m_axis_udp_tx_meta_TVALID = tie_off_udp_U0_m_axis_udp_tx_meta_TVALID;

assign myaes_U0_ap_continue = 1'b1;

assign myaes_U0_ap_start = start_for_myaes_U0_empty_n;

assign mysha_U0_ap_continue = 1'b1;

assign mysha_U0_ap_start = start_for_mysha_U0_empty_n;

assign mysha_U0_start_full_n = (start_for_prepare_aes_U0_full_n & start_for_consumesha_U0_full_n);

assign partition_U0_ap_continue = 1'b1;

assign partition_U0_ap_start = start_for_partition_U0_empty_n;

assign partition_U0_start_full_n = (start_for_prepare_sha_U0_full_n & start_for_consumetrans_U0_full_n);

assign prepare_aes_U0_ap_continue = 1'b1;

assign prepare_aes_U0_ap_start = start_for_prepare_aes_U0_empty_n;

assign prepare_sha_U0_ap_continue = 1'b1;

assign prepare_sha_U0_ap_start = start_for_prepare_sha_U0_empty_n;

assign recvData_U0_ap_continue = ap_sync_continue;

assign recvData_U0_ap_start = start_for_recvData_U0_empty_n;

assign recvData_U0_start_full_n = 1'b1;

assign recvData_U0_start_write = 1'b0;

assign s_axis_tcp_notification_TREADY = recvData_U0_s_axis_tcp_notification_TREADY;

assign s_axis_tcp_open_status_TREADY = tie_off_tcp_open_connection_U0_s_axis_tcp_open_status_TREADY;

assign s_axis_tcp_port_status_TREADY = listenPorts_U0_s_axis_tcp_port_status_TREADY;

assign s_axis_tcp_rx_data_TREADY = recvData_U0_s_axis_tcp_rx_data_TREADY;

assign s_axis_tcp_rx_meta_TREADY = recvData_U0_s_axis_tcp_rx_meta_TREADY;

assign s_axis_tcp_tx_status_TREADY = tie_off_tcp_tx_U0_s_axis_tcp_tx_status_TREADY;

assign s_axis_udp_rx_TREADY = tie_off_udp_U0_s_axis_udp_rx_TREADY;

assign s_axis_udp_rx_meta_TREADY = tie_off_udp_U0_s_axis_udp_rx_meta_TREADY;

assign start_for_Block_split11_proc_U0_din = 1'b1;

assign start_for_backgroundclock_U0_din = 1'b1;

assign start_for_consumeaes_U0_din = 1'b1;

assign start_for_consumesha_U0_din = 1'b1;

assign start_for_consumetrans_U0_din = 1'b1;

assign start_for_hls_recv_krnl_entry45_U0_din = 1'b1;

assign start_for_listenPorts_U0_din = 1'b1;

assign start_for_myaes_U0_din = 1'b1;

assign start_for_mysha_U0_din = 1'b1;

assign start_for_partition_U0_din = 1'b1;

assign start_for_prepare_aes_U0_din = 1'b1;

assign start_for_prepare_sha_U0_din = 1'b1;

assign start_for_recvData_U0_din = 1'b1;

assign tie_off_tcp_close_con_U0_ap_continue = ap_sync_continue;

assign tie_off_tcp_close_con_U0_ap_start = ((ap_sync_reg_tie_off_tcp_close_con_U0_ap_ready ^ 1'b1) & ap_start);

assign tie_off_tcp_close_con_U0_start_full_n = 1'b1;

assign tie_off_tcp_close_con_U0_start_write = 1'b0;

assign tie_off_tcp_open_connection_U0_ap_continue = ap_sync_continue;

assign tie_off_tcp_open_connection_U0_ap_start = ((ap_sync_reg_tie_off_tcp_open_connection_U0_ap_ready ^ 1'b1) & ap_start);

assign tie_off_tcp_open_connection_U0_start_full_n = 1'b1;

assign tie_off_tcp_open_connection_U0_start_write = 1'b0;

assign tie_off_tcp_tx_U0_ap_continue = ap_sync_continue;

assign tie_off_tcp_tx_U0_ap_start = ((ap_sync_reg_tie_off_tcp_tx_U0_ap_ready ^ 1'b1) & ap_start);

assign tie_off_tcp_tx_U0_start_full_n = 1'b1;

assign tie_off_tcp_tx_U0_start_write = 1'b0;

assign tie_off_udp_U0_ap_continue = ap_sync_continue;

assign tie_off_udp_U0_ap_start = ((ap_sync_reg_tie_off_udp_U0_ap_ready ^ 1'b1) & ap_start);

assign tie_off_udp_U0_start_full_n = 1'b1;

assign tie_off_udp_U0_start_write = 1'b0;

endmodule //hls_recv_krnl
