-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_recv_krnl_partition is
port (
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    ComputeWordCnt_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ComputeWordCnt_loc_empty_n : IN STD_LOGIC;
    ComputeWordCnt_loc_read : OUT STD_LOGIC;
    ComputeWordCnt_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ComputeWordCnt_loc_out_full_n : IN STD_LOGIC;
    ComputeWordCnt_loc_out_write : OUT STD_LOGIC;
    ComputeWordCnt_loc_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ComputeWordCnt_loc_out1_full_n : IN STD_LOGIC;
    ComputeWordCnt_loc_out1_write : OUT STD_LOGIC;
    s_data_net_out_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    s_data_net_out_empty_n : IN STD_LOGIC;
    s_data_net_out_read : OUT STD_LOGIC;
    s_data_cal_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    s_data_cal_full_n : IN STD_LOGIC;
    s_data_cal_write : OUT STD_LOGIC;
    s_data_out_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    s_data_out_full_n : IN STD_LOGIC;
    s_data_out_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of hls_recv_krnl_partition is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal internal_ap_ready : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_start : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_done : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_continue : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_idle : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_ready : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_scalar_ComputeWordCnt_loc_read : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_write : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_write : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_net_out_read : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_din : STD_LOGIC_VECTOR (511 downto 0);
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_write : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_din : STD_LOGIC_VECTOR (511 downto 0);
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_start_full_n : STD_LOGIC;
    signal partition_Loop_VITIS_LOOP_71_1_proc2761_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hls_recv_krnl_partition_Loop_VITIS_LOOP_71_1_proc2761 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        scalar_ComputeWordCnt_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        scalar_ComputeWordCnt_loc_empty_n : IN STD_LOGIC;
        scalar_ComputeWordCnt_loc_read : OUT STD_LOGIC;
        ComputeWordCnt_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ComputeWordCnt_loc_out_full_n : IN STD_LOGIC;
        ComputeWordCnt_loc_out_write : OUT STD_LOGIC;
        ComputeWordCnt_loc_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ComputeWordCnt_loc_out1_full_n : IN STD_LOGIC;
        ComputeWordCnt_loc_out1_write : OUT STD_LOGIC;
        s_data_net_out_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        s_data_net_out_empty_n : IN STD_LOGIC;
        s_data_net_out_read : OUT STD_LOGIC;
        s_data_cal_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        s_data_cal_full_n : IN STD_LOGIC;
        s_data_cal_write : OUT STD_LOGIC;
        s_data_out_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        s_data_out_full_n : IN STD_LOGIC;
        s_data_out_write : OUT STD_LOGIC );
    end component;



begin
    partition_Loop_VITIS_LOOP_71_1_proc2761_U0 : component hls_recv_krnl_partition_Loop_VITIS_LOOP_71_1_proc2761
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_start,
        ap_done => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_done,
        ap_continue => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_continue,
        ap_idle => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_idle,
        ap_ready => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_ready,
        scalar_ComputeWordCnt_loc_dout => ComputeWordCnt_loc_dout,
        scalar_ComputeWordCnt_loc_empty_n => ComputeWordCnt_loc_empty_n,
        scalar_ComputeWordCnt_loc_read => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_scalar_ComputeWordCnt_loc_read,
        ComputeWordCnt_loc_out_din => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_din,
        ComputeWordCnt_loc_out_full_n => ComputeWordCnt_loc_out_full_n,
        ComputeWordCnt_loc_out_write => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_write,
        ComputeWordCnt_loc_out1_din => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_din,
        ComputeWordCnt_loc_out1_full_n => ComputeWordCnt_loc_out1_full_n,
        ComputeWordCnt_loc_out1_write => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_write,
        s_data_net_out_dout => s_data_net_out_dout,
        s_data_net_out_empty_n => s_data_net_out_empty_n,
        s_data_net_out_read => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_net_out_read,
        s_data_cal_din => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_din,
        s_data_cal_full_n => s_data_cal_full_n,
        s_data_cal_write => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_write,
        s_data_out_din => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_din,
        s_data_out_full_n => s_data_out_full_n,
        s_data_out_write => partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_write);





    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    ComputeWordCnt_loc_out1_din <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_din;
    ComputeWordCnt_loc_out1_write <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out1_write;
    ComputeWordCnt_loc_out_din <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_din;
    ComputeWordCnt_loc_out_write <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ComputeWordCnt_loc_out_write;
    ComputeWordCnt_loc_read <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_scalar_ComputeWordCnt_loc_read;
    ap_done <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_done;
    ap_idle <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_idle;
    ap_ready <= internal_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_done;
    ap_sync_ready <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_ready;
    internal_ap_ready <= ap_sync_ready;
    partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_continue <= ap_continue;
    partition_Loop_VITIS_LOOP_71_1_proc2761_U0_ap_start <= real_start;
    partition_Loop_VITIS_LOOP_71_1_proc2761_U0_start_full_n <= ap_const_logic_1;
    partition_Loop_VITIS_LOOP_71_1_proc2761_U0_start_write <= ap_const_logic_0;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    s_data_cal_din <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_din;
    s_data_cal_write <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_cal_write;
    s_data_net_out_read <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_net_out_read;
    s_data_out_din <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_din;
    s_data_out_write <= partition_Loop_VITIS_LOOP_71_1_proc2761_U0_s_data_out_write;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
